<?xml version = '1.0' encoding = 'UTF-8'?>
<snippets>
   <group category="0 - INVENTARIO" language="PLSQL">
      <snippet name="VIEW_RECEPCIONES" description="">
         <code>
            <![CDATA[/* ------------------------------------------------------------------------------ *\
    Nombre: VIEW_RECEPCIONES
    
    Descripcion: Vista que muestra las ordenes recepcionadas 
                 y su cotejo correspondiente
\* ------------------------------------------------------------------------------ */

/* ------------------------------------------------------------------------------ *\
    DEPENDENCIAS:

      - PRODDTA.F43121: Recepciones y cotejos
      - VIEW_USUARIOS : Vista con informacion del usuario
      - PRODDTA.F0911 : Asientos de diario
      - PRODDTA.F4101 : Catalogo de Items
      
\* ------------------------------------------------------------------------------ */

/* ------------------------------------------------------------------------------ *\
    OBSERVACIONES: 
    
    a) Al realizar el cotejo el nuevo registro conserva la misma informacion 
       de la orden de compra, pero cambia la fecha y usuario de la actualizaciÃ³n.
       Los unicos campos importantes del cotejo registrados en esta tabla el
       numero, tipo del documento del cotejo y fecha y usuario de la actualizacion, 
       lo demas es informacion de la orden de compra.
       
    b) En los asientos de diario solo se puede ligar mediante la compania, numero
       y tipo de orden, aunque tiene el campo de linea,los asientos no se guardan 
       por numero de linea sino por cargo/abono en determinada cuenta
       
\* ------------------------------------------------------------------------------ */



select
*
from (

      CREATE OR REPLACE FORCE VIEW "NUVPD"."VIEW_RECEPCIONES" ("OC_COMPANIA","OC_TIPO","OC","OC_LINEA","OC_LINEA_TIPO","OC_SUFIX","TRAN_COMPANIA","TRAN_UN","TRAN_TIPO","TRAN_TIPO_DESC","TRAN_LINEA","DOC_COMPANIA","DOC_TIPO","DOC","DOC_LINEA","DOC_JE_LINEA","DOC_FACTURA","PROVEEDOR","ITEM","ITEM_NUMERO","ITEM_DESCRIPCION","ITEM_GLCLASS","ORIGINADOR","ORIGINADOR_DESC","FECHA_CREACION","FECHA_TRAN","FECHA_LM","CANTIDAD_RECIB","UDM_RECIB","PU_EX", "MONTO_RECIB_EX", "MONEDA","TASA","PU_MX","MONTO_RECIB_MX","IMPUESTO","IMPUESTO_FLAG","BATCH", "BATCH_TIPO","ACTIVO","UBICACION","LOTE","CONTENEDOR","OBSERVACIONES","UPDATER","UPDATER_DESC","FECHA_UPDATE") as 
      select
          RECEIVE.PRKCOO AS OC_COMPANIA
          ,RECEIVE.PRDCTO AS OC_TIPO
          ,RECEIVE.PRDOCO as OC
          ,RECEIVE.PRLNID/1000 AS OC_LINEA
          ,TRIM(RECEIVE.PRLNTY) as OC_LINEA_TIPO
          ,RECEIVE.PRSFXO AS OC_SUFIX   
      
          ,RECEIVE.PRCO as TRAN_COMPANIA
          ,trim(RECEIVE.PRMCU) as TRAN_UN     
          ,RECEIVE.PRMATC as TRAN_TIPO
          ,CASE
            WHEN RECEIVE.PRMATC = 1 THEN 'RECEPCION'
            WHEN RECEIVE.PRMATC = 4 THEN 'REVERCION RECEPCION'
            WHEN RECEIVE.PRMATC = 2 THEN 'COTEJO'
            when RECEIVE.PRMATC = 3 then 'ANULACION COTEJO'
            else 'ERROR'
          end as TRAN_TIPO_DESC 
          ,RECEIVE.PRNLIN AS TRAN_LINEA
          ,RECEIVE.PRKCO AS DOC_COMPANIA
          ,RECEIVE.PRDCT AS DOC_TIPO
          ,RECEIVE.PRDOC as DOC
          ,TO_NUMBER(nvl(trim(RECEIVE.PRSFX),'0')) AS DOC_LINEA
          ,RECEIVE.PRJELN as DOC_JE_LINEA
          ,nvl(trim(RECEIVE.PRVINV),'--') AS DOC_FACTURA
          
          ,RECEIVE.PRAN8  as PROVEEDOR
          ,RECEIVE.PRITM as ITEM
          ,TRIM(RECEIVE.PRLITM) as ITEM_NUMERO
          ,NVL(TRIM(ITEM.IMDSC1 || ITEM.IMDSC2),'--') as ITEM_DESCRIPCION
          ,RECEIVE.PRGLC AS ITEM_GLCLASS
          ,TRIM(RECEIVE.PRTORG) as ORIGINADOR
          ,NVL(trim(ORG.DIR_DESC), '--') AS ORIGINADOR_DESC
          
          ,case when RECEIVE.PRTRDJ <> 0 then TO_DATE(1900000 + RECEIVE.PRTRDJ,'yyyyddd') end as FECHA_CREACION      
          ,case when RECEIVE.PRRCDJ <> 0 then TO_DATE(1900000 + RECEIVE.PRRCDJ,'yyyyddd') end as FECHA_TRAN
          ,case when RECEIVE.PRDGL <> 0 then TO_DATE(1900000 + RECEIVE.PRDGL,'yyyyddd') end as FECHA_LM
          
          ,RECEIVE.PRUREC/10000 AS CANTIDAD_RECIB
          ,RECEIVE.PRUOM AS UDM_RECIB
          ,RECEIVE.PRFRRC/10000 as PU_EX    
          ,RECEIVE.PRFREC/100 AS MONTO_RECIB_EX
          ,RECEIVE.PRCRCD AS MONEDA
          ,RECEIVE.PRCRR AS TASA
          ,RECEIVE.PRPRRC/10000 as PU_MX
          ,RECEIVE.PRAREC/100 AS MONTO_RECIB_MX
          ,TRIM(RECEIVE.PRTXA1) AS IMPUESTO
          ,RECEIVE.PRTX  AS IMPUESTO_FLAG

          ,NVL(ASIENTOS.BATCH,0 )  as BATCH
          ,nvl(ASIENTOS.BATCH_TIPO,'--') AS BATCH_TIPO

          ,nvl(TRIM(RECEIVE.PRASID),'--' ) as ACTIVO
          ,NVL(TRIM(RECEIVE.PRLOCN),'--' ) as UBICACION
          ,NVL(TRIM(RECEIVE.PRLOTN),'--' ) as LOTE
          ,NVL(TRIM(RECEIVE.PRCNID),'--' ) as CONTENEDOR
          ,NVL(TRIM(RECEIVE.PRVRMK),'--' ) as OBSERVACIONES
          ,TRIM(RECEIVE.PRUSER) as UPDATER
          ,NVL(trim(UPD.DIR_DESC), '--') AS UPDATER_DESC
          ,case when RECEIVE.PRUPMJ <> 0 then TO_DATE(1900000 + RECEIVE.PRUPMJ,'YYYYDDD') end as FECHA_UPDATE
          
      FROM PRODDTA.F43121 RECEIVE
      
      /*  ITEMS
      --------------------------------------------------------------------------------*/    
      left outer join PRODDTA.F4101 ITEM on 1=1
                  and ITEM.IMITM = RECEIVE.PRITM
      
      /*   GENERADORES
      --------------------------------------------------------------------------------*/                 
      left outer join NUVPD.VIEW_USUARIOS ORG on 1=1
                  and ORG.CLAVE = RECEIVE.PRTORG
                  
      /*   ACTUALIZADORES
      --------------------------------------------------------------------------------*/ 
      left outer join NUVPD.VIEW_USUARIOS UPD on 1=1
                  and UPD.CLAVE = RECEIVE.PRUSER      
               
      /*   ASIENTOS CONTABLES
      --------------------------------------------------------------------------------*/
      left outer join (
                        SELECT
                             ASIENTO.GLKCO AS DOC_COMPANIA
                            ,ASIENTO.GLDCT AS DOC_TIPO
                            ,ASIENTO.GLDOC AS DOC
                            ,ASIENTO.GLSFX as DOC_LINEA
                            ,ASIENTO.GLPKCO as OC_COMPANIA
                            ,ASIENTO.GLDCTO as OC_TIPO
                            ,TO_NUMBER(NVL(TRIM(ASIENTO.GLPO),'0')) as OC
                            ,ASIENTO.GLICU AS BATCH
                            ,ASIENTO.GLICUT as BATCH_TIPO
                        from PRODDTA.F0911 ASIENTO where 1=1
                        and ASIENTO.GLDCT = 'OV'
                        GROUP BY
                             ASIENTO.GLKCO
                            ,ASIENTO.GLDCT
                            ,ASIENTO.GLDOC
                            ,ASIENTO.GLSFX
                            ,ASIENTO.GLPKCO
                            ,ASIENTO.GLPO
                            ,ASIENTO.GLDCTO
                            ,ASIENTO.GLICU
                            ,ASIENTO.GLICUT 

                      ) ASIENTOS on 1=1
                  and ASIENTOS.DOC_COMPANIA = RECEIVE.PRKCO
                  AND ASIENTOS.DOC_TIPO = RECEIVE.PRDCT
                  AND ASIENTOS.DOC = RECEIVE.PRDOC
                  and ASIENTOS.DOC_LINEA = RECEIVE.PRSFX 
                  
                  and ASIENTOS.OC_COMPANIA = RECEIVE.PRKCOO
                  and ASIENTOS.OC = RECEIVE.PRDOCO
                  and ASIENTOS.OC_TIPO = RECEIVE.PRDCTO
                  
      order by 
        RECEIVE.PRKCOO  --/ OC_COMPANIA
        ,RECEIVE.PRDCTO --/ OC_TIPO
        ,RECEIVE.PRDOCO --/ OC
        ,RECEIVE.PRLNID --/ OC_LINEA
        ,RECEIVE.PRNLIN --/ TRAN_LINEA
        ,RECEIVE.PRMATC --/ TRAN_TIPO
 
)
where 1=1
--and OC_COMPANIA = '00001'
--and OC_TIPO = 'OP'
--and OC = 2317
--AND TRAN_TIPO = 1
;






/* ------------------------------------------------------------------------------ *\
    CAMPOS NO UTILIZADOS DE TABLA: F4330
\* ------------------------------------------------------------------------------ */


--,RECEIVE.PRPTC AS OC_TERMINOS
--,RECEIVE.PRDLOG AS FINAL_RECEIPT_FLAG
--,RECEIVE.PREXR1 AS IMPUESTO_TIPO   --<-   CAMPO: CD EXPLC
--,RECEIVE.PRBCRC AS MONEDA_BASE
--,RECEIVE.PRVR01 AS OC_REFERENCIA1  --<-  ORDEN VTA PROVEEDOR
--,RECEIVE.PRVR02 AS OC_REFERENCIA2  --<-  REFERENCIA
--,RECEIVE.PRLTTR AS OC_ESTADO
--,RECEIVE.PRNXTR AS OC_ESTADO_SIGUI
--,CASE WHEN RECEIVE.PRDRQJ <> 0 THEN TO_DATE(1900000 + RECEIVE.PRDRQJ,'YYYYDDD') END AS OC_FSOLICITUD
--,CASE WHEN RECEIVE.PRPDDJ <> 0 THEN TO_DATE(1900000 + RECEIVE.PRPDDJ,'YYYYDDD') END AS OC_FPLANIFICACION
--,CASE WHEN RECEIVE.PROPDJ <> 0 THEN TO_DATE(1900000 + RECEIVE.PROPDJ,'YYYYDDD') END AS OC_FENTREGA
--,RECEIVE.PRUORG/10000 AS OC_CANTIDAD
--,RECEIVE.PRUOM3 AS OC_UDM
--,RECEIVE.PRPRRC/10000 AS OC_MONTO_MX    
--,RECEIVE.PRFRRC OC_MONTO_EX        
--,RECEIVE.PRTDAY AS HACTUALIZACION
--,RECEIVE.PRPID AS PROGRAMA
--,RECEIVE.PRAID AS CUENTA
--,RECEIVE.PRANI AS CUENTA_NUMERO
--,RECEIVE.PROMCU AS CUENTA_UN
--,RECEIVE.PRPST AS DOC_ESTADO,
--,RECEIVE.PROBJ AS CUENTA_OBJETO
--,RECEIVE.PRSUB AS CUENTA_AUXILIAR
--,RECEIVE.PRSBL AS CUENTA_SUBLIBRO
--,RECEIVE.PRSBLT AS CUENTA_SUBLIBRO_TIPO    
--,RECEIVE.PRECST AS Amount_Extended
--,RECEIVE.PRIMCU AS ITEM_UN
--,RECEIVE.PRVANI AS DOC_CUENTA   --<- POR LO GENERAL CUENTA PUENTA        
--,RECEIVE.PRAPTD AS Amount_PaidToDate
--,RECEIVE.PRAOPN AS AMOUNT_OPEN
--,RECEIVE.PRACLO AS Amount_Closed
--,RECEIVE.PRAVCO AS AMOUNT_AVERAGE
--,RECEIVE.PRVARC AS Amount_CostVariance
--,RECEIVE.PRFEC as Amount_Foreign_Extended
--,RECEIVE.PRFAP as Amount_Foreign_Open
--,RECEIVE.PRFAPT AS AMOUNT_FOREIGN_AMOUNT_PAIDTODATE
--,RECEIVE.PRFCLO as Amount_Foreign_Closed
--,RECEIVE.PRUPTD AS UNITS_PAIDTODATE
--,RECEIVE.PRUOPN/10000 AS UNITS_OPEN
--,RECEIVE.PRUCLO/10000 AS Units_Closed
--,RECEIVE.PRQTYS/10000 AS UNITS_STOCKED
--,RECEIVE.PRQTYR/10000 AS Units_Returned
--,RECEIVE.PRQTYW/10000 AS Units_Reworked
--,RECEIVE.PRQTYC/10000 AS Units_Scrapped
--,RECEIVE.PRQTYJ AS Units_Rejected
--,RECEIVE.PRQTYA AS UNITS_ADJUSTED
--,RECEIVE.PRUOM2 AS Unit_of_Measure_Secondary
--,RECEIVE.PRSQOR AS Units_Secondary_Quantity_Ordered
--,RECEIVE.PRQTYPY AS Quantity_To_Pay
--,RECEIVE.PRSRUOM AS Service_Unit_of_Measure
--,RECEIVE.PRSRRC AS Amount_Secondary_Unit_Cost]]>
         </code>
      </snippet>
      <snippet name="F4101 - Item Master (Catalogo)" description="">
         <code>
            <![CDATA[select
  IMITM as "Item Number-Short"
  ,IMLITM as "2nd Item Number"
  ,IMAITM as "3rd Item Number"
  ,IMDSC1 as "Description"
  ,IMDSC2 as "Description-Line 2"
  ,IMSRTX as "Search Text"
  ,IMSTKT as "Stocking Type"
  ,IMLNTY as "Line Type"
  ,IMGLPT as "Category-G/L"
  ,IMUOM1 as "UDM-Primary"
  ,IMUOM2 as "UDM-Secondary"
  ,IMUOM3 as "UDM-Purchasing"
  ,IMBUYR as "Buyer Number"
  ,IMSRP3 as "Proveedor Principal" --"Sales Category Code 3"  
  ,IMPRP1 as "Commodity Class"
  ,IMPRP2 as "Commodity Sub Class"
  ,IMPRP4 as "Master Planning Family"
from PRODDTA.F4101
;

 --,IMALN as "Search Text-Compressed"
 -- ,IMSRP1 as "Sales Rpt 01-Product Family"
 -- ,IMSRP2 as "Sales Rpt 02-Family Section"
 
 -- ,IMSRP4 as "Sales Category Code 4"
 -- ,IMSRP5 as "Sales Category Code 5"
 --,IMSRP6 as "Sales Rpt06-Product Line (Revenue)"
 --,IMSRP7 as "Category Code 7"
 --,IMSRP8 as "Sales Rpt 08-Product Discount Group"
 -- ,IMSRP9 as "Category Code 9"
 -- ,IMSRP0 as "Category Code 10"
 
 -- ,IMPRP3 as "Supplier Rebate Code"
 
 -- ,IMPRP5 as "Purchasing Category Code 5"
 -- ,IMPRP6 as "Group-Item Dimension"
 -- ,IMPRP7 as "Group-Warehouse Process 1"
 -- ,IMPRP8 as "Group-Warehouse Process 2"
 -- ,IMPRP9 as "Group-Warehouse Process 3"
 -- ,IMPRP0 as "Item Pool"
 -- ,IMCDCD as "Commodity Code"
 -- ,IMPDGR as "Product Group"
 -- ,IMDSGP as "Dispatch Group"
 -- ,IMPRGR as "Item Price Group"
 --,IMRPRC as "Reprice (Basket Price) Category"
 -- ,IMORPR as "Order Reprice Category"

 -- ,IMDRAW as "Drawing Number"
 -- ,IMRVNO as "Last Revision No."
 -- ,IMDSZE as "Drawing Size"
 -- ,IMVCUD as "Cubic Dimensions-Volume"
 -- ,IMCARS as "Carrier Number"
 --,IMCARP as "Preferred Carrier-Purchasing"
 -- ,IMSHCN as "Shipping Conditions Code"
 -- ,IMSHCM as "Shipping Commodity Class"
 -- ,IMUOM4 as "UDM-Pricing"
 -- ,IMUOM6 as "UDM-Shipping"
 -- ,IMUOM8 as "UDM-Production"
 -- ,IMUOM9 as "UDM-Component"
 -- ,IMUWUM as "UDM-Weight"
 -- ,IMUVM1 as "UDM-Volume"
 -- ,IMSUTM as "UDM-Stocking"
 -- ,IMUMVW as "UDM-Volume or Weight"
 -- ,IMCYCL as "Cycle Count Category"
 
 -- ,IMPLEV as "Level-Sales Base Price"
 -- ,IMPPLV as "Level-Purchase Price"
 -- ,IMCLEV as "Level-Inventory Cost"
 -- ,IMPRPO as "Grade/Potency Pricing"
 -- ,IMCKAV as "Check Availability Y/N"
 -- ,IMBPFG as "Bulk/Packed Flag"
 -- ,IMSRCE as "Layer Code-Source"
 -- ,IMOT1Y as "Potency Control"
 -- ,IMOT2Y as "Grade Control"
 -- ,IMSTDP as "Standard Potency"
 -- ,IMFRMP as "From Potency"
 -- ,IMTHRP as "Thru Potency"
 -- ,IMSTDG as "Standard Grade"
 -- ,IMFRGD as "From Grade"
 -- ,IMTHGD as "Thru Grade"
 -- ,IMCOTY as "Component Type"
 -- ,IMCONT as "Contract-Item"
 -- ,IMBACK as "Backorders Allowed (Y/N)"
 -- ,IMIFLA as "Item Flash Message"
 -- ,IMTFLA as "Standard UDM Conversion"
 -- ,IMINMG as "Print Message"
 -- ,IMABCS as "ABC Code 1-Sales-Inventory"
 -- ,IMABCM as "ABC Code 1-Margin-Inventory"
 -- ,IMABCI as "ABC Code 3-Investment-Inventory"
 -- ,IMOVR as "ABC Code Override Indicator"
 -- ,IMWARR as "Type Warranty"
 -- ,IMCMCG as "Commission Category"
 -- ,IMSRNR as "Serial Number Required"
 --,IMPMTH as "Method-Kit/Configurator Pricing"
 -- ,IMFIFO as "FIFO Processing"
 -- ,IMLOTS as "Lot Status Code"
 -- ,IMSLD as "Days-Shelf Life Days"
 -- ,IMANPL as "Planner Number"
 -- ,IMMPST as "Planning Code"
 -- ,IMPCTM as "Percent Margin"
 -- ,IMMMPC as "Margin Maintenance (%)"
 -- ,IMPTSC as "Material Status"
 -- ,IMSNS as "Round to Whole Number"
 -- ,IMLTLV as "Leadtime Level"
 -- ,IMLTMF as "Leadtime MFG"
 -- ,IMLTCM as "Leadtime Cumulative"
 -- ,IMOPC as "Order Policy Code"
 -- ,IMOPV as "Value-Order Policy"
 -- ,IMACQ as "Quantity-Accounting Cost"
 -- ,IMMLQ as "Quantity-MFG Leadtime"
 -- ,IMLTPU as "Leadtime Per Unit"
 -- ,IMMPSP as "Planning Time Fence Rule"
 -- ,IMMRPP as "Fixed or Variable Leadtime"
 -- ,IMITC as "Issue Type Code"
 -- ,IMORDW as "Order With"
 -- ,IMMTF1 as "Planning Time Fence Days"
 -- ,IMMTF2 as "Freeze Time Fence Days"
 -- ,IMMTF3 as "Message Time Fence Days"
 -- ,IMMTF4 as "MPS/MRP Time Fence 4"
 -- ,IMMTF5 as "Shipment Leadtime Offset"
 -- ,IMEXPD as "Expedite Damper Days"
 -- ,IMDEFD as "Defer Damper Days"
 -- ,IMSFLT as "Safety Leadtime"
 -- ,IMMAKE as "Make/Buy Code"
 --,IMCOBY as "Co-Products/By-Products/Intermediate"
 -- ,IMLLX as "Low Level Code"
 -- ,IMCMGL as "Commitment Method"
 -- ,IMCOMH as "Commitment-Specific (Days)"
 -- ,IMURCD as "User Reserved Code"
 -- ,IMURDT as "User Reserved Date"
 -- ,IMURAT as "User Reserved Amount"
 -- ,IMURAB as "User Reserved Number"
 -- ,IMURRF as "User Reserved Reference"
 -- ,IMUSER as "User ID"
 -- ,IMPID as "Program ID"
 -- ,IMJOBN as "Work Station ID"
 -- ,IMUPMJ as "Date-Updated"
 -- ,IMTDAY as "Time of Day"
 -- ,IMUPCN as "UPC Number"
 -- ,IMSCC0 as "Aggregate SCC Code (PI=0)"
 -- ,IMUMUP as "UDM-UPC"
 -- ,IMUMDF as "UDM-Aggregate UPC"
 -- ,IMUMS0 as "UDM-SCC(PI=0)"
 -- ,IMUMS1 as "UDM-SCC(PI=1)"
 -- ,IMUMS2 as "UDM-SCC(PI=2)"
 -- ,IMUMS3 as "UDM-SCC(PI=3)"
 -- ,IMUMS4 as "UDM-SCC(PI=4)"
 -- ,IMUMS5 as "UDM-SCC(PI=5)"
 -- ,IMUMS6 as "UDM-SCC(PI=6)"
 -- ,IMUMS7 as "UDM-SCC(PI=7)"
 -- ,IMUMS8 as "UDM-SCC(PI=8)"
 -- ,IMPOC as "Issue and Receipt"
 -- ,IMAVRT as "Replenishment Hours-Standard"
 -- ,IMEQTY as "Container Code"
 -- ,IMWTRQ as "Item Weight Required Y/N"
 -- ,IMTMPL as "Template"
 -- ,IMSEG1 as "Segment 1"
 -- ,IMSEG2 as "Segment 2"
 -- ,IMSEG3 as "Segment 3"
 -- ,IMSEG4 as "Segment 4"
 -- ,IMSEG5 as "Segment 5"
 -- ,IMSEG6 as "Segment 6"
 -- ,IMSEG7 as "Segment 7"
 -- ,IMSEG8 as "Segment 8"
 -- ,IMSEG9 as "Segment 9"
 -- ,IMSEG0 as "Segment 10"
 -- ,IMMIC as "Matrix Controlled"
 -- ,IMAING as "Active Ingredient Flag"
 -- ,IMBBDD as "Best Before Default Days"
 -- ,IMCMDM as "Commitment Date Method"
 --,IMLECM as "Lot Expiraton Date Calculation Method"
 -- ,IMLEDD as "Lot Effective Default Days"
 -- ,IMPEFD as "Purchasing Effective Days"
 -- ,IMSBDD as "Sell By Default Days"
 -- ,IMU1DD as "User Lot Date 1 Default Days"
 -- ,IMU2DD as "User Lot Date 2 Default Days"
 -- ,IMU3DD as "User Lot Date 3 Default Days"
 -- ,IMU4DD as "User Lot Date 4 Default Days"
 -- ,IMU5DD as "User Lot Date 5 Default Days"
 -- ,IMDLTL as "Dual Tolerance"
 -- ,IMDPPO as "Dual Picking Process Option"
 -- ,IMDUAL as "Dual UDM Item"
 -- ,IMXDCK as "Cross-Docking Flag"
 -- ,IMLAF as "Lot Audit Flag"
 -- ,IMLTFM as "Special Lot Format"
 --,IMRWLA as "Restrict Work Order Lot Assignment"
 -- ,IMLNPA as "Lot Number Pre-Assignment"
 -- ,IMLOTC as "Lot Status Code Expanded"
 -- ,IMAPSC as "Constraints Flag"
 -- ,IMAUOM as "APS Planning UOM"
 -- ,IMCONB as "Consumable"
 -- ,IMGCMP as "Composition"
 -- ,IMPRI1 as "Priority One Alert Level"
 -- ,IMPRI2 as "Priority Two Alert Level"
 -- ,IMASHL as "Allow Shipping of Held Lots"
 -- ,IMVMINV as "Vendor Managed Inventory"
 -- ,IMCMETH as "Method-Configurator Costing"
 -- ,IMEXPI as "Explode Item (1/0)"
 -- ,IMOPTH as "Minimum Operational Threshold"
 -- ,IMCUTH as "Minimum Cumulative Threshold"
 -- ,IMUMTH as "Operational Threshold UDM"
 -- ,IMLMFG as "Lean Manufacturing Flag"
 -- ,IMLINE as "Line/Cell Identifier"
 -- ,IMDFTPCT as "Total Product Cycle Time"
 -- ,IMKBIT as "Kanban Item"
 -- ,IMDFENDITM as "Demand Flow End Item Flag"
 -- ,IMKANEXLL as "Kanban Explode to Lower Level"
 -- ,IMSCPSELL as "Sellable Item"
 --,IMMOPTH as "Maximum Operational Threshold"
 --,IMMCUTH as "Maximum Cumulative Threshold"
 -- ,IMCUMTH as "Cumulative Threshold UDM"
 -- ,IMATPRN as "ATP Rule Name"
 -- ,IMATPCA as "Check ATP"
 -- ,IMATPAC as "ATP Components"
 --,IMCOORE as "Country of Origin Required Flag"
 -- ,IMVCPFC as "ATO Forecast Control"
 -- ,IMPNYN as "Production Number Controlled"]]>
         </code>
      </snippet>
      <snippet name="F4111  - Item Ledger File (Cadex)" description="">
         <code>
            <![CDATA[SELECT
*
FROM (
        select
        ILMCU  as UN
        ,ILITM  as ITEM
        ,ILLITM as ITEM_NUMERO
        ,ILGLPT as ITEM_GLCLASS
        
        ,ILKCO  as DOC_COMANIA
        ,ILDCT  as DOC_TIPO
        ,ILDOC  as DOC
        ,ILTREX as DESCRIPCION
        ,case when ILTRDJ <> 0 then TO_DATE(1900000 + ILTRDJ ,'yyyyddd') end as FECHA_TRANSACCION
        ,case when ILDGL  <> 0 then TO_DATE(1900000 + ILDGL  ,'yyyyddd') end as FECHA_GL
        ,case when ILCRDJ <> 0 then TO_DATE(1900000 + ILCRDJ ,'yyyyddd') end as FECHA_CREACION
        
        ,ILKCOO as OC_COMPANIA
        ,ILDCTO as OC_TIPO
        ,ILDOCO as OC
        ,ILLNID as OC_LINEA
        ,ILAN8  as PROVEEDOR
        
        ,ILTRQT as CANTIDAD
        ,ILTRUM as UDM
        ,ILUNCS as PRECIO_UNITARIO
        ,ILPAID as PRECIO_TOTAL
        
        ,ILICU  as BATCH
        ,ILUSER as CREATOR
        
        from  PRODDTA.F4111
        
        
        
        where 1=1
        

    )
where 1=1
and FECHA_GL >= '01/01/15'
and  DOC_TIPO >= 'IA'
;


--and ILLITM = '01-01-000-000'


--,ILPID  as "Program ID"
--ILNLIN as "Number of Lines"
--,ILSTUN as "Storage Unit Number"
--,ILLDSQ as "Sequence No - Location Detail"
--,ILTRNO as "Transaction Line Number"
--,ILFRTO as "From/To"
--,ILLMCX as "Lot Master Cardex (Y/N)"
--,ILLOTS as "Lot Status Code"
--,ILLOTP as "Lot Potency"
--,ILLOTG as "Lot Grade"
--,ILKIT  as "Parent (short) Item Number"
--,ILMMCU as "Branch"
--,ILDMCT as "Agreement No - Dist"
--,ILDMCS as "Agreement Supplement - Dist"
--,ILSFX  as "Document Pay Item"
--,ILJELN as "Journal Entry Line Number"
--,ILLOCN as "Location"
--,ILLOTN as "Lot/Serial Number"
--,ILPLOT as "Parent Lot"
--,ILAITM as "3rd Item Number"
--,ILIPCD as "As Of Posted Code"
--,ILTREF as "Transaction Reference"
--,ILRCD  as "Reason Code"
--,ILTERM as "terminal identification"
--,ILUKID as "Unique Key ID (Internal)"
--,ILTDAY as "Time of Day"
--,ILAID  as "Account ID"
--,ILASID as "Serial Number"
--,ILMCUZ as "Business Unit - Alt"
--,ILOBJ  as "Object Account"
--,ILSBL  as "Subledger - G/L"
--,ILSUB  as "Subsidiary"
--,ILUOM2 as "Unit of Measure - Secondary"
--,ILCMOO as "Commingled Other Owner"
--,ILRE   as "Reverse or Void (R/V)"
--,ILSBLT as "Subledger Type"
--,ILSQOR as "Units-Secondary Quantity Ord"
--,case when ILVPEJ <> 0 then TO_DATE(1900000 + ILVPEJ ,'yyyyddd') end as "Valuation Period Ending Date"
--,case when ILHDGJ <> 0 then TO_DATE(1900000 + ILHDGJ ,'yyyyddd') end as "Historical Date - Julian"
--,ILSHAN as "Address Number - Ship To"
--,ILOPSQ as "Sequence Number - Operations"
--,ILRFLN as "Related From Line Number"
--,ILTGN  as "Transaction Group Number"
--,ILLOTC as "Lot Status Code Expanded"
--,case when ILSVDT <> 0 then TO_DATE(1900000 + ILSVDT ,'yyyyddd') end as "Reconciliation Date Date"
--,ILLRCD as "Lot Status Reason Code "
--,ILRLOT as "Supplier Lot Number"
--,ILLPNU as "License Plate Number"
--,ILPMPN as "Production Number"
--,ILPNS  as "Production Number Short"]]>
         </code>
      </snippet>
      <snippet name="F41021 - Item Location File" description="">
         <code>
            <![CDATA[-- ITEM LOCATION FILE
select
LIITM  AS ITEM_CLAVE
,LIMCU  AS UN
,LIPQOH/10000 as EXISTENCIAS
,LIPREQ/10000 as OC_PENDIENTE
,LIQOWO/10000 as OT_COMPROMETIDO

,case when LILRCJ <> 0 then TO_DATE(1900000 + LILRCJ  ,'yyyyddd') end as FECHA_ULTIMA_RECEPCION

,case when LIUPMJ <> 0 then TO_DATE(1900000 + LIUPMJ  ,'yyyyddd') end as FECHA_UPDATE

from PRODDTA.F41021  
where 1=1

;



--,LIHCOM/10000 AS 	"Quantity - Hard Committed"
--,LIPCOM/10000 as 	"Quantity Soft Committed"
--,LIFCOM/10000 as 	"Quantity on Future Commit"
--,LIQTTR as 	"Units-In Transit - primary u"
---,LIQTIN AS 	"Units-In Inspec-primary u"
---,LIQONL/10000 as 	"Quantity-On Loan to Manufac"
--,LIQTRI/10000 as 	"Quantity Inbound - Warehouse"
--,LIQTRO/10000 as 	"Quantity Outbound - Warehouse"
--,LIPBCK/10000 as 	"Quantity on Backorder"
--,LIQWBO/10000 as 	"Quantity on WO Receipt"
--,LIOT1A/10000 as 	"Quantity - Other Purchasing 1"
--,LILOCN AS 	"Location"
--,LILOTN AS 	"Lot/Serial Number"
--,LIPBIN AS 	"Primary Location (P/S)"
--,LILOTS as 	"Lot Status Code"
--,LIFUN1/10000 as 	"Quantity - WO Soft Commit"
--,case when LIURDT <> 0 then TO_DATE(1900000 + LIURDT  ,'yyyyddd') end AS 	"User Reserved Date"
--,LITDAY as 	"Time of Day"
--,LIOT1P/10000 as 	"Quantity 1-Other primary u"
--,LIOT2P/10000 as 	"Quantity 2-Other primary u"
--,LIJOBN AS 	"Work Station ID"
--,LIPID  AS  "Program ID"
--,LIQTO1 AS 	"Units-In Operation 1-Primary u"
--,LIQTO2 AS 	"Units-In Operation 2-Primary u"
--,LIHCMS/10000 as 	"Second Quantity Hard Committed"
--,LIPJCM AS 	"Proy Hard Committed Qty Prima"
--,LIPJDM as 	"Proy Hard Committed Qty Secon"
--,case when LINCDJ <> 0 then TO_DATE(1900000 + LINCDJ  ,'yyyyddd') end AS 	"Next Count Date"
--,LIQTY1 AS 	"Future Use Quantity"
--,LIQTY2 AS 	"Future Use Quantity 2"
--,LIURAB AS 	"User Reserved Number"
--,LIURRF AS 	"User Reserved Reference"
--,LIURAT AS 	"User Reserved Amount"
--,LIURCD as 	"User Reserved Code"
--,LISCMS/10000 as 	"Second Qty Soft Committed"
--,LISIBW/10000 as 	"Second Qty Inbound - Warehouse"
--,LISOBW/10000 as 	"Second Qty Outbound -Warehouse"
--,LISQOH/10000 as 	"Qty on Hand-in Secondary units"
--,LISQWO/10000 as 	"Secondary Qty on WO Receipt"
--,LISREQ/10000 as 	"Qty on OC - Secondary"
--,LISWHC/10000 as 	"Secondary Qty WO Hard Commit"
--,LISWSC/10000 as 	"Secondary Qty W.O. Soft Commit"
--,LIUSER AS 	"User ID"
--,LIGLPT AS 	"Category - G/L"
--,LICHDF AS 	"Critical Hold Flag"
--,LIWPDF as 	"Work Flow Pending Flag"
--,LICFGSID AS	 "Unique Configuration ID"]]>
         </code>
      </snippet>
      <snippet name="F4102 - Item Branch File" description="">
         <code>
            <![CDATA[select
  IBITM as "Item Number-Short"
  ,IBLITM as "2nd Item Number"
  ,IBAITM as "3rd Item Number"
  ,IBMCU as "Business Unit"
  ,IBSTKT as "Stocking Type"
  ,IBLNTY as "Line Type"
  ,IBVEND as "Primary / Last Supplier Number"
  ,IBANPL as "Planner Number"
  ,IBBUYR as "Buyer Number"
  ,IBPRP1 as "Commodity Class"
  ,IBPRP2 as "Commodity Sub Class"  
  ,IBSRP3 as "Provedor principal" --"Sales Category Code 3"  
  ,IBPRP4 as "Master Planning Family"  
  
  ,IBOPC as "Order Policy Code"  
  ,IBMPST as "Planning Code" 
  ,IBMPSP as "Planning Time Fence Rule"
  ,IBMTF2 as "Freeze Time Fence Days"
  ,IBMTF3 as "Message Time Fence Days"
  ,IBLMFG as "Lean Manufacturing Flag"
  ,IBLTLV as "Leadtime Level"
  ,IBMRPP as "Fixed or Variable Leadtime"

  ,IBRQMX as "Reorder Quantity-Maximum"
  ,IBRQMN as "Reorder Quantity-Minimum"
  ,IBMULT as "Quantity-Order Multiples (MRP)"

  ,IBROQI as "Reorder Quantity-Input"
  ,IBROPI as "Reorder Point-Input"
  ,IBSAFE as "Safety Stock"

from proddta.F4102
;

-- ,IBSRP1 as "Sales Rpt 01-Product Family"
-- ,IBSRP2 as "Sales Rpt 02-Family Section"
-- ,IBSRP4 as "Sales Category Code 4"
-- ,IBSRP5 as "Sales Category Code 5"
-- ,IBSRP7 as "Category Code 7"
-- ,IBSRP9 as "Category Code 9"
-- ,IBSRP0 as "Category Code 10"
-- ,IBPRP3 as "Supplier Rebate Code"
-- ,IBPRP5 as "Purchasing Category Code 5"
-- ,IBPRP6 as "Group-Item Dimension"
-- ,IBPRP7 as "Group-Warehouse Process 1"
-- ,IBPRP8 as "Group-Warehouse Process 2"
-- ,IBPRP9 as "Group-Warehouse Process 3"
-- ,IBPRP0 as "Item Pool"
-- ,IBCDCD as "Commodity Code"
-- ,IBPDGR as "Product Group"
-- ,IBDSGP as "Dispatch Group"
-- ,IBGLPT as "Category-G/L"
-- ,IBORIG as "Country of Origin"
-- ,IBSERV as "Service Level"
-- ,IBSLD as "Days-Shelf Life Days"
-- ,IBCKAV as "Check Availability Y/N"
-- ,IBSRCE as "Layer Code-Source"
-- ,IBLOTS as "Lot Status Code"
-- ,IBOT1Y as "Potency Control"
-- ,IBOT2Y as "Grade Control"
-- ,IBSTDP as "Standard Potency"
-- ,IBFRMP as "From Potency"
-- ,IBTHRP as "Thru Potency"
-- ,IBSTDG as "Standard Grade"
-- ,IBFRGD as "From Grade"
-- ,IBTHGD as "Thru Grade"
-- ,IBCOTY as "Component Type"
-- ,IBMMPC as "Margin Maintenance (%)"
-- ,IBPRGR as "Item Price Group"
-- ,IBORPR as "Order Reprice Category"
-- ,IBBACK as "Backorders Allowed (Y/N)"
-- ,IBIFLA as "Item Flash Message"
-- ,IBSHCM as "Shipping Commodity Class"
-- ,IBCARS as "Carrier Number"
-- ,IBCARP as "Preferred Carrier-Purchasing"
-- ,IBSHCN as "Shipping Conditions Code"
-- ,IBFIFO as "FIFO Processing"
-- ,IBCYCL as "Cycle Count Category"
-- ,IBINMG as "Print Message"
-- ,IBWARR as "Type Warranty"
-- ,IBSRNR as "Serial Number Required"
-- ,IBPCTM as "Percent Margin"
-- ,IBCMCG as "Commission Category"
-- ,IBFUF1 as "AIA Document Flag"
-- ,IBTX as "Purchasing Taxable (Y/N)"
-- ,IBTAX1 as "Sales Taxable (Y/N)"
-- ,IBMRPD as "Item Display Code"
-- ,IBMRPC as "Flag-Net Change"
-- ,IBUPC as "Units-Per Container"
-- ,IBSNS as "Round to Whole Number"
-- ,IBMERL as "Item Revision Level"
-- ,IBLTMF as "Leadtime MFG"
-- ,IBLTCM as "Leadtime Cumulative"
-- ,IBOPV as "Value-Order Policy"
-- ,IBACQ as "Quantity-Accounting Cost"
-- ,IBMLQ as "Quantity-MFG Leadtime"
-- ,IBLTPU as "Leadtime Per Unit"
-- ,IBITC as "Issue Type Code"
-- ,IBECO as "ECO Number"
-- ,IBECTY as "Engineering Change Reason"
-- ,IBECOD as "Date-Engineering Change Date"
-- ,IBMTF1 as "Planning Time Fence Days"
-- ,IBMTF4 as "MPS/MRP Time Fence 4"
-- ,IBMTF5 as "Shipment Leadtime Offset"
-- ,IBMOVD as "Move Hours-Standard"
-- ,IBQUED as "Queue Hours-Standard"
-- ,IBSETL as "Setup Labor-Standard"
-- ,IBSRNK as "Shrink Factor"
-- ,IBSRKF as "Shrink Factor Method"
-- ,IBTIMB as "Time Basis Code"
-- ,IBBQTY as "Units-Batch Quantity"
-- ,IBORDW as "Order With"
-- ,IBEXPD as "Expedite Damper Days"
-- ,IBDEFD as "Defer Damper Days"
-- ,IBSFLT as "Safety Leadtime"
-- ,IBMAKE as "Make/Buy Code"
-- ,IBLFDJ as "Date-Future Use"
-- ,IBLLX as "Low Level Code"
-- ,IBCMGL as "Commitment Method"
-- ,IBURCD as "User Reserved Code"
-- ,IBURDT as "User Reserved Date"
-- ,IBURAT as "User Reserved Amount"
-- ,IBURAB as "User Reserved Number"
-- ,IBURRF as "User Reserved Reference"
-- ,IBUSER as "User ID"
-- ,IBPID as "Program ID"
-- ,IBJOBN as "Work Station ID"
-- ,IBUPMJ as "Date-Updated"
-- ,IBTDAY as "Time of Day"
-- ,IBCOMH as "Commitment-Specific (Days)"
-- ,IBAVRT as "Replenishment Hours-Standard"
-- ,IBPOC as "Issue and Receipt"
-- ,IBAING as "Active Ingredient Flag"
-- ,IBBBDD as "Best Before Default Days"
-- ,IBCMDM as "Commitment Date Method"
-- ,IBMLOT as "Mix Dates / Lots (Y/N)"
-- ,IBPEFD as "Purchasing Effective Days"
-- ,IBSBDD as "Sell By Default Days"
-- ,IBU1DD as "User Lot Date 1 Default Days"
-- ,IBU2DD as "User Lot Date 2 Default Days"
-- ,IBU3DD as "User Lot Date 3 Default Days"
-- ,IBU4DD as "User Lot Date 4 Default Days"
-- ,IBU5DD as "User Lot Date 5 Default Days"
-- ,IBXDCK as "Cross-Docking Flag"
-- ,IBLAF as "Lot Audit Flag"
-- ,IBLTFM as "Special Lot Format"
-- ,IBLNPA as "Lot Number Pre-Assignment"
-- ,IBLOTC as "Lot Status Code Expanded"
-- ,IBAPSC as "Constraints Flag"
-- ,IBPRI1 as "Priority One Alert Level"
-- ,IBPRI2 as "Priority Two Alert Level"
-- ,IBLTCV as "Leadtime Conversion Factor"
-- ,IBASHL as "Allow Shipping of Held Lots"
-- ,IBOPTH as "Minimum Operational Threshold"
-- ,IBCUTH as "Minimum Cumulative Threshold"
-- ,IBLINE as "Line/Cell Identifier"
-- ,IBDFTPCT as "Total Product Cycle Time"
-- ,IBKBIT as "Kanban Item"
-- ,IBDFENDITM as "Demand Flow End Item Flag"
-- ,IBKANEXLL as "Kanban Explode to Lower Level"
-- ,IBSCPSELL as "Sellable Item"
-- ,IBMOPTH as "Maximum Operational Threshold"
-- ,IBMCUTH as "Maximum Cumulative Threshold"
-- ,IBATPRN as "ATP Rule Name"
-- ,IBATPCA as "Check ATP"
-- ,IBATPAC as "ATP Components"
-- ,IBVCPFC as "ATO Forecast Control"
-- ,IBPNYN as "Production Number Controlled"
--,IBSRP6 as "Sales Rpt 06-Product Line (Revenue)"
--,IBSRP8 as "Sales Rpt 08-Product Discount Group"
--,IBWOMO as "Quantity-Order Multiples (SO/PO)"
--,IBRPRC as "Reprice (Basket Price) Category"
--,IBTFLA as "Standard Unit of Measure Conversion"
--,IBLECM as "Lot Expiraton Date Calculation Method"
--,IBLEDD as "Lot Effective Default Days"
--,IBRWLA as "Restrict Work Order Lot Assignment"
--,IBUMTH as "Operational Threshold Unit of Measure"
--,IBCUMTH as "Cumulative Threshold Unit of Measure"
--,IBCOORE as "Country of Origin Required Flag"
-- ,IBABCS as "ABC Code 1-Sales-Inventory"
-- ,IBABCM as "ABC Code 1-Margin-Inventory"
-- ,IBABCI as "ABC Code 3-Investment-Inventory"
-- ,IBOVR as "ABC Code Override Indicator"



select
*
from PRODDTA.F0012

;
]]>
         </code>
      </snippet>
      <snippet name="F4105 - INVENTORY COST" description="">
         <code>
            <![CDATA[select
COMCU as "Business Unit"
,COITM AS "Item Number-Short"
,COLITM as "2nd Item Number"
,COAITM as "3rd Item Number"
,COLEDG AS "Cost Method"
,COUNCS as "Amount-Unit Cost"

from PRODDTA.F4105
where 1=1
AND COLITM = '48-13-000-002'
;



--,COLOCN AS "Location"
-- ,COLOTN AS "Lot/Serial Number"
-- ,COLOTG AS "Lot Grade"
-- ,COCSPO AS "Costing Selection-Purchasing"
-- ,COCSIN AS "Costing Selection-Inventory"
-- ,COURCD AS "User Reserved Code"
-- ,COURDT AS "User Reserved Date"
-- ,COURAT AS "User Reserved Amount"
-- ,COURAB AS "User Reserved Number"
-- ,COURRF AS "User Reserved Reference"
-- ,COUSER AS "User ID"
-- ,COPID AS "Program ID"
-- ,COJOBN as "Work Station ID"
-- ,COUPMJ AS "Date-Updated"
-- ,COTDAY AS "Time of Day"
-- ,COCCFL AS "Cost Changed Flag"
-- ,COCRCS AS "Carrying Cost"
-- ,COOSTC AS "Overstock Cost"
-- ,COSTOC as "Stockout Cost"]]>
         </code>
      </snippet>
      <snippet name="VIEW_RECEPVSCOTEJO" description="">
         <code>
            <![CDATA[SELECT
*
from (
        create or replace force view "NUVPD"."VIEW_RECEPVSCOTEJO" ("OC_COMPANIA","OC_COMPANIA_DESC","OC_PROYECTO","OC_PROYECTO_DESC","OC_UN","OC_UN_DESC","OC_NUMERO","OC_TIPO","OC_TIPO_DESC","OC_LINEA","OC_LINEA_TIPO","OC_LINEA_TIPO_DESC","OC_FECHA_CREACION","OC_FECHA_CANCELACION","OC_ESTADO_ULTIMO","OC_ESTADO_SIGUIENTE","OC_COMPRADOR","OC_COMPRADOR_DESC","OC_ORIGINADOR","OC_ORIGINADOR_DESC","OC_PROVEEDOR","OC_PROVEEDOR_DESC","OC_ITEM","OC_ITEM_NUMERO","OC_ITEM_DESC","OC_CANTIDAD_SOLIC","OC_UDM","OC_UDM_DESC","OC_CANTIDAD_RECIB","OC_CANTIDAD_XRECIB","OC_RECEPCION","OC_PU_EX","OC_TOTAL_EX","OC_MONTO_RECIB_EX","OC_MONTO_XRECIB_EX","OC_MONEDA","OC_TASA","OC_PU_MX","OC_TOTAL_MX","OC_MONTO_RECIB_MX","OC_MONTO_XRECIB_MX","RECEPCION_NO","RECEPCION_COMPANIA","RECEPCION_TIPO","RECEPCION_DOC","RECEPCION_LINEA","RECEPCION_FECHA","RECEPCION_FECHA_LM","RECEPCION_CANTIDAD","RECEPCION_UDM","RECEPCION_PU_EX","RECEPCION_MONTO_EX","RECEPCION_MONEDA","RECEPCION_TASA","RECEPCION_PU_MX","RECEPCION_MONTO_MX","RECEPCION_CONTENEDOR","RECEPCION_BATCH","RECEPCION_BATCH_TIPO","RECEPCION_ORIGINADOR","RECEPCION_ORIGINADOR_DESC","FAC_COMPANIA","FAC_TIPO","FAC","FAC_LINEA","FAC_UPDATER","FAC_UPDATER_DESC","FAC_FECHA_UPDATE") as
        select
        ords.COMPANIA as OC_COMPANIA
        ,ords.COMPANIA_DESC as OC_COMPANIA_DESC
        ,ords.PROYECTO as OC_PROYECTO
        ,ords.PROYECTO_DESC as OC_PROYECTO_DESC
        ,ords.UN as OC_UN
        ,ords.UN_DESC as OC_UN_DESC
        ,ords.NUMERO as OC_NUMERO
        ,ords.TIPO as OC_TIPO
        ,ords.TIPO_DESC as OC_TIPO_DESC
        ,ords.LINEA as OC_LINEA
        ,ords.LINEA_TIPO as OC_LINEA_TIPO
        ,ords.LINEA_TIPO_DESC as OC_LINEA_TIPO_DESC
        ,ords.FECHA_CREACION as OC_FECHA_CREACION
        ,ords.FECHA_CANCELACION as OC_FECHA_CANCELACION
        ,ords.ESTADO_ULTIMO as OC_ESTADO_ULTIMO
        ,ords.ESTADO_SIGUIENTE as OC_ESTADO_SIGUIENTE
        ,ords.COMPRADOR as OC_COMPRADOR
        ,ORDS.COMPRADOR_DESC as OC_COMPRADOR_DESC
        ,ORDS.ORIGINADOR as OC_ORIGINADOR
        ,ords.ORIGINADOR_DESC as OC_ORIGINADOR_DESC
        ,ords.PROVEEDOR as OC_PROVEEDOR
        ,ords.PROVEEDOR_DESC as OC_PROVEEDOR_DESC
        ,ords.ITEM as OC_ITEM
        ,ords.ITEM_NUMERO as OC_ITEM_NUMERO
        ,TRIM(ords.ITEM_DESC1 || ords.ITEM_DESC2 ) as OC_ITEM_DESC
        ,ords.CANTIDAD_SOLIC as OC_CANTIDAD_SOLIC
        ,ords.UDM as OC_UDM
        ,ords.UDM_DESC as OC_UDM_DESC
        ,ords.CANTIDAD_RECIB as OC_CANTIDAD_RECIB
        ,ords.CANTIDAD_XRECIB as OC_CANTIDAD_XRECIB
        ,ords.RECEPCION as OC_RECEPCION
        ,ords.PU_EX as OC_PU_EX
        ,ords.TOTAL_EX as OC_TOTAL_EX
        ,ords.MONTO_RECIB_EX as OC_MONTO_RECIB_EX
        ,ords.MONTO_XRECIB_EX as OC_MONTO_XRECIB_EX
        ,ords.MONEDA as OC_MONEDA
        ,ords.TASA as OC_TASA
        ,ords.PU_MX as OC_PU_MX
        ,ords.TOTAL_MX as OC_TOTAL_MX
        ,ords.MONTO_RECIB_MX as OC_MONTO_RECIB_MX
        ,ORDS.MONTO_XRECIB_MX as OC_MONTO_XRECIB_MX

        ,NVL(RECB.TRAN_LINEA,0) as RECEPCION_NO
        ,NVL(RECB.DOC_COMPANIA,'--') as RECEPCION_COMPANIA
        ,NVL(RECB.DOC_TIPO,'--') as RECEPCION_TIPO       
        ,NVL(RECB.DOC,0) as RECEPCION_DOC
        ,NVL(RECB.DOC_LINEA,0) as RECEPCION_LINEA
        ,NVL(RECB.FECHA_TRAN,TO_DATE('01/01/1000','DD/MM/YYYY')) as RECEPCION_FECHA
        ,nvl(RECB.FECHA_LM,TO_DATE('01/01/1000','DD/MM/YYYY')) as RECEPCION_FECHA_LM
        ,nvl(RECB.CANTIDAD_RECIB,0) as RECEPCION_CANTIDAD
        ,nvl(RECB.UDM_RECIB,'--') as RECEPCION_UDM
        ,nvl(RECB.PU_EX,0) as RECEPCION_PU_EX
        ,nvl(RECB.MONTO_RECIB_EX,0) as RECEPCION_MONTO_EX
        ,nvl(RECB.MONEDA,'--') as RECEPCION_MONEDA
        ,nvl(RECB.TASA,0) as RECEPCION_TASA
        ,nvl(RECB.PU_MX,0) as RECEPCION_PU_MX
        ,NVL(RECB.MONTO_RECIB_MX,0) as RECEPCION_MONTO_MX
        ,NVL(RECB.CONTENEDOR,'--') as RECEPCION_CONTENEDOR
        ,nvl(RECB.BATCH,0) as RECEPCION_BATCH
        ,nvl(RECB.BATCH_TIPO,'--') as RECEPCION_BATCH_TIPO
        ,NVL(RECB.ORIGINADOR,'--') as RECEPCION_ORIGINADOR
        ,nvl(RECB.ORIGINADOR_DESC,'--') AS RECEPCION_ORIGINADOR_DESC
        
        ,NVL(CTE.DOC_COMPANIA, '--') as FAC_COMPANIA
        ,NVL(CTE.DOC_TIPO, '--') as FAC_TIPO
        ,NVL(CTE.DOC, 0) as FAC
        ,NVL(CTE.DOC_LINEA , 0) as FAC_LINEA
        ,NVL(CTE.UPDATER, '--') as FAC_UPDATER
        ,NVL(CTE.UPDATER_DESC,'--') as FAC_UPDATER_DESC
        ,NVL(CTE.FECHA_UPDATE ,TO_DATE('01/01/1000','DD/MM/YYYY')) AS FAC_FECHA_UPDATE 
        
        from NUVPD.VIEW_ORDENES ORDS
        
        left outer join NUVPD.VIEW_RECEPCIONES RECB on 1=1
                    and RECB.OC_COMPANIA = ORDS.COMPANIA
                    and RECB.OC_TIPO = ORDS.TIPO
                    and RECB.OC = ORDS.NUMERO
                    and RECB.OC_SUFIX = ORDS.SUFIX                    
                    and RECB.OC_LINEA = ORDS.LINEA
                    and RECB.TRAN_TIPO = 1
                    
        left outer join NUVPD.VIEW_RECEPCIONES CTE on 1=1
                    and CTE.OC_COMPANIA = RECB.OC_COMPANIA
                    and CTE.OC_TIPO = RECB.OC_TIPO
                    and CTE.OC = RECB.OC
                    and CTE.oc_sufix = RECB.OC_SUFIX
                    and CTE.OC_LINEA = RECB.OC_LINEA
                    AND CTE.TRAN_LINEA = RECB.TRAN_LINEA 
                    and CTE.TRAN_TIPO = 2                   

        where 1=1
        AND ords.TIPO IN ('OS', 'OP', 'OX', 'US', 'UP', 'UX', 'TS', 'SA','OJ')
        
        order by
          ords.COMPANIA
          ,ords.TIPO
          ,ords.NUMERO
          ,ORDS.LINEA
          ,RECB.TRAN_LINEA

)
where 1=1
--and OC_RECEPCION in ('COMPLETA','PARCIAL')
AND RECEPCION_NO <> 0
and FAC_COMPANIA = '--'
and OC_COMPANIA = '00001'
;






]]>
         </code>
      </snippet>
      <snippet name="VIEW_STOCK" description="">
         <code>
            <![CDATA[
  CREATE OR REPLACE FORCE VIEW "NUVPD"."VIEW_STOCK" ("COMPANIA", "UN", "ITEM_CLAVE", "ITEM_NUMERO", "ITEM_NOPARTE", "ITEM_DESCRIPCION", "ITEM_MODELO", "ITEM_TEXTO_BUSQUEDA", "ALM_TIPO", "LINEA_TIPO", "GL_CODIGO", "UDM_PRIM", "UDM_SECU", "UDM_COMPRA", "PROVEEDOR", "PLANEADOR", "COMPRADOR", "MERCANCIA", "SUBMERCANCIA", "PROVEEDOR_PRIN", "MANTTO_CLASIF", "CODIGO_NORMA_ORDENES", "CD_PLANIF", "REGLA_LIMITE_PLANIF", "LIMITE_CONGELACION", "LIMITE_VISLZ_MENSAJE", "ELIM_MENSAJE_MRP", "CODIGO_TP_ENVIO","NIVEL_PLAZO", "FIJO_FARIABLE", "MAXIMO", "MINIMO", "CANTIDAD_ORDEN_MULTIPLE", "CANTIDAD_PUNTO_ORDEN", "PUNTO_ORDEN", "STOCK_SEGURIDAD", "RECEPCION - OP (4310)", "RECEPCION - OP (4320)", "RECEPCION - OJ (4310)", "RECEPCION - OJ (4320)", "TRANSFERENCIA - IT (4122)", "TRANSFERENCIA - IT (4124)", "SALIDA NORMAL - II (4122)", "SALIDA NORMAL - II (4124)", "DESPACHO OT - IM (4122)", "DESPACHO OT - IM (4124)", "COSTO COMPRA (01)", "COSTO PROMEDIO (02)", "EXISTENCIAS") AS 
  select
ALM.COMPANIA
,ALM.UN
,ALM.ITEM_CLAVE
,ALM.ITEM_NUMERO
,ALM.ITEM_NOPARTE
,ALM.ITEM_DESCRIPCION
,ALM.ITEM_MODELO
,ALM.ITEM_TEXTO_BUSQUEDA
,ALM.ALM_TIPO
,ALM.LINEA_TIPO
,ALM.GL_CODIGO
,ALM.UDM_PRIM
,ALM.UDM_SECU
,ALM.UDM_COMPRA
,ALM.PROVEEDOR
,ALM.PLANEADOR
,ALM.COMPRADOR
,ALM.MERCANCIA
,ALM.SUBMERCANCIA
,ALM.PROVEEDOR_PRIN
,ALM.MANTTO_CLASIF
,ALM.CODIGO_NORMA_ORDENES
,ALM.CD_PLANIF
,ALM.REGLA_LIMITE_PLANIF
,ALM.LIMITE_CONGELACION
,ALM.LIMITE_VISLZ_MENSAJE
,ALM.ELIM_MENSAJE_MRP
,ALM.CODIGO_TP_ENVIO
,ALM.NIVEL_PLAZO
,ALM.FIJO_FARIABLE
,ALM.MAXIMO
,ALM.MINIMO
,ALM.CANTIDAD_ORDEN_MULTIPLE
,ALM.CANTIDAD_PUNTO_ORDEN
,ALM.PUNTO_ORDEN
,ALM.STOCK_SEGURIDAD
,RECEP_OP_4310.CUENTA_NUMERO || ' (' || RECEP_OP_4310.CUENTA_DESCRIPCION || ')' as "RECEPCION - OP (4310)"
,RECEP_OP_4320.CUENTA_NUMERO || ' (' || RECEP_OP_4320.CUENTA_DESCRIPCION || ')' as "RECEPCION - OP (4320)"

,RECEP_OJ_4310.CUENTA_NUMERO || ' (' || RECEP_OJ_4310.CUENTA_DESCRIPCION || ')' as "RECEPCION - OJ (4310)"
,RECEP_OJ_4320.CUENTA_NUMERO || ' (' || RECEP_OJ_4320.CUENTA_DESCRIPCION || ')' as "RECEPCION - OJ (4320)"

,TRANSF_IT_4122.CUENTA_NUMERO || ' (' || TRANSF_IT_4122.CUENTA_DESCRIPCION || ')' as "TRANSFERENCIA - IT (4122)"
,TRANSF_IT_4124.CUENTA_NUMERO || ' (' || TRANSF_IT_4124.CUENTA_DESCRIPCION || ')' as "TRANSFERENCIA - IT (4124)"

,SAL_II_4122.CUENTA_NUMERO || ' (' || SAL_II_4122.CUENTA_DESCRIPCION || ')' as "SALIDA NORMAL - II (4122)"
,SAL_II_4124.CUENTA_NUMERO || ' (' || SAL_II_4124.CUENTA_DESCRIPCION || ')' as "SALIDA NORMAL - II (4124)"

,DESPOT_IM_4122.CUENTA_NUMERO || ' (' || DESPOT_IM_4122.CUENTA_DESCRIPCION || ')' as "DESPACHO OT - IM (4122)"
,DESPOT_IM_4124.CUENTA_NUMERO || ' (' || DESPOT_IM_4124.CUENTA_DESCRIPCION || ')' as "DESPACHO OT - IM (4124)"

,COSTO_01.COSTO as "COSTO COMPRA (01)"
,COSTO_02.COSTO as "COSTO PROMEDIO (02)"

,STOCK.EXISTENCIAS

from NUVPD.VIEW_ITEM_ALMACEN ALM

/* ICAS DE RECEPCION de TIPO DE OP
----------------------------------------------------------------------------*/
left outer join NUVPD.VIEW_ICASM RECEP_OP_4310 on 1=1
            and RECEP_OP_4310.ICA = 4310
            and RECEP_OP_4310.DOC_TIPO = 'OP' 
            and RECEP_OP_4310.COMPANIA = ALM.COMPANIA
            and RECEP_OP_4310.GL_CODIGO = ALM.GL_CODIGO              
            and RECEP_OP_4310.CUENTA_UN = ALM.UN
            AND RECEP_OP_4310.CUENTA_UN_TIPO  NOT IN ('-','*','MD')
                     
left outer join NUVPD.VIEW_ICASM RECEP_OP_4320 on 1=1
            and RECEP_OP_4320.ICA = 4320 
            and RECEP_OP_4320.DOC_TIPO = RECEP_OP_4310.DOC_TIPO            
            and RECEP_OP_4320.COMPANIA = ALM.COMPANIA
            and RECEP_OP_4320.GL_CODIGO = ALM.GL_CODIGO
            --and ICA_RECEP1_4320.CUENTA_UN
            AND RECEP_OP_4320.CUENTA_UN_TIPO  NOT IN ('-','*','MD')


/* ICAS DE RECEPCION de TIPO DE OJ
----------------------------------------------------------------------------*/
left outer join NUVPD.VIEW_ICASM RECEP_OJ_4310 on 1=1
            and RECEP_OJ_4310.ICA = 4310
            and RECEP_OJ_4310.DOC_TIPO = 'OJ' 
            and RECEP_OJ_4310.COMPANIA = ALM.COMPANIA
            and RECEP_OJ_4310.GL_CODIGO = ALM.GL_CODIGO              
            and RECEP_OJ_4310.CUENTA_UN = ALM.UN
            AND RECEP_OJ_4310.CUENTA_UN_TIPO  NOT IN ('-','*','MD')
                     
left outer join NUVPD.VIEW_ICASM RECEP_OJ_4320 on 1=1
            and RECEP_OJ_4320.ICA = 4320 
            and RECEP_OJ_4320.DOC_TIPO = RECEP_OJ_4310.DOC_TIPO            
            and RECEP_OJ_4320.COMPANIA = ALM.COMPANIA
            and RECEP_OJ_4320.GL_CODIGO = ALM.GL_CODIGO
            --and ICA_RECEP1_4320.CUENTA_UN
            AND RECEP_OJ_4320.CUENTA_UN_TIPO  NOT IN ('-','*','MD')


/* ICAS DE TRANFERENCIA (DOCUMENTO IT) 
----------------------------------------------------------------------------*/
left outer join NUVPD.VIEW_ICASM TRANSF_IT_4122 on 1=1
            and TRANSF_IT_4122.ICA = 4122
            and TRANSF_IT_4122.DOC_TIPO = 'IT' 
            and TRANSF_IT_4122.COMPANIA = ALM.COMPANIA
            and TRANSF_IT_4122.GL_CODIGO = ALM.GL_CODIGO              
            and TRANSF_IT_4122.CUENTA_UN = ALM.UN
            AND TRANSF_IT_4122.CUENTA_UN_TIPO  NOT IN ('-','*','MD')

left outer join NUVPD.VIEW_ICASM TRANSF_IT_4124 on 1=1
            and TRANSF_IT_4124.ICA = 4124 
            and TRANSF_IT_4124.DOC_TIPO = TRANSF_IT_4122.DOC_TIPO
            and TRANSF_IT_4124.COMPANIA = ALM.COMPANIA
            and TRANSF_IT_4124.GL_CODIGO = ALM.GL_CODIGO 
            and TRANSF_IT_4124.CUENTA_UN = ALM.UN
            AND TRANSF_IT_4124.CUENTA_UN_TIPO  NOT IN ('-','*','MD')
            
/* ICAS DE SALIDAS NORMALES (DOCUMENTO II) 
----------------------------------------------------------------------------*/
left outer join NUVPD.VIEW_ICASM SAL_II_4122 on 1=1
            and SAL_II_4122.ICA = 4122
            and SAL_II_4122.DOC_TIPO = 'II' 
            and SAL_II_4122.COMPANIA = ALM.COMPANIA
            and SAL_II_4122.GL_CODIGO = ALM.GL_CODIGO              
            and SAL_II_4122.CUENTA_UN = ALM.UN
            AND SAL_II_4122.CUENTA_UN_TIPO  NOT IN ('-','*','MD')

left outer join NUVPD.VIEW_ICASM SAL_II_4124 on 1=1
            and SAL_II_4124.ICA = 4124 
            and SAL_II_4124.DOC_TIPO = SAL_II_4122.DOC_TIPO
            and SAL_II_4124.COMPANIA = ALM.COMPANIA
            and SAL_II_4124.GL_CODIGO = ALM.GL_CODIGO 
            and SAL_II_4124.CUENTA_UN = ALM.UN
            AND SAL_II_4124.CUENTA_UN_TIPO  NOT IN ('-','*','MD')            


/* ICAS DE DESPACHO A OT (DOCUMENTO IM) 
----------------------------------------------------------------------------*/
left outer join NUVPD.VIEW_ICASM DESPOT_IM_4122 on 1=1
            and DESPOT_IM_4122.ICA = 4122
            and DESPOT_IM_4122.DOC_TIPO = 'IM' 
            and DESPOT_IM_4122.COMPANIA = ALM.COMPANIA
            and DESPOT_IM_4122.GL_CODIGO = ALM.GL_CODIGO              
            and DESPOT_IM_4122.CUENTA_UN = ALM.UN
            AND DESPOT_IM_4122.CUENTA_UN_TIPO  NOT IN ('-','*','MD')

left outer join NUVPD.VIEW_ICASM DESPOT_IM_4124 on 1=1
            and DESPOT_IM_4124.ICA = 4124 
            and DESPOT_IM_4124.DOC_TIPO = DESPOT_IM_4122.DOC_TIPO
            and DESPOT_IM_4124.COMPANIA = ALM.COMPANIA
            and DESPOT_IM_4124.GL_CODIGO = ALM.GL_CODIGO 
            and DESPOT_IM_4124.CUENTA_UN = ALM.UN
            AND DESPOT_IM_4124.CUENTA_UN_TIPO  NOT IN ('-','*','MD')
            

/* COSTO DE COMPRA (01) 
----------------------------------------------------------------------------*/
left outer join (
                    select
                    TRIM(COMCU) as UN
                    ,COITM as ITEM_CLAVE
                    ,TRIM(COLITM) as ITEM_NUMERO
                    ,TRIM(COAITM) as ITEM_NOPART
                    ,COLEDG as METODO
                    ,COUNCS/10000 as COSTO
                    from PRODDTA.F4105
                    where 1=1
                ) COSTO_01 on 1=1
                and COSTO_01.UN = ALM.UN
                and COSTO_01.ITEM_CLAVE = ALM.ITEM_CLAVE
                AND COSTO_01.METODO = 01
            
/* COSTO PROMEDIO (02) 
----------------------------------------------------------------------------*/
left outer join (
                    select
                    TRIM(COMCU) as UN
                    ,COITM as ITEM_CLAVE
                    ,TRIM(COLITM) as ITEM_NUMERO
                    ,TRIM(COAITM) as ITEM_NOPART
                    ,COLEDG as METODO
                    ,COUNCS/10000 as COSTO
                    from PRODDTA.F4105
                    where 1=1

            ) COSTO_02 on 1=1
            and COSTO_02.UN = ALM.UN
            and COSTO_02.ITEM_CLAVE = ALM.ITEM_CLAVE
            AND COSTO_02.METODO = 02   
            
            
/* EXISTENCIAS
----------------------------------------------------------------------------*/            
LEFT OUTER JOIN (
                    select
                    LIITM  as ITEM_CLAVE
                    ,trim(LIMCU)  as UN
                    ,SUM(LIPQOH)/10000 as EXISTENCIAS
                    ,SUM(LIPREQ)/10000 as OC_PENDIENTE
                    ,sum(LIQOWO)/10000 as OT_COMPROMETIDO
                    from PRODDTA.F41021  
                    where 1=1
                    group by
                    LIITM
                    ,LIMCU
                ) STOCK on 1=1
           and STOCK.UN = ALM.UN
           AND STOCK.ITEM_CLAVE = ALM.ITEM_CLAVE
            
where 1=1

order by 
  ALM.UN
  ,ALM.ITEM_CLAVE;


select
*
from NUVPD.VIEW_STOCK
;]]>
         </code>
      </snippet>
      <snippet name="VISTA - CARDEX" description="">
         <code>
            <![CDATA[SELECT
*
FROM (
        select
        ILMCU  as UN
        ,ILITM  as ITEM
        ,ILLITM as ITEM_NUMERO
        ,ILGLPT as ITEM_GLCLASS
        
        ,ILKCO  as DOC_COMANIA
        ,ILDCT  as DOC_TIPO
        ,ILDOC  as DOC
        ,ILTREX as DESCRIPCION
        ,case when ILTRDJ <> 0 then TO_DATE(1900000 + ILTRDJ ,'yyyyddd') end as FECHA_TRANSACCION
        ,case when ILDGL  <> 0 then TO_DATE(1900000 + ILDGL  ,'yyyyddd') end as FECHA_GL
        ,case when ILCRDJ <> 0 then TO_DATE(1900000 + ILCRDJ ,'yyyyddd') end as FECHA_CREACION
        
        ,ILKCOO as OC_COMPANIA
        ,ILDCTO as OC_TIPO
        ,ILDOCO as OC
        ,ILLNID as OC_LINEA
        ,ILAN8  as PROVEEDOR
        
        ,ILTRQT as CANTIDAD
        ,ILTRUM as UDM
        ,ILUNCS as PRECIO_UNITARIO
        ,ILPAID as PRECIO_TOTAL
        
        ,ILICU  as BATCH
        ,ILUSER as CREATOR
        
        from  PRODDTA.F4111
        
        
        
        where 1=1
        

    )
where 1=1
and FECHA_GL >= '01/01/15'
and  DOC_TIPO >= 'IA'
;


--and ILLITM = '01-01-000-000'


--,ILPID  as "Program ID"
--ILNLIN as "Number of Lines"
--,ILSTUN as "Storage Unit Number"
--,ILLDSQ as "Sequence No - Location Detail"
--,ILTRNO as "Transaction Line Number"
--,ILFRTO as "From/To"
--,ILLMCX as "Lot Master Cardex (Y/N)"
--,ILLOTS as "Lot Status Code"
--,ILLOTP as "Lot Potency"
--,ILLOTG as "Lot Grade"
--,ILKIT  as "Parent (short) Item Number"
--,ILMMCU as "Branch"
--,ILDMCT as "Agreement No - Dist"
--,ILDMCS as "Agreement Supplement - Dist"
--,ILSFX  as "Document Pay Item"
--,ILJELN as "Journal Entry Line Number"
--,ILLOCN as "Location"
--,ILLOTN as "Lot/Serial Number"
--,ILPLOT as "Parent Lot"
--,ILAITM as "3rd Item Number"
--,ILIPCD as "As Of Posted Code"
--,ILTREF as "Transaction Reference"
--,ILRCD  as "Reason Code"
--,ILTERM as "terminal identification"
--,ILUKID as "Unique Key ID (Internal)"
--,ILTDAY as "Time of Day"
--,ILAID  as "Account ID"
--,ILASID as "Serial Number"
--,ILMCUZ as "Business Unit - Alt"
--,ILOBJ  as "Object Account"
--,ILSBL  as "Subledger - G/L"
--,ILSUB  as "Subsidiary"
--,ILUOM2 as "Unit of Measure - Secondary"
--,ILCMOO as "Commingled Other Owner"
--,ILRE   as "Reverse or Void (R/V)"
--,ILSBLT as "Subledger Type"
--,ILSQOR as "Units-Secondary Quantity Ord"
--,case when ILVPEJ <> 0 then TO_DATE(1900000 + ILVPEJ ,'yyyyddd') end as "Valuation Period Ending Date"
--,case when ILHDGJ <> 0 then TO_DATE(1900000 + ILHDGJ ,'yyyyddd') end as "Historical Date - Julian"
--,ILSHAN as "Address Number - Ship To"
--,ILOPSQ as "Sequence Number - Operations"
--,ILRFLN as "Related From Line Number"
--,ILTGN  as "Transaction Group Number"
--,ILLOTC as "Lot Status Code Expanded"
--,case when ILSVDT <> 0 then TO_DATE(1900000 + ILSVDT ,'yyyyddd') end as "Reconciliation Date Date"
--,ILLRCD as "Lot Status Reason Code "
--,ILRLOT as "Supplier Lot Number"
--,ILLPNU as "License Plate Number"
--,ILPMPN as "Production Number"
--,ILPNS  as "Production Number Short"]]>
         </code>
      </snippet>
      <snippet name="VIEW_ITEM_ALMACEN" description="">
         <code>
            <![CDATA[
  CREATE OR REPLACE FORCE VIEW "NUVPD"."VIEW_ITEM_ALMACEN" ("COMPANIA", "UN", "ITEM_CLAVE", "ITEM_NUMERO", "ITEM_NOPARTE", "ITEM_DESCRIPCION", "ITEM_MODELO", "ITEM_TEXTO_BUSQUEDA", "ALM_TIPO", "LINEA_TIPO", "GL_CODIGO", "UDM_PRIM", "UDM_SECU", "UDM_COMPRA", "PROVEEDOR", "PLANEADOR", "COMPRADOR", "MERCANCIA", "SUBMERCANCIA", "PROVEEDOR_PRIN", "MANTTO_CLASIF", "CODIGO_NORMA_ORDENES", "CD_PLANIF", "REGLA_LIMITE_PLANIF", "LIMITE_CONGELACION", "LIMITE_VISLZ_MENSAJE", "ELIM_MENSAJE_MRP", "CODIGO_TP_ENVIO", "NIVEL_PLAZO", "FIJO_FARIABLE", "MAXIMO", "MINIMO", "CANTIDAD_ORDEN_MULTIPLE", "CANTIDAD_PUNTO_ORDEN", "PUNTO_ORDEN", "STOCK_SEGURIDAD") AS 
  select
  CENTRO.MCCO AS COMPANIA
  ,TRIM(ITEAM.IBMCU) as UN
  ,ITEAM.IBITM as ITEM_CLAVE
  ,TRIM(ITEAM.IBLITM) as ITEM_NUMERO
  ,TRIM(ITEAM.IBAITM) as ITEM_NOPARTE
  
  ,ITEM.IMDSC1 as ITEM_DESCRIPCION
  ,ITEM.IMDSC2 as ITEM_MODELO
  ,ITEM.IMSRTX as ITEM_TEXTO_BUSQUEDA  
  
  ,TRIM(ITEAM.IBSTKT) as ALM_TIPO
  ,TRIM(ITEAM.IBLNTY) as LINEA_TIPO
  ,ITEAM.IBGLPT as GL_CODIGO
  ,ITEM.IMUOM1 as UDM_PRIM
  ,ITEM.IMUOM2 as UDM_SECU
  ,ITEM.IMUOM3 as UDM_COMPRA  
  ,ITEAM.IBVEND as PROVEEDOR
  ,ITEAM.IBANPL as PLANEADOR
  ,ITEAM.IBBUYR as COMPRADOR
  ,ITEAM.IBPRP1 as MERCANCIA
  ,ITEAM.IBPRP2 as SUBMERCANCIA
  ,ITEAM.IBSRP3 as PROVEEDOR_PRIN
  ,ITEAM.IBPRP4 as MANTTO_CLASIF
  
  ,ITEAM.IBOPC as  CODIGO_NORMA_ORDENES
  ,ITEAM.IBMPST as CD_PLANIF
  ,ITEAM.IBMPSP as REGLA_LIMITE_PLANIF
  ,ITEAM.IBMTF2 as LIMITE_CONGELACION
  ,ITEAM.IBMTF3 as LIMITE_VISLZ_MENSAJE
  ,ITEAM.IBLMFG as ELIM_MENSAJE_MRP
  ,ITEAM.IBITC as CODIGO_TP_ENVIO
  ,ITEAM.IBLTLV as NIVEL_PLAZO
  ,ITEAM.IBMRPP as FIJO_FARIABLE

  ,ITEAM.IBRQMX/10000 as MAXIMO
  ,ITEAM.IBRQMN/10000 as MINIMO
  ,ITEAM.IBMULT/10000 as CANTIDAD_ORDEN_MULTIPLE

  ,ITEAM.IBROQI/10000 as CANTIDAD_PUNTO_ORDEN
  ,ITEAM.IBROPI/10000 as PUNTO_ORDEN
  ,ITEAM.IBSAFE/10000 as STOCK_SEGURIDAD

from PRODDTA.F4102 ITEAM 
left outer join PRODDTA.F4101 ITEM on 1=1 
            AND ITEM.IMITM = ITEAM.IBITM
            
left outer join PRODDTA.F0006 CENTRO on 1=1
            and CENTRO.MCMCU = ITEAM.IBMCU;





SELECT
*
FROM NUVPD.VIEW_ITEM_ALMACEN
;]]>
         </code>
      </snippet>
      <snippet name="Costos de Inventario" description="">
         <code>
            <![CDATA[        select
        TRIM(COMCU) as UN
        ,COITM as ITEM_CLAVE
        ,TRIM(COLITM) as ITEM_NUMERO
        ,TRIM(COAITM) as ITEM_NOPART
        ,COLEDG as METODO
        ,COUNCS/10000 as COSTO
        from PRODDTA.F4105
        where 1=1]]>
         </code>
      </snippet>
      <snippet name="Existencias de Almacen" description="">
         <code>
            <![CDATA[        /* EXISTENCIAS
        -----------------------------------------------------------------------*/        
        LEFT OUTER JOIN (
                            select
                            LIITM  as ITEM_CLAVE
                            ,trim(LIMCU)  as UN
                            ,SUM(LIPQOH)/10000 as EXISTENCIAS
                            ,SUM(LIPREQ)/10000 as OC_PENDIENTE
                            ,sum(LIQOWO)/10000 as OT_COMPROMETIDO
                            from PRODDTA.F41021  
                            where 1=1
                            group by
                            LIITM
                            ,LIMCU
                        ) STOCK on 1=1
                   and STOCK.UN = ALM.UN
                   AND STOCK.ITEM_CLAVE = ALM.ITEM_CLAVE   

]]>
         </code>
      </snippet>
      <snippet name="Items Almacenables" description="">
         <code>
            <![CDATA[SELECT
*
FROM (
        select 
        ITEM.IMITM as CLAVE
        ,TRIM(ITEM.IMLITM) as NUMERO
        ,TRIM(ITEM.IMAITM) as NUMERO_PARTE
        ,ITEM.IMDSC1 as DESCRIPCION
        ,ITEM.IMDSC2 as MODELO
        ,ITEM.IMSRTX as TEXTO_BUSQUEDA  
        ,ITEM.IMSTKT as ALM_TIPO
        ,TRIM(ITEM.IMLNTY) as LINEA_TIPO
        ,ITEM.IMUOM1 as UDM_PRIM
        ,ITEM.IMUOM2 as UDM_SECU
        ,ITEM.IMUOM3 as UDM_COMPRA
        
        ,NVL(TRIM(SUC_ITEM.IBMCU),'--') as SUCURSAL
        ,NVL(SUCURSAL.MCCO,'--') as COMPANIA
        
        ,NVL(SUC_ITEM.IBGLPT,'--') as CODIGO_LM
        
        ,NVL(SUC_ITEM.IBVEND,-1) as PROVEEDOR
        ,NVL(SUC_ITEM.IBANPL,-1) as PLANEADOR
        ,NVL(SUC_ITEM.IBBUYR,-1) as COMPRADOR
        
        ,NVL(SUC_ITEM.IBPRP1,'--') as MERCANCIA
        ,NVL(SUC_ITEM.IBPRP2,'--') as SUBMERCANCIA
        ,NVL(SUC_ITEM.IBSRP3,'--') as PROVEEDOR_PRINCIPAL
        ,NVL(SUC_ITEM.IBPRP4,'--') as MANTTO_CLASIF
        
        ,NVL(SUC_ITEM.IBOPC,'--' ) as  CODIGO_NORMA_ORDENES
        ,NVL(SUC_ITEM.IBMPST, '--') as CD_PLANIF
        ,NVL(SUC_ITEM.IBMPSP, '--') as REGLA_LIMITE_PLANIF
        
        ,NVL(SUC_ITEM.IBMTF2,-1) as LIMITE_CONGELACION
        ,NVL(SUC_ITEM.IBMTF3,-1) as LIMITE_VISLZ_MENSAJE
        ,NVL(SUC_ITEM.IBLMFG,'--') as ELIM_MENSAJE_MRP
        ,NVL(SUC_ITEM.IBITC,'--') as CODIGO_TP_ENVIO
        ,NVL(SUC_ITEM.IBLTLV,-1) as NIVEL_PLAZO
        ,NVL(SUC_ITEM.IBMRPP,'--') as FIJO_FARIABLE
        ,NVL(SUC_ITEM.IBRQMX/10000,-1) as MAXIMO
        ,NVL(SUC_ITEM.IBRQMN/10000,-1) as MINIMO
        ,NVL(SUC_ITEM.IBMULT/10000,-1) as CANTIDAD_ORDEN_MULTIPLE
        ,NVL(SUC_ITEM.IBROQI/10000,-1) as CANTIDAD_PUNTO_ORDEN
        ,NVL(SUC_ITEM.IBROPI/10000,-1) as PUNTO_ORDEN
        ,NVL(SUC_ITEM.IBSAFE/10000,-1) as STOCK_SEGURIDAD
        
        ,NVL(COSTO_01.COUNCS/10000, -1) as COSTO_COMPRA_01
        ,nvl(COSTO_02.COUNCS/10000, -1) as COSTO_COMPRA_02
        
        from CRPDTA.F4101 ITEM
        
        /* ITEMS IN SUCURSAL/PLANTA
        -----------------------------------------------------------------------*/
        left outer join CRPDTA.F4102 SUC_ITEM on 1=1
                    AND SUC_ITEM.IBITM = ITEM.IMITM

        /* SUCURSAL/PLANTA
        -----------------------------------------------------------------------*/        
        left outer join CRPDTA.F0006 SUCURSAL on 1=1
                    and SUCURSAL.MCMCU = SUC_ITEM.IBMCU
                    
        /* COSTO DE COMPRA (01) 
        -----------------------------------------------------------------------*/ 
        left outer join CRPDTA.F4105 COSTO_01 on 1=1
                    and COSTO_01.COMCU = SUC_ITEM.IBMCU
                    and COSTO_01.COITM = SUC_ITEM.IBITM
                    and COSTO_01.COLEDG = '01'
                    
        /* COSTO PROMEDIO (02) 
        -----------------------------------------------------------------------*/        
        left outer join CRPDTA.F4105 COSTO_02 on 1=1
                    and COSTO_02.COMCU = SUC_ITEM.IBMCU
                    and COSTO_02.COITM = SUC_ITEM.IBITM
                    and COSTO_02.COLEDG = '02'                    
                    
        /* EXISTENCIAS
        NOTA: Se sumariza debido a las ubicaciones
        -----------------------------------------------------------------------*/        
        left outer join (
                          select
                          LIITM  as ITEM
                          ,LIMCU as SUCURSAL
                          ,SUM(LIPQOH)/10000 as EXISTENCIAS
                          ,SUM(LIPREQ)/10000 as OC_PENDIENTE
                          ,SUM(LIQOWO)/10000 as OT_COMPROMETIDO
                          from CRPDTA.F41021  
                          where 1=1
                          group by
                          LIITM
                          ,LIMCU
                        ) STOCK on 1=1
                    and STOCK.SUCURSAL = ALM.UN
                    and STOCK.ITEM = ALM.ITEM_CLAVE
    )
where 1=1
--AND ALM_TIPO = 'SE'
and LINEA_TIPO = 'SE'
--and LINEA_TIPO = 'S'
--AND SUCURSAL = 'F211133'
;

]]>
         </code>
      </snippet>
   </group>
   <group category="0 - COMPRAS" language="PLSQL">
      <snippet name="Liberar lineas" description="">
         <code>
            <![CDATA[
SELECT
PDKCOO
,PDDCTO
,PDDOCO
,PDLNID
,PDLTTR
,PDNXTR
,PDUOPN
,PDUREC
FROM PRODDTA.F4311 
WHERE 1=1
and PDLTTR not in ('980')
AND PDDCTO = 'SR'
AND PDDOCO in (8739, 9243, 9245, 9247, 9248, 9249)


--AND PDLNID/1000 IN  (1)
--and PDNXTR = 110
--and PDLTTR = 100
;




UPDATE PRODDTA.F4311 SET
PDLTTR = 100,
PDNXTR = 110,
PDUOPN = PDUREC,
PDUREC = 0
where 1=1
and PDLTTR not in ('980')
AND PDDCTO = 'SR'
AND PDDOCO in (8739, 9243, 9245, 9247, 9248, 9249)
--AND PDLNID/1000 IN  (1)
--aND PDLNID  IN (1000)
--AND PDLNID >= 4000
--aND PDLNID <= 19000
;

commit;
]]>
         </code>
      </snippet>
      <snippet name="Cancelar lineas" description="">
         <code>
            <![CDATA[update PRODDTA.F4311 set
PDCNDJ = 114291 --- FECHA_CANCELACION
,PDUOPN = 0   -- UNIDADES ABIERTAS
,PDAOPN = 0   --- MONTO ABIERO
,PDNXTR = 999
,PDLTTR = 980
where 1=1
and PDKCOO = '00001'
and PDDOCO = 10305
and PDDCTO = 'OS'
AND PDLNID/1000 = 1
;
]]>
         </code>
      </snippet>
      <snippet name="Marcar lineas" description="">
         <code>
            <![CDATA[-- MARCAR CON COTIZACION
update PRODDTA.F4311 set
PDUOPN = 0   -- UNIDADES ABIERTAS
,PDCNDJ = 0
,PDAOPN = 0   --- MONTO ABIERO
,PDNXTR = 160
,PDLTTR = 140
where 1=1
and PDKCOO = '00001'
--and PDDOCO = 3622
--and PDDCTO = 'QS'
--AND PDLNID/1000 IN (1)
;
]]>
         </code>
      </snippet>
      <snippet name="F42209 - Autorizaciones" description="">
         <code>
            <![CDATA[select
*
from (
		SELECT 
		HOHCOD as hold_code
		,HORPER as person_responsible
		,HOAN8 as aprobador
		,HOMCU as un
		,HOKCOO as oc_compania
		,HODOCO as oc
		,HODCTO as oc_tipo
		,HOSFXO as oc_sufix
		,HOLNID as oc_linea
		,HOITM as item
		,HOLITM as item_numero
		,HOAITM as item_numero2
   
    ,CASE WHEN HOTRDJ <> 0 THEN TO_DATE(1900000 + HOTRDJ,'yyyyddd') END AS fecha_creacion 
		,CASE WHEN HODRQJ <> 0 THEN TO_DATE(1900000 + HODRQJ,'yyyyddd') END AS fecha_solicitud 
  	,CASE WHEN HOPDDJ <> 0 THEN TO_DATE(1900000 + HOPDDJ,'yyyyddd') END AS fecha_entregada 
		,HORDB AS RELEASE_BY
    ,CASE WHEN HORDJ <> 0 THEN TO_DATE(1900000 + HORDJ,'yyyyddd') END AS FECHA_RELEASED 
		,HORDT AS  HORA
		,HOARTG AS RUTA
		,HOASTS as ESTADO
		FROM proddta.F4209
	)	
  
where 1 = 1
and oc = 11739

;

--,HOCTYP --<- Vacios
--,HORDC  --<- Vacios
--,HOATY  --<- Vacios
--,HOEDEI --<- Vacios
--,HODLNID --<- 0's
--,HOPA8  --<- 0's
--,HOSHAN --<- 0's
]]>
         </code>
      </snippet>
      <snippet name="F4311 - Lineas de Compras" description="">
         <code>
            <![CDATA[
SELECT 
*
FROM ( 

        SELECT 
            ORDEN.PDKCOO AS COMPANIA            -- PK
            ,COMPANIA.CCNAME AS COMPANIA_DESC 
            ,NVL(TRIM(CENTRO.MCRP01),' ') AS PROYECTO
            ,NVL(TRIM(PROYECTO.DRDL01 || PROYECTO.DRDL02),' ') AS PROYECTO_DESC            
            ,TRIM(ORDEN.PDMCU) AS UN 
            ,trim(CENTRO.MCDL01 || CENTRO.MCDL02) AS UN_DESC 
            ,CENTRO.MCSTYL AS UN_TIPO 
            ,TRIM(TIPO_CENTRO.DRDL01) AS UN_TIPO_DESC 
            ,ORDEN.PDDOCO AS NUMERO             -- PK
            ,ORDEN.PDDCTO AS TIPO               -- PK
            ,TRIM(TIPO_ORDEN.DRDL01) AS TIPO_DESC 
            ,ORDEN.PDSFXO AS SUFIX            -- PK
         
            ,(ORDEN.PDLNID/1000) AS LINEA       -- PK
            ,TRIM(ORDEN.PDLNTY) AS LINEA_TIPO      
            ,trim(TIPO_LINEA.LFLNDS) AS LINEA_TIPO_DESC 
             
            ,CASE WHEN ORDEN.PDTRDJ <> 0 THEN TO_DATE(1900000 + ORDEN.PDTRDJ,'yyyyddd') END AS FECHA_CREACION                 
            ,CASE WHEN ORDEN.PDDRQJ <> 0 THEN TO_DATE(1900000 + ORDEN.PDDRQJ,'yyyyddd') END AS FECHA_NECESIDAD         
            ,CASE WHEN ORDEN.PDOPDJ <> 0 THEN TO_DATE(1900000 + ORDEN.PDOPDJ,'yyyyddd') END AS FECHA_ENTREGA  
            ,CASE WHEN ORDEN.PDCNDJ <> 0 THEN TO_DATE(1900000 + ORDEN.PDCNDJ,'yyyyddd') END AS FECHA_CANCELACION 
         
            ,ORDEN.PDLTTR AS LAST_ESTADO 
            ,TRIM(ESTADO.DRDL01) AS LAST_ESTADO_DESC 
            ,ORDEN.PDNXTR AS NEXT_ESTADO 
             
            ,ORDEN.PDANBY AS COMPRADOR
            ,TRIM(COMPRADOR.ABALPH) AS COMPRADOR_DESC 
             
            ,TRIM(ORDEN.PDTORG) AS GENERADOR 
            ,trim(GENERADOR.USR_DIRECCION_DESC) AS GENERADOR_DESC 
         
            ,ORDEN.PDAN8  AS PROVEEDOR 
            ,trim(PROVEEDOR.ABALPH) AS PROVEEDOR_DESC 
         
            ,ORDEN.PDITM AS  ITEM 
            ,TRIM(ORDEN.PDLITM) AS ITEM_NUMERO 
            ,NVL(TRIM(ORDEN.PDDSC1),' ') AS ITEM_DESC1 
            ,NVL(TRIM(ORDEN.PDDSC2),' ') AS ITEM_DESC2 
         
            ,(ORDEN.PDUORG/10000) AS CANTIDAD_SOLIC
            ,ORDEN.PDUOM AS UDM         
            ,trim(UDM.DRDL01) AS UDM_DESC 
             
            ,(ORDEN.PDUREC/10000) AS CANTIDAD_RECIB
            ,(ORDEN.PDUOPN/10000) AS CANTIDAD_XRECIB
         
            ,CASE 
              WHEN (ORDEN.PDUOPN = 0 AND ORDEN.PDUREC > 0) THEN 'Recepcion COMPLETA'  
              WHEN (ORDEN.PDUREC = 0 AND ORDEN.PDUOPN > 0) THEN 'SIN Recepcion'  
              WHEN (ORDEN.PDUREC > 0 AND ORDEN.PDUOPN > 0) THEN 'Recepcion PARCIAL'  
              WHEN (ORDEN.PDUREC = 0 AND ORDEN.PDUOPN = 0) THEN 'Orden CANCELADA'  
            END AS RECEPCION             
         
            ,(ORDEN.PDFRRC/10000) AS PU_EX
            ,(ORDEN.PDFEA/100) AS TOTAL_EX
            ,(ORDEN.PDFREC/100) AS MONTO_RECIB_EX
            ,(ORDEN.PDFAP/100) AS MONTO_XRECIB_EX          
             
            ,ORDEN.PDCRCD AS MONEDA
            ,ORDEN.PDCRR AS TASA              
         
            ,(ORDEN.PDPRRC/10000) AS PU_MX 
            ,(ORDEN.PDAEXP/100) AS TOTAL_MX
            ,(ORDEN.PDAREC/100) AS MONTO_RECIB_MX
            ,(ORDEN.PDAOPN/100) AS MONTO_XRECIB_MX 
         
            ,TRIM(ORDEN.PDTXA1) AS IMPUESTO
            ,ORDEN.PDTX AS IMPUESTO_FLAG 
            ,trim(IMPUESTO.TATAXA) AS IMPUESTO_DESC 
         
            ,ORDEN.PDDSPR AS DESCUENTO 
             
            ,ORDEN.PDPTC AS TERMINOS_PAGO 
            ,TRIM(CONDICION.PNPTD) AS TERMINOS_PAGO_DESC 
         
            ,TRIM(ORDEN.PDUSER) AS UPDATER 
            ,TRIM(UPDATER.USR_DIRECCION_DESC) AS UPDATER_DESC 
            ,trim(ORDEN.PDPID) AS PROGRAMA 
            
            ,NVL(TRIM(ORDEN.PDOKCO),' ') AS ORIGEN_ORDEN_COMPANIA
            ,NVL(TRIM(ORDEN.PDOCTO),' ') as ORIGEN_ORDEN_TIPO
            ,case when TRIM(ORDEN.PDOORN) is null then ' ' else TO_CHAR( TO_NUMBER(ORDEN.PDOORN)) end as ORIGEN_ORDEN
            ,CASE WHEN ORDEN.PDOGNO = 0 THEN ' ' ELSE TO_CHAR(ORDEN.PDOGNO/1000) END AS ORIGEN_ORDEN_LINEA
            
        FROM PRODDTA.F4311 ORDEN 
         
        /*   GENERADORES   
        --------------------------------------------------------------------------------*/ 
        LEFT OUTER JOIN ( 
                          SELECT 
                          USERS.ULUSER AS USR_ID    
                          ,USERS.ULAN8 AS USR_DIRECCION 
                          ,ADDRESS.ABAT1 AS USR_TIPO 
                          ,ADDRESS.ABALPH AS USR_DIRECCION_DESC 
                     
                          FROM SY910.F0092 USERS 
                          LEFT OUTER JOIN PRODDTA.F0101 ADDRESS   
                                       ON ADDRESS.ABAN8 = USERS.ULAN8  
                        ) GENERADOR 
                     ON GENERADOR.USR_ID = ORDEN.PDTORG 
         
         
        /*   PROVEEDORES   
        --------------------------------------------------------------------------------*/ 
        LEFT OUTER JOIN PRODDTA.F0101 PROVEEDOR  
                     ON PROVEEDOR.ABAN8 = ORDEN.PDAN8  
                    
                 
        /*   ACTUALIZADORES   
        --------------------------------------------------------------------------------*/     
        LEFT OUTER JOIN ( 
                          SELECT 
                          USERS.ULUSER AS USR_ID    
                          ,USERS.ULAN8 AS USR_DIRECCION 
                          ,ADDRESS.ABAT1 AS USR_TIPO 
                          ,ADDRESS.ABALPH AS USR_DIRECCION_DESC 
                     
                          FROM SY910.F0092 USERS 
                          LEFT OUTER JOIN PRODDTA.F0101 ADDRESS  
                                       ON ADDRESS.ABAN8 = USERS.ULAN8 
                        ) UPDATER 
                     on UPDATER.USR_ID = ORDEN.PDUSER 
                     

        /*   COMPRADORES
        --------------------------------------------------------------------------------*/   
        LEFT OUTER JOIN PRODDTA.F0101 COMPRADOR
                     ON COMPRADOR.ABAN8 = ORDEN.PDANBY

         
        /*   TIPOS DE ORDENES   
        --------------------------------------------------------------------------------*/   
        LEFT OUTER JOIN PRODCTL.F0005 TIPO_ORDEN
                     ON TIPO_ORDEN.DRSY = '00'
                    AND TIPO_ORDEN.DRRT = 'DT'
                    AND TRIM(TIPO_ORDEN.DRKY) = trim(ORDEN.PDDCTO)                        
         
        /*   TIPOS DE LINEAS DE ORDEN   
        --------------------------------------------------------------------------------*/         
        LEFT OUTER JOIN PRODDTA.F40205  TIPO_LINEA 
                     ON TIPO_LINEA.LFLNTY = ORDEN.PDLNTY 
         
         
        /*   ESTADOS DE LA ORDEN   
        --------------------------------------------------------------------------------*/   
        LEFT OUTER JOIN PRODCTL.F0005D ESTADO
                     ON ESTADO.DRSY = '40'
                    AND ESTADO.DRRT = 'AT'
                    AND TRIM(ESTADO.DRKY) = trim(ORDEN.PDLTTR)                     
                       
                      
        /*   UNIDADES DE MEDIDAS 
        --------------------------------------------------------------------------------*/                           
        LEFT OUTER JOIN PRODCTL.F0005D UDM
                     ON UDM.DRSY = '00'
                    AND UDM.DRRT = 'UM'
                    AND TRIM(UDM.DRKY) = trim(ORDEN.PDUOM)
         
        /*   CONDICIONES DE PAGO 
        --------------------------------------------------------------------------------*/  
        LEFT OUTER JOIN PRODDTA.F0014 CONDICION
                     ON CONDICION.PNPTC = ORDEN.PDPTC 
         
         /*  IMPUESTOS 
        --------------------------------------------------------------------------------*/           
        LEFT OUTER JOIN PRODDTA.F4008 IMPUESTO
                     ON IMPUESTO.TATXA1 = ORDEN.PDTXA1 
          
        /*  COMPANIA 
        --------------------------------------------------------------------------------*/ 
        LEFT OUTER JOIN PRODDTA.F0010 COMPANIA
                     ON COMPANIA.CCCO = ORDEN.PDKCOO  
         
        /*  UNIDADES DE NEGOCIO 
        --------------------------------------------------------------------------------*/ 
        LEFT OUTER JOIN PRODDTA.F0006 CENTRO
                     ON CENTRO.MCMCU = ORDEN.PDMCU 
                   
        /*  TIPOS DE UNIDADES DE NEGOCIO 
        --------------------------------------------------------------------------------*/ 
        LEFT OUTER JOIN PRODCTL.F0005 TIPO_CENTRO
                     ON TIPO_CENTRO.DRSY = '00'
                    AND TIPO_CENTRO.DRRT = 'MC'
                    AND TRIM(TIPO_CENTRO.DRKY) = trim(CENTRO.MCSTYL)                     
                     
        /*  PROYECTOS 
        --------------------------------------------------------------------------------*/                      
        LEFT OUTER JOIN PRODCTL.F0005 PROYECTO
                     ON PROYECTO.DRSY = '00'    
                    AND PROYECTO.DRRT = '01'    
                    AND TRIM(PROYECTO.DRKY) = TRIM(CENTRO.MCRP01)                          
             
        --where ORDEN.PDDCTO in ('OS', 'OP', 'OX', 'US', 'UP', 'UX', 'TS', 'SA')              
        
     ) 
WHERE 1=1 
AND TIPO IN ('OS', 'OP', 'OX', 'US', 'UP', 'UX', 'TS', 'SA')              
AND LAST_ESTADO NOT IN ('980')
--AND UDM_DESC IS NULL
AND FECHA_CREACION >= '06/04/15' 
and FECHA_CREACION <= '09/04/15' 

ORDER BY 
COMPANIA
,FECHA_CREACION
,NUMERO
,linea
;





]]>
         </code>
      </snippet>
      <snippet name="VIEW_ORDENES" description="">
         <code>
            <![CDATA[select
*
from (
        --CREATE OR REPLACE FORCE VIEW "NUVPD"."VIEW_ORDENES" ("COMPANIA", "COMPANIA_DESC","PROYECTO","PROYECTO_DESC","UN","UN_DESC","UN_TIPO","UN_TIPO_DESC","NUMERO","TIPO","TIPO_DESC","SUFIX","LINEA","LINEA_TIPO","LINEA_TIPO_DESC","FECHA_CREACION","FECHA_NECESIDAD","FECHA_ENTREGA","FECHA_CANCELACION","ESTADO_ULTIMO","ESTADO_ULTIMO_DESC","ESTADO_SIGUIENTE","COMPRADOR","COMPRADOR_DESC","ORIGINADOR","ORIGINADOR_DESC","PROVEEDOR","PROVEEDOR_DESC","ITEM","ITEM_NUMERO","ITEM_DESC1","ITEM_DESC2","ITEM_GLCLASS","CANTIDAD_SOLIC","UDM","UDM_DESC","CANTIDAD_RECIB","CANTIDAD_XRECIB","RECEPCION","PU_EX","TOTAL_EX","MONTO_RECIB_EX","MONTO_XRECIB_EX","MONEDA","TASA","PU_MX","TOTAL_MX","MONTO_RECIB_MX","MONTO_XRECIB_MX","IMPUESTO","IMPUESTO_FLAG","IMPUESTO_DESC","DESCUENTO","TERMINOS_PAGO","TERMINOS_PAGO_DESC","UPDATER","UPDATER_DESC","PROGRAMA","ORI_ORDEN_COMPANIA","ORI_ORDEN_TIPO","ORI_ORDEN","ORI_ORDEN_LINEA") as
        select 
            ORDEN.PDKCOO as COMPANIA            -- PK
            ,nvl(trim(COMPANIA.CCNAME),'--') AS COMPANIA_DESC 
            ,NVL(TRIM(CENTRO.MCRP01),'--') AS PROYECTO
            ,NVL(TRIM(PROYECTO.DRDL01),'--') AS PROYECTO_DESC            
            ,TRIM(ORDEN.PDMCU) as UN 
            ,NVL(TRIM(CENTRO.MCDL01 || CENTRO.MCDL02),'--') as UN_DESC 
            ,NVL(CENTRO.MCSTYL,'--') as UN_TIPO
            ,nvl(TRIM(TIPO_CENTRO.DRDL01),'--') AS UN_TIPO_DESC 
            ,ORDEN.PDDOCO AS NUMERO             -- PK
            ,ORDEN.PDDCTO as TIPO               -- PK
            ,nvl(TRIM(TIPO_ORDEN.DRDL01),'--') AS TIPO_DESC 
            ,ORDEN.PDSFXO AS SUFIX            -- PK
         
            ,(ORDEN.PDLNID/1000) as LINEA       -- PK
            ,nvl(TRIM(ORDEN.PDLNTY),'--') AS LINEA_TIPO      
            ,trim(TIPO_LINEA.LFLNDS) AS LINEA_TIPO_DESC 
             
            ,CASE WHEN ORDEN.PDTRDJ <> 0 THEN TO_DATE(1900000 + ORDEN.PDTRDJ,'yyyyddd') END AS FECHA_CREACION
            ,CASE WHEN ORDEN.PDDRQJ <> 0 THEN TO_DATE(1900000 + ORDEN.PDDRQJ,'yyyyddd') END AS FECHA_NECESIDAD
            ,case when ORDEN.PDOPDJ <> 0 then TO_DATE(1900000 + ORDEN.PDOPDJ,'yyyyddd') end as FECHA_ENTREGA
            ,CASE WHEN ORDEN.PDCNDJ <> 0 THEN TO_DATE(1900000 + ORDEN.PDCNDJ,'yyyyddd') else TO_DATE('01/01/1000','DD/MM/YYYY') END AS FECHA_CANCELACION
         
            ,ORDEN.PDLTTR as ESTADO_ULTIMO
            ,nvl(TRIM(ESTADO.DRDL01),'--') AS ESTADO_ULTIMO_DESC 
            ,ORDEN.PDNXTR AS ESTADO_SIGUIENTE 
             
            ,ORDEN.PDANBY as COMPRADOR
            ,nvl(TRIM(COMPRADOR.ABALPH),'--') as COMPRADOR_DESC 
             
            ,TRIM(ORDEN.PDTORG) as CREATED_BY 
            ,nvl(TRIM(ORG.DIR_DESC),'--') as CREATED_BY_DESC
         
            ,ORDEN.PDAN8  as PROVEEDOR 
            ,nvl(trim(PROVEEDOR.ABALPH),'--') AS PROVEEDOR_DESC 
         
            ,ORDEN.PDITM as  ITEM 
            ,nvl(TRIM(ORDEN.PDLITM),'--') AS ITEM_NUMERO 
            ,NVL(TRIM(ORDEN.PDDSC1),'--') as ITEM_DESC1 
            ,NVL(TRIM(ORDEN.PDDSC2),'--') as ITEM_DESC2 
            ,NVL(TRIM(ORDEN.PDGLC),'--') as ITEM_GLCLASS
         
            ,(ORDEN.PDUORG/10000) AS CANTIDAD_SOLIC
            ,ORDEN.PDUOM AS UDM         
            ,trim(UDM.DRDL01) AS UDM_DESC 
             
            ,(ORDEN.PDUREC/10000) AS CANTIDAD_RECIB
            ,(ORDEN.PDUOPN/10000) AS CANTIDAD_XRECIB
         
            ,CASE 
              WHEN (ORDEN.PDUOPN = 0 AND ORDEN.PDUREC > 0) THEN 'COMPLETA'  
              when (ORDEN.PDUREC = 0 and ORDEN.PDUOPN > 0) then 'PENDIENTE'
              when (ORDEN.PDUREC > 0 and ORDEN.PDUOPN > 0) then 'PARCIAL'  
              when (ORDEN.PDUREC = 0 and ORDEN.PDUOPN = 0) then 'CANCELADA'  
              when (ORDEN.PDUREC is null and ORDEN.PDUOPN is null) then 'PENDIENTE'
            end as RECEPCION             
         
            ,(ORDEN.PDFRRC/10000) AS PU_EX
            ,(ORDEN.PDFEA/100) AS TOTAL_EX
            ,(ORDEN.PDFREC/100) AS MONTO_RECIB_EX
            ,(ORDEN.PDFAP/100) AS MONTO_XRECIB_EX          
             
            ,ORDEN.PDCRCD AS MONEDA
            ,ORDEN.PDCRR AS TASA              
         
            ,(ORDEN.PDPRRC/10000) AS PU_MX 
            ,(ORDEN.PDAEXP/100) AS TOTAL_MX
            ,(ORDEN.PDAREC/100) AS MONTO_RECIB_MX
            ,(ORDEN.PDAOPN/100) AS MONTO_XRECIB_MX 
         
            ,nvl(TRIM(ORDEN.PDTXA1),'--') as IMPUESTO
            ,ORDEN.PDTX as IMPUESTO_FLAG 
            ,nvl(trim(IMPUESTO.TATAXA),'--') AS IMPUESTO_DESC 
         
            ,ORDEN.PDDSPR AS DESCUENTO 
             
            ,ORDEN.PDPTC as TERMINOS_PAGO 
            ,NVL(TRIM(CONDICION.PNPTD),'--') AS TERMINOS_PAGO_DESC 
         
            ,TRIM(ORDEN.PDUSER) as UPDATED_BY
            ,nvl(TRIM(UPDATER.DIR_DESC), '--') AS UPDATED_BY_DESC 
            ,trim(ORDEN.PDPID) AS PROGRAMA 
            
            ,NVL(TRIM(ORDEN.PDOKCO),'--') as ORI_ORDEN_COMPANIA
            ,NVL(TRIM(ORDEN.PDOCTO),'--') as ORI_ORDEN_TIPO
            ,TO_NUMBER(NVL(TRIM(ORDEN.PDOORN),0)) as ORI_ORDEN
            ,ORDEN.PDOGNO/1000 as ORI_ORDEN_LINEA
            
        FROM PRODDTA.F4311 ORDEN 
         
        /*   GENERADORES
        --------------------------------------------------------------------------------*/                 
        left outer join NUVPD.VIEW_USUARIOS ORG on 1=1
                    and ORG.CLAVE = ORDEN.PDTORG
         
         
        /*   PROVEEDORES   
        --------------------------------------------------------------------------------*/ 
        LEFT OUTER JOIN PRODDTA.F0101 PROVEEDOR  
                     ON PROVEEDOR.ABAN8 = ORDEN.PDAN8  
                     
        /*   ACTUALIZADORES
        --------------------------------------------------------------------------------*/                 
        left outer join NUVPD.VIEW_USUARIOS UPDATER on 1=1
                    and UPDATER.CLAVE = ORDEN.PDUSER
                     

        /*   COMPRADORES
        --------------------------------------------------------------------------------*/   
        LEFT OUTER JOIN PRODDTA.F0101 COMPRADOR
                     ON COMPRADOR.ABAN8 = ORDEN.PDANBY

         
        /*   TIPOS DE ORDENES   
        --------------------------------------------------------------------------------*/   
        LEFT OUTER JOIN PRODCTL.F0005 TIPO_ORDEN
                     ON TIPO_ORDEN.DRSY = '00'
                    AND TIPO_ORDEN.DRRT = 'DT'
                    AND TRIM(TIPO_ORDEN.DRKY) = trim(ORDEN.PDDCTO)                        
         
        /*   TIPOS DE LINEAS DE ORDEN   
        --------------------------------------------------------------------------------*/         
        LEFT OUTER JOIN PRODDTA.F40205  TIPO_LINEA 
                     ON TIPO_LINEA.LFLNTY = ORDEN.PDLNTY 
         
         
        /*   ESTADOS DE LA ORDEN   
        --------------------------------------------------------------------------------*/   
        LEFT OUTER JOIN PRODCTL.F0005D ESTADO
                     ON ESTADO.DRSY = '40'
                    AND ESTADO.DRRT = 'AT'
                    AND TRIM(ESTADO.DRKY) = trim(ORDEN.PDLTTR)                     
                       
                      
        /*   UNIDADES DE MEDIDAS 
        --------------------------------------------------------------------------------*/                           
        LEFT OUTER JOIN PRODCTL.F0005D UDM
                     ON UDM.DRSY = '00'
                    AND UDM.DRRT = 'UM'
                    AND TRIM(UDM.DRKY) = trim(ORDEN.PDUOM)
         
         
        /*   CONDICIONES DE PAGO 
        --------------------------------------------------------------------------------*/  
        LEFT OUTER JOIN PRODDTA.F0014 CONDICION
                     ON CONDICION.PNPTC = ORDEN.PDPTC 
         
         /*  IMPUESTOS 
        --------------------------------------------------------------------------------*/           
        LEFT OUTER JOIN PRODDTA.F4008 IMPUESTO
                     ON IMPUESTO.TATXA1 = ORDEN.PDTXA1 
          
        /*  COMPANIA 
        --------------------------------------------------------------------------------*/ 
        LEFT OUTER JOIN PRODDTA.F0010 COMPANIA
                     ON COMPANIA.CCCO = ORDEN.PDKCOO  
         
        /*  UNIDADES DE NEGOCIO 
        --------------------------------------------------------------------------------*/ 
        LEFT OUTER JOIN PRODDTA.F0006 CENTRO
                     ON CENTRO.MCMCU = ORDEN.PDMCU 
                   
        /*  TIPOS DE UNIDADES DE NEGOCIO 
        --------------------------------------------------------------------------------*/ 
        LEFT OUTER JOIN PRODCTL.F0005 TIPO_CENTRO
                     ON TIPO_CENTRO.DRSY = '00'
                    AND TIPO_CENTRO.DRRT = 'MC'
                    AND TRIM(TIPO_CENTRO.DRKY) = trim(CENTRO.MCSTYL)                     
                     
        /*  PROYECTOS 
        --------------------------------------------------------------------------------*/                      
        LEFT OUTER JOIN PRODCTL.F0005 PROYECTO
                     ON PROYECTO.DRSY = '00'    
                    AND PROYECTO.DRRT = '01'    
                    and TRIM(PROYECTO.DRKY) = TRIM(CENTRO.MCRP01) 
)  orden where 1=1
and ORDEN.TIPO in ('OS','OP','OX','US','UP','UX','TS','SA')
and ORDEN.COMPANIA = '00006'
and ORDEN.TIPO = 'UP'
and ORDEN.NUMERO = '7639'     
;



]]>
         </code>
      </snippet>
      <snippet name="VIEW_AUTORIZACIONES" description="">
         <code>
            <![CDATA[select
*
from (

    CREATE OR REPLACE FORCE EDITIONABLE VIEW "NUVPD"."VIEW_AUTORIZACIONES" ("ORDEN", "RUTA ","ESTADO","UN","OC_COMPANIA","OC_TIPO","OC","OC_SUFIX","AUTORIZADOR","AUTORIZADOR_DESC","AUTORIZACION_FECHA","AUTORIZACION_HORA") AS 
		select     
    ROW_NUMBER() over (partition by HOKCOO,HODCTO,HODOCO,HOSFXO order by HORDJ, HORDT) as ORDEN
    ,HOARTG AS RUTA 
    ,HOASTS as ESTADO
		,HOMCU as UN
		,HOKCOO as OC_COMPANIA
		,HODCTO as OC_TIPO
		,HODOCO as OC
		,HOSFXO as OC_SUFIX
		,HORDB as AUTORIZADOR
    ,AUTORIZADOR.DIR_DESC AS AUTORIZADOR_DESC
    ,case when HORDJ <> 0 then TO_DATE(1900000 + HORDJ,'yyyyddd') end as AUTORIZACION_FECHA 
		,HORDT as  AUTORIZACION_HORA
		from PRODDTA.F4209 RUTA 
    
    /* AUTORIZADORES
    ------------------------------------*/
    left outer join NUVPD.VIEW_USUARIOS AUTORIZADOR on 1=1
                and AUTORIZADOR.CLAVE = RUTA.HORDB
    where 1=1  
    and TRIM(HOASTS) not in ('3N','O')
    
    order by
      HORDJ
      ,HORDT
      
	) APROBACIONES	
  
where 1 = 1
and APROBACIONES.OC = 22567
AND APROBACIONES.OC_TIPO = 'OP'

;

--HORPER as RESPONSABLE
--,HOAN8 as APROBADOR
--,NVL(RESPONSABLE.DIR_DESC,'--') as RESPONSABLE_DESC
-- HOHCOD as hold_code  (Solo tiene asteriscos)
--,HOCTYP --<- Vacios
--,HORDC  --<- Vacios
--,HOATY  --<- Vacios
--,HOEDEI --<- Vacios
--,HODLNID --<- 0's
--,HOPA8  --<- 0's
--,HOSHAN --<- 0's
--  ,CASE WHEN HOTRDJ <> 0 THEN TO_DATE(1900000 + HOTRDJ,'yyyyddd') END AS CREACION_FECHA 
--	,case when HODRQJ <> 0 then TO_DATE(1900000 + HODRQJ,'yyyyddd') end as SOLICITUD_FECHA
--	,case when HOPDDJ <> 0 then TO_DATE(1900000 + HOPDDJ,'yyyyddd') end as ENTREGA_FECHA 
-- ,HOLNID as OC_LINEA
-- ,HOITM as item
-- ,HOLITM as item_numero
-- ,HOAITM as ITEM_NUMERO2
  ]]>
         </code>
      </snippet>
      <snippet name="F41001 - Branch/Plant Constants" description="">
         <code>
            <![CDATA[/* Branch/Plant Constants */
select
SUCURSAL.CIMCU as UN
,SUCURSAL.CIARTG as RUTA_APROBACION
,rutas.RUTA_DESCRIPCION
,rutas.ORDEN_TIPO
,rutas.MONTO_APROBACION
,RUTAS.AUTORIZADOR
,NVL(ADDRESS.ABALPH, '-') AS AUTORIZADOR_DESC

from PRODDTA.F41001 SUCURSAL

LEFT OUTER JOIN (
                    select
                    APDCTO as ORDEN_TIPO
                    ,APARTG as RUTA_APROBACION
                    ,APDL01 as RUTA_DESCRIPCION
                    ,APALIM as MONTO_APROBACION
                    ,APRPER as AUTORIZADOR
                    --,USR.DIR_DESC  AS AUTORIZADOR_DESC
                    from PRODDTA.F43008 RUTA
                    
                   -- left outer join NUVPD.VIEW_USUARIOS USR on 1=1
                    --            and USR.DIR = RUTA.APRPER
                ) RUTAS on 1=1
                AND  RUTAS.RUTA_APROBACION = SUCURSAL.CIARTG

left outer join PRODDTA.F0101 ADDRESS on 1=1
            and ADDRESS.ABAN8 = RUTAS.AUTORIZADOR
            

where 1=1
--and SUCURSAL.CIMCU like '%F301114%'
--AND rutas.ORDEN_TIPO = 'OP'

order by 
  SUCURSAL.CIMCU, SUCURSAL.CIARTG, RUTAS.ORDEN_TIPO, RUTAS.MONTO_APROBACION
  ]]>
         </code>
      </snippet>
      <snippet name="Autorizaciones de Ordenes de Compra" description="">
         <code>
            <![CDATA[select
AUTORIZAR.*
,ORDENES.ESTADO_LAST
,ORDENES.estado_next
from (
		SELECT 
		HOHCOD as hold_code
		,HORPER as PERSON_RESPONSIBLE
    ,nvl(TRIM(UPDATER.DIRECCION_DESC),'--') AS APROBADOR_desc
		--,HOAN8 as APROBADOR
    
		,HOMCU as un
		,HOKCOO as oc_compania
		,HODOCO as oc
		,HODCTO as oc_tipo
		,HOSFXO as oc_sufix
		,HOLNID as oc_linea
		,HOITM as item
		,HOLITM as item_numero
		,HOAITM as item_numero2
   
    ,CASE WHEN HOTRDJ <> 0 THEN TO_DATE(1900000 + HOTRDJ,'yyyyddd') END AS fecha_creacion 
		,CASE WHEN HODRQJ <> 0 THEN TO_DATE(1900000 + HODRQJ,'yyyyddd') END AS fecha_solicitud 
  	,CASE WHEN HOPDDJ <> 0 THEN TO_DATE(1900000 + HOPDDJ,'yyyyddd') END AS fecha_entregada 
		,HORDB AS RELEASE_BY
    ,CASE WHEN HORDJ <> 0 THEN TO_DATE(1900000 + HORDJ,'yyyyddd') END AS FECHA_RELEASED 
		,HORDT AS  HORA
		,HOARTG AS RUTA
		,HOASTS as ESTADO
		from PRODDTA.F4209

    LEFT OUTER JOIN (                    
                      select                    
                      USUARIO.ULUSER as CLAVE                       
                      ,USUARIO.ULAN8 as DIRECCION
                      ,DIRECCION.ABALPH as DIRECCION_DESC
                      ,DIRECCION.ABAT1 AS DIRECCION_TIPO
                                    
                      FROM SY910.F0092 USUARIO                    
                      left outer join PRODDTA.F0101 DIRECCION
                                   on DIRECCION.ABAN8 = USUARIO.ULAN8                 
                    ) UPDATER                    
                 on UPDATER.DIRECCION = HORPER
	)	autorizar
left outer join NUVPD.VIEW_ORDENES ORDENES on 1=1
            and ORDENES.NUMERO = AUTORIZAR.OC
            and ORDENES.TIPO = AUTORIZAR.OC_TIPO
            and ordenes.compania = autorizar.oc_compania
  
where 1 = 1
--and oc = 11739
and OC_COMPANIA in ('00008','00016')
and estado like '%2N%'
;

--,HOCTYP --<- Vacios
--,HORDC  --<- Vacios
--,HOATY  --<- Vacios
--,HOEDEI --<- Vacios
--,HODLNID --<- 0's
--,HOPA8  --<- 0's
--,HOSHAN --<- 0's








]]>
         </code>
      </snippet>
      <snippet name="VISTA - Seguimiento de Compras" description="">
         <code>
            <![CDATA[select
*
from (

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "NUVPD"."VIEW_SCOMPRAS" ("REQ_COMPANIA", "REQ_COMPANIA_DESC", "REQ_UN", "REQ_UN_DESC", "REQ_UN_PROYECTO", "REQ_UN_PROYECTO_DESC", "REQ_TIPO", "REQ_TIPO_DESC", "REQ", "REQ_LINEA", "REQ_LINEA_TIPO", "REQ_GENERADOR", "REQ_GENERADOR_DESC", "REQ_FECHA_CREACION", "REQ_FECHA_NECESIDAD", "REQ_ESTADO_LAST", "REQ_ESTADO_LAST_DESC", "REQ_ESTADO_NEXT", "REQ_ITEM_NUMERO", "REQ_ITEM_DESC", "REQ_COMPRADOR", "REQ_COMPRADOR_DESC", "REQ_CANTIDAD_SOLICITADA", "REQ_UDM", "REQ_UDM_DESC", "COT_COMPANIA", "COT_TIPO", "COT", "COT_LINEA", "COT_GENERADOR", "COT_FECHA_CREACION", "COT_ESTADO_LAST", "COT_ESTADO_LAST_DESC", "COT_ESTADO_NEXT", "ORD_COMPANIA", "ORD_TIPO", "ORD_TIPO_DESC", "ORD", "ORD_FECHA_CREACION", "ORD_FECHA_ENTREGA", "ORD_GENERADOR", "ORD_GENERADOR_DESC", "ORD_LINEA", "ORD_PROVEEDOR", "ORD_PROVEEDOR_DESC", "ORD_ESTADO_LAST", "ORD_ESTADO_LAST_DESC", "ORD_ESTADO_NEXT", "ORD_CANTIDAD_SOLIC", "ORD_UDM", "ORD_UDM_DESC", "ORD_CANTIDAD_RECIB", "ORD_CANTIDAD_XRECIB", "ORD_RECEPCION", "ORD_PU_EX", "ORD_TOTAL_EX", "ORD_MONTO_RECIB_EX", "ORD_MONTO_XRECIB_EX", "ORD_MONEDA", "ORD_MONEDA_DESC", "ORD_TASA", "ORD_PU_MX", "ORD_TOTAL_MX", "ORD_MONTO_RECIB_MX", "ORD_MONTO_XRECIB_MX", "ORD_IMPUESTO", "ORD_IMPUESTO_DESC", "ORD_IMPUESTO_FLAG", "ORD_DESCUENTO", "ORD_TERMINO_PAGO", "ORD_TERMINO_PAGO_DESC", "ORD_UPDATED_BY", "ORD_UPDATED_BY_DESC") AS 
  SELECT                
            SOLICITUD.PDKCOO as REQ_COMPANIA
            ,nvl(COMPANIA.CCNAME,'--') as REQ_COMPANIA_DESC
        
            ,TRIM(SOLICITUD.PDMCU) as  REQ_UN
            ,nvl(TRIM(SUCURSAL.MCDL01 || SUCURSAL.MCDL02), '--') as REQ_UN_DESC
            ,NVL(TRIM(SUCURSAL.MCRP01),'--') as REQ_UN_PROYECTO                
            ,NVL(TRIM(PROYECTO.DRDL01),'--') AS REQ_UN_PROYECTO_DESC    
            
            ,SOLICITUD.PDDCTO as REQ_TIPO
            ,nvl(TRIM(TIPO_REQ.DRDL01), '--') as REQ_TIPO_DESC
            ,SOLICITUD.PDDOCO as REQ
            ,SOLICITUD.PDLNID/1000 as REQ_LINEA
            ,TRIM(SOLICITUD.PDLNTY) as REQ_LINEA_TIPO
            
            ,SOLICITUD.PDTORG as REQ_GENERADOR
            ,NVL(TRIM(GENERADOR_REQ.DIR_DESC),'--') as REQ_GENERADOR_DESC
            
            ,case when SOLICITUD.PDTRDJ <> 0 then TO_DATE(1900000 + SOLICITUD.PDTRDJ,'yyyyddd') else TO_DATE('01/01/1000','DD/MM/YYYY') end as REQ_FECHA_CREACION                
            ,case when SOLICITUD.PDDRQJ <> 0 then TO_DATE(1900000 + SOLICITUD.PDDRQJ,'yyyyddd') else to_date('01/01/1000','DD/MM/YYYY') end as REQ_FECHA_NECESIDAD                
            
            ,SOLICITUD.PDLTTR as REQ_ESTADO_LAST
            ,nvl(TRIM(ESTADO_REQ.DRDL01),'--') as REQ_ESTADO_LAST_DESC
            ,SOLICITUD.PDNXTR AS REQ_ESTADO_NEXT
            
            ,NVL(TRIM(SOLICITUD.PDLITM),'--') as REQ_ITEM_NUMERO                
            ,NVL(TRIM(SOLICITUD.PDDSC1 || ' ' || SOLICITUD.PDDSC2),'--') AS REQ_ITEM_DESC            
            ,SOLICITUD.PDANBY as REQ_COMPRADOR                
            ,nvl(TRIM(COMPRADOR.ABALPH),'--') AS REQ_COMPRADOR_DESC                
            ,SOLICITUD.PDUORG/10000 AS REQ_CANTIDAD_SOLICITADA
            ,SOLICITUD.PDUOM as REQ_UDM
            ,nvl(trim(UDM_REQ.DRDL01),'--') AS REQ_UDM_DESC

            ,NVL(COTIZACION.PDKCOO,'--') AS COT_COMPANIA
            ,NVL(COTIZACION.PDDCTO,'--') as COT_TIPO
            ,NVL(COTIZACION.PDDOCO,0) as COT
            ,NVL(COTIZACION.PDLNID/1000, 0) as COT_LINEA
            ,NVL(COTIZACION.PDTORG,'-') as COT_GENERADOR
            ,case when COTIZACION.PDTRDJ <> 0 then TO_DATE(1900000 + COTIZACION.PDTRDJ,'yyyyddd') else to_date('01/01/1000','DD/MM/YYYY') end as COT_FECHA_CREACION
            ,NVL(COTIZACION.PDLTTR,'--') as COT_ESTADO_LAST
            ,NVL(TRIM(ESTADO_COT.DRDL01),'-') as COT_ESTADO_LAST_DESC
            ,NVL(COTIZACION.PDNXTR,'--') AS COT_ESTADO_NEXT
                            
            ,NVL(ORDEN.PDKCOO,'--') AS ORD_COMPANIA
            ,NVL(ORDEN.PDDCTO, '--') as ORD_TIPO
            ,NVL(TRIM(TIPO_ORDEN.DRDL01),'--') as ORD_TIPO_DESC
            ,nvl(ORDEN.PDDOCO, 0) as ORD
            ,case when ORDEN.PDTRDJ <> 0 then TO_DATE(1900000 + ORDEN.PDTRDJ,'yyyyddd') else TO_DATE('01/01/1000','DD/MM/YYYY') end as ORD_FECHA_CREACION                
            ,case when ORDEN.PDOPDJ <> 0 then TO_DATE(1900000 + ORDEN.PDOPDJ,'yyyyddd') else TO_DATE('01/01/1000','DD/MM/YYYY') end as ORD_FECHA_ENTREGA                
            ,NVL(ORDEN.PDTORG,'--') as ORD_GENERADOR
            ,NVL(TRIM(GENERADOR_ORDEN.DIR_DESC),'--') as ORD_GENERADOR_DESC
            ,NVL(ORDEN.PDLNID/1000,0) as ORD_LINEA                
            ,NVL(ORDEN.PDAN8,0)  as ORD_PROVEEDOR                
            ,NVL(TRIM(PROVEEDOR.ABALPH),'--') as ORD_PROVEEDOR_DESC                 
            ,NVL(ORDEN.PDLTTR,'--') as ORD_ESTADO_LAST
            ,NVL(TRIM(ESTADO_OC.DRDL01),'--') as ORD_ESTADO_LAST_DESC    
            ,nvl(ORDEN.PDNXTR,'--') AS ORD_ESTADO_NEXT
            
            ,NVL(ORDEN.PDUORG/10000,0) as ORD_CANTIDAD_SOLIC      
            ,NVL(ORDEN.PDUOM,'--') as ORD_UDM                
            ,nvl(trim(UDM_ORDEN.DRDL01),'--') AS ORD_UDM_DESC
        
            ,NVL(ORDEN.PDUREC/10000,0) as ORD_CANTIDAD_RECIB
            ,nvl(ORDEN.PDUOPN/10000,0) AS ORD_CANTIDAD_XRECIB
        
             ,case                 
              WHEN (ORDEN.PDUOPN = 0 AND ORDEN.PDUREC > 0) THEN 'COMPLETA'
              WHEN (ORDEN.PDUREC = 0 AND ORDEN.PDUOPN > 0) THEN 'PENDIENTE'                  
              WHEN (ORDEN.PDUREC > 0 AND ORDEN.PDUOPN > 0) THEN 'PARCIAL'                  
              when (ORDEN.PDUREC = 0 and ORDEN.PDUOPN = 0) then 'CANCELADA'
              WHEN (ORDEN.PDUREC is NULL and ORDEN.PDUOPN is NULL) THEN 'PENDIENTE'
            END AS ORD_RECEPCION                         
            
            ,NVL(ORDEN.PDFRRC/10000,0) as ORD_PU_EX
            ,nvl(ORDEN.PDFEA/100,0) AS ORD_TOTAL_EX
        
            ,NVL(ORDEN.PDFREC/100,0) as ORD_MONTO_RECIB_EX                   
            ,nvl(ORDEN.PDFAP/100,0) AS ORD_MONTO_XRECIB_EX       
            
            ,NVL(ORDEN.PDCRCD,'--') as ORD_MONEDA
            ,NVL(MONEDA.CVDL01,'--') as ORD_MONEDA_DESC   
            
            ,nvl(ORDEN.PDCRR,0) AS ORD_TASA
        
            ,NVL(ORDEN.PDPRRC/10000,0) as ORD_PU_MX
            ,nvl(ORDEN.PDAEXP/100,0) as ORD_TOTAL_MX
        
            ,NVL(ORDEN.PDAREC/100,0) as ORD_MONTO_RECIB_MX                   
            ,nvl(ORDEN.PDAOPN/100,0) AS ORD_MONTO_XRECIB_MX      
            
            ,NVL(TRIM(ORDEN.PDTXA1),'--') as ORD_IMPUESTO
            ,NVL(TRIM(IMPUESTO.TATAXA),'--') as ORD_IMPUESTO_DESC
            ,nvl(ORDEN.PDTX,'--') AS ORD_IMPUESTO_FLAG
        
            ,nvl(ORDEN.PDDSPR,0) AS ord_DESCUENTO                    
                                
            ,NVL(ORDEN.PDPTC,'--') as ORD_TERMINO_PAGO
            ,nvl(TRIM(CONDICION.PNPTD),'--') AS ord_TERMINO_PAGO_DESC
                            
            ,NVL(TRIM(ORDEN.PDUSER),'--') as ORD_UPDATED_BY
            ,NVL(TRIM(UPDATER.DIR_DESC),'--') as ORD_UPDATED_BY_DESC
            
          FROM PRODDTA.F4311 SOLICITUD
          
          /*   COTIZACIONES                
          --------------------------------------------------------------------------------*/                   
          left outer join PRODDTA.F4311 COTIZACION on 1=1
                      AND COTIZACION.PDOKCO = SOLICITUD.PDKCOO
                      and TO_NUMBER(NVL(TRIM(COTIZACION.PDOORN),'0')) = SOLICITUD.PDDOCO
                      AND COTIZACION.PDOCTO = SOLICITUD.PDDCTO
                      and COTIZACION.PDOGNO = SOLICITUD.PDLNID
                      and COTIZACION.PDDCTO in ('QS','OQ','QX')
                      AND COTIZACION.PDLTTR NOT IN ('980')
                                      
           /*  ORDENES DE COMPRA                 
          --------------------------------------------------------------------------------*/                                                  
          LEFT OUTER JOIN PRODDTA.F4311 ORDEN ON 1=1
                      and TO_NUMBER(NVL(trim(ORDEN.PDOORN),'0')) = COTIZACION.PDDOCO         
                      AND ORDEN.PDOCTO = COTIZACION.PDDCTO
                      AND ORDEN.PDOKCO = COTIZACION.PDKCOO                 
                      and ORDEN.PDOGNO = COTIZACION.PDLNID
                      and ORDEN.PDDCTO in ('OS','OP','OX')                 
                      and ORDEN.PDLTTR not in ('980')
                          
          /*  COMPANIA                    
          --------------------------------------------------------------------------------*/
          left outer join PRODDTA.F0010 COMPANIA
                       ON COMPANIA.CCCO = SOLICITUD.PDKCOO
                          
          /*  UNIDADES DE NEGOCIO                 
          --------------------------------------------------------------------------------*/                 
          LEFT OUTER JOIN PRODDTA.F0006 SUCURSAL                
                       ON SUCURSAL.MCMCU = SOLICITUD.PDMCU                
                                       
          /*  PROYECTOS                 
          --------------------------------------------------------------------------------*/                                      
          LEFT OUTER JOIN PRODCTL.F0005 PROYECTO                
                       ON PROYECTO.DRSY = '00'                    
                      AND PROYECTO.DRRT = '01'
                      AND TRIM(PROYECTO.DRKY) = TRIM(SUCURSAL.MCRP01)                   
                                     
          /*   GENERADORES SOLICITUD
          --------------------------------------------------------------------------------*/   
          left outer join NUVPD.VIEW_USUARIOS GENERADOR_REQ on 1=1
                      AND GENERADOR_REQ.CLAVE = trim(SOLICITUD.PDTORG) 

                       
          /*   GENERADORES ORDENES               
          --------------------------------------------------------------------------------*/ 
          left outer join NUVPD.VIEW_USUARIOS GENERADOR_ORDEN on 1=1
                      AND GENERADOR_ORDEN.CLAVE = trim(ORDEN.PDTORG)           
                        
                          
          /*   ACTUALIZADORES ORDENES                 
          --------------------------------------------------------------------------------*/    
          left outer join NUVPD.VIEW_USUARIOS UPDATER on 1=1
                      AND UPDATER.CLAVE = trim(ORDEN.PDUSER)            
                                             
          /*   COMPRADORES                
          --------------------------------------------------------------------------------*/
          LEFT OUTER JOIN PRODDTA.F0101 COMPRADOR                
                       ON COMPRADOR.ABAN8 = SOLICITUD.PDANBY                
                          
          /*   PROVEEDORES                   
          --------------------------------------------------------------------------------*/
          LEFT OUTER JOIN PRODDTA.F0101 PROVEEDOR                  
                       ON PROVEEDOR.ABAN8 = ORDEN.PDAN8                        
            
          /*   UNIDADES DE MEDIDAS REQUISICION               
          --------------------------------------------------------------------------------*/
          LEFT OUTER JOIN PRODCTL.F0005D UDM_REQ
                       ON UDM_REQ.DRSY = '00'                
                      and UDM_REQ.DRRT = 'UM'                
                      AND TRIM(UDM_REQ.DRKY) = SOLICITUD.PDUOM
                                      
          /*   UNIDADES DE MEDIDAS ORDEN
          --------------------------------------------------------------------------------*/
          LEFT OUTER JOIN PRODCTL.F0005D UDM_ORDEN
                       ON UDM_ORDEN.DRSY = '00'                
                      and UDM_ORDEN.DRRT = 'UM'                
                      AND TRIM(UDM_ORDEN.DRKY) = ORDEN.PDUOM
                                      
           /*  IMPUESTOS                 
          --------------------------------------------------------------------------------*/
          LEFT OUTER JOIN PRODDTA.F4008 IMPUESTO                
                       on IMPUESTO.TATXA1 = ORDEN.PDTXA1
        
          /*   TIPOS DE REQUISICONES                      
          --------------------------------------------------------------------------------*/
          LEFT OUTER JOIN PRODCTL.F0005D TIPO_REQ                   
                       ON TIPO_REQ.DRSY = '00'                   
                      and TIPO_REQ.DRRT = 'DT'                   
                      AND TRIM(TIPO_REQ.DRKY) = SOLICITUD.PDDCTO
                      
          /*   TIPOS DE ORDENES                      
          --------------------------------------------------------------------------------*/
          left outer join PRODCTL.F0005D TIPO_ORDEN                   
                       ON TIPO_ORDEN.DRSY = '00'                   
                      and TIPO_ORDEN.DRRT = 'DT'                   
                      AND TRIM(TIPO_ORDEN.DRKY) = ORDEN.PDDCTO
        
          /*   ESTADOS DE LA REQ                      
          --------------------------------------------------------------------------------*/
          LEFT OUTER JOIN PRODCTL.F0005D ESTADO_REQ                  
                       ON ESTADO_REQ.DRSY = '40'                   
                      and ESTADO_REQ.DRRT = 'AT'                   
                      AND TRIM(ESTADO_REQ.DRKY) = SOLICITUD.PDLTTR
                      
          /*   ESTADOS DE LA COTIZACION                      
          --------------------------------------------------------------------------------*/
          LEFT OUTER JOIN PRODCTL.F0005D ESTADO_COT
                       on ESTADO_COT.DRSY = '40'                   
                      and ESTADO_COT.DRRT = 'AT'                   
                      AND TRIM(ESTADO_COT.DRKY) = COTIZACION.PDLTTR
                      
          /*   ESTADOS DE LA ORDEN                      
          --------------------------------------------------------------------------------*/
          LEFT OUTER JOIN PRODCTL.F0005D ESTADO_OC                
                       on ESTADO_OC.DRSY = '40'                   
                      and ESTADO_OC.DRRT = 'AT'                   
                      AND TRIM(ESTADO_OC.DRKY) = ORDEN.PDLTTR
        
          /*  MONEDAS
          --------------------------------------------------------------------------------*/ 
          left outer join PRODDTA.F0013 MONEDA
                       ON MONEDA.CVCRCD = ORDEN.PDCRCD              
                       
          /*   CONDICIONES DE PAGO                    
          --------------------------------------------------------------------------------*/                     
          left outer join PRODDTA.F0014 CONDICION                   
                       ON CONDICION.PNPTC = ORDEN.PDPTC                  
         
          where 1=1                
          and SOLICITUD.PDDCTO in ('SR','OR','XR') 
          and SOLICITUD.PDLTTR not in ('980') 
          
          order by
            SOLICITUD.PDKCOO --/ REQ_COMPANIA
            ,SOLICITUD.PDDCTO --/ REQ_TIPO
            ,SOLICITUD.PDDOCO --/ REQ
            ,SOLICITUD.PDLNID/1000 --/ REQ_LINEA
;

)
where 1=1

;



SELECT
*
from NUVPD.VIEW_SCOMPRAS where 1=1
and REQ_ESTADO_LAST != '980'
and REQ = 22
and req_tipo = 'OR'


;






SELECT
PDKCOO
,PDDCTO
,PDDOCO
,PDLNID
,PDLTTR
,PDNXTR
,PDUOPN
,PDUREC
FROM PRODDTA.F4311 
WHERE 1=1
and PDLTTR not in ('980')
AND PDDCTO = 'SR'
AND PDDOCO in (8739, 9243, 9245, 9247, 9248, 9249)


--AND PDLNID/1000 IN  (1)
--and PDNXTR = 110
--and PDLTTR = 100
;




update PRODDTA.F4311 set
PDCNDJ = 114291 --- FECHA_CANCELACION
,PDUOPN = 0   -- UNIDADES ABIERTAS
,PDAOPN = 0   --- MONTO ABIERO
,PDNXTR = 999
,PDLTTR = 980
where 1=1
--and PDKCOO = '00001'
and PDDOCO = 0
and PDDCTO = 'OP'
--AND PDLNID/1000 = 1
;


COMMIT;
]]>
         </code>
      </snippet>
      <snippet name="VISTA - Cuadro Comparativos" description="">
         <code>
            <![CDATA[/* ------------------------------------------------------------------------------ *\
    Nombre: VIEW_CCOMPARATIVO
    
    Descripcion: Vista que muestra las cotizaciones y sus proveedores asignados 
                 con sus respectivas respuestas (precios)
\* ------------------------------------------------------------------------------ */

/* ------------------------------------------------------------------------------ *\
    Dependencias:
      - PRODDTA.F4330
      - PRODDTA.F0101
      - PRODDTA.F4331
\* ------------------------------------------------------------------------------ */

select
*
from (
--create or replace force view "NUVPD"."VIEW_CCOMPARATIVO" ("COT_COMPANIA","COT_TIPO","COT","COT_SUFIX","COT_LINEA","COT_FECHA","PROVEEDOR","PROVEEDOR_DESC ","FECHA_REQ_RESPUESTA","FECHA_RESPUESTA","FECHA_PROMETIDA","ESTADO_RESPUESTA","UNIDADES","PRECIO_UNITARIO","MONEDA","FECHA_VENCIMIENTO") as
          select
          SSF.P0KCOO as COT_COMPANIA
          ,SSF.P0DCTO as COT_TIPO
          ,SSF.P0DOCO as COT
          ,SSF.P0SFXO as COT_SUFIX
          ,BKP.P1LNID/1000 as COT_LINEA
          ,case when SSF.P0TRDJ <> 0 then TO_DATE(1900000 + SSF.P0TRDJ,'yyyyddd') end as COT_FECHA
          ,SSF.P0AN8    as PROVEEDOR
          ,NVL(TRIM(PROV.ABALPH),'--') as PROVEEDOR_DESC 

          ,case when SSF.P0RQQJ <> 0 then TO_DATE(1900000 + SSF.P0RQQJ,'yyyyddd') end as FECHA_REQ_RESPUESTA
          ,case when SSF.P0QRDJ <> 0 then TO_DATE(1900000 + SSF.P0QRDJ,'yyyyddd') end as FECHA_RESPUESTA
          ,case when SSF.P0PDDJ <> 0 then TO_DATE(1900000 + SSF.P0PDDJ,'yyyyddd') end as FECHA_PROMETIDA

          ,case when P0RSPO = 1 then 'PRECIOS ENTREGADOS' else 'FALTA RESPUESTA' END as ESTADO_RESPUESTA
          
          ,BKP.P1UORG/10000   as UNIDADES
          ,BKP.P1PRRC/10000   as PRECIO_UNITARIO
          ,BKP.P1CRCD    as MONEDA
          
          ,case when BKP.P1CNDJ <> 0 then TO_DATE(1900000 + BKP.P1CNDJ,'yyyyddd') end as FECHA_VENCIMIENTO          

          from PRODDTA.F4330 SSF

          /*   PROVEEDORES                   
          --------------------------------------------------------------------------------*/
          left outer join PRODDTA.F0101 PROV on 1=1
                      and PROV.ABAN8 = SSF.P0AN8
                     
          /*   Quantity Breaks File
          --------------------------------------------------------------------------------*/
          left outer join PRODDTA.F4331 BKP on 1=1
                      and BKP.P1KCOO = SSF.P0KCOO --/ Cot Compania
                      and BKP.P1DCTO = SSF.P0DCTO --/ Cot Tipo
                      and BKP.P1DOCO = SSF.P0DOCO --/ Cot Numero
                      and BKP.P1SFXO = SSF.P0SFXO --/ Cot Sufix     
                      AND BKP.P1AN8 = SSF.P0AN8  --/ Proveedor   
                    
          order by 
             SSF.P0KCOO --/ Cot Compania
            ,SSF.P0DCTO --/ Cot Tipo
            ,SSF.P0DOCO --/ Cot Numero
            ,BKP.P1LNID --/ Cot Linea                    
     )
where 1=1
and COT = 39
and COT_TIPO = 'OQ'
and COT_COMPANIA = '00001'



/* ------------------------------------------------------------------------------ *\
    CAMPOS NO UTILIZADOS DE TABLA: F4330
\* ------------------------------------------------------------------------------ */

--,P0QPRT as IMPRESION_BANDERA
--,P0UREL as UNIDADES_LIBERADAS
--,P0AREL as MONTO_LIBERADO

/* ------------------------------------------------------------------------------ *\
    CAMPOS NO UTILIZADOS DE TABLA: F4331
\* ------------------------------------------------------------------------------ */

-- P1PDDJ as FECHA_PROMETIDA

;]]>
         </code>
      </snippet>
      <snippet name="Pendientes de Aprobacion" description="">
         <code>
            <![CDATA[select
*
from (
        SELECT 
        
          AUT.HOKCOO as OC_COMPANIA
          ,AUT.HODOCO as oc
          ,AUT.HODCTO as oc_tipo
          ,AUT.HOSFXO as OC_SUFIX
          ,AUT.HOMCU as UN
          ,AUT.HOLNID as oc_linea
          ,AUT.HOITM as item
          ,AUT.HOLITM as item_numero
          ,AUT.HOAITM as ITEM_NUMERO2
        
          --HOHCOD as HOLD_CODE
          ,AUT.HORPER as APROBADOR
          ,TRIM(aprobador.ABALPH) as aprobador_desc 
          ,AUT.HOAN8 as creado
       
          ,CASE WHEN AUT.HOTRDJ <> 0 THEN TO_DATE(1900000 + AUT.HOTRDJ,'yyyyddd') END AS fecha_creacion 
          ,CASE WHEN AUT.HODRQJ <> 0 THEN TO_DATE(1900000 + AUT.HODRQJ,'yyyyddd') END AS fecha_solicitud 
          ,CASE WHEN AUT.HOPDDJ <> 0 THEN TO_DATE(1900000 + AUT.HOPDDJ,'yyyyddd') END AS fecha_entregada 
          ,AUT.HORDB AS RELEASE_BY
          ,CASE WHEN AUT.HORDJ <> 0 THEN TO_DATE(1900000 + AUT.HORDJ,'yyyyddd') END AS FECHA_RELEASED 
          ,AUT.HORDT AS  HORA
          ,AUT.HOARTG AS RUTA
          ,AUT.HOASTS as ESTADO
        FROM proddta.F4209 AUT
        
        /*   RESPONSABLES
        --------------------------------------------------------------------------------*/   
        left outer join PRODDTA.F0101 aprobador
                     ON aprobador.ABAN8 = AUT.HORPER
                     
        where 1=1
	)	
where 1 = 1
--and OC = 21222
--and OC_COMPANIA = '00001'
and ESTADO = '2N'
AND APROBADOR = 200068

ORDER BY OC_COMPANIA, OC_TIPO, OC


/* NOTAS:
--------------------------------------------------------------------------------   
DESCRIPCION DE ESTADOS:

0 : Persona que crea la orden de compra
2A: Persona probo la Orden
2N: Persona tiene pendiente aprobacion


Nota: En esta tabla no aparece el autorizador hasta que ya autorizo o tiene 
pendiente autorizar
*/

--,HOCTYP --<- Vacios
--,HORDC  --<- Vacios
--,HOATY  --<- Vacios
--,HOEDEI --<- Vacios
--,HODLNID --<- 0's
--,HOPA8  --<- 0's
--,HOSHAN --<- 0's

;


select
*
from PRODDTA.F4209 where 1=1
and HOKCOO = '00001'
and HODOCO = 21222
;

]]>
         </code>
      </snippet>
      <snippet name="ServiciosICAS" description="">
         <code>
            <![CDATA[select
ITEM.*
,RECEP_OS_4315.CUENTA_NUMERO || ' (' || RECEP_OS_4315.CUENTA_DESCRIPCION || ')' as "RECEPCION - OS (4315)"
,RECEP_OS_4320.CUENTA_NUMERO || ' (' || RECEP_OS_4320.CUENTA_DESCRIPCION || ')' as "RECEPCION - OS (4320)"

from NUVPD.VIEW_ITEMS ITEM

/* ICAS DE RECEPCION de TIPO DE OS
----------------------------------------------------------------------------*/
left outer join NUVPD.VIEW_ICASM RECEP_OS_4315 on 1=1
            and RECEP_OS_4315.ICA = 4315
            and RECEP_OS_4315.DOC_TIPO = 'OS' 
            and RECEP_OS_4315.COMPANIA = '00011'
            and RECEP_OS_4315.CUENTA_UN = 'F211133'      
            and RECEP_OS_4315.GL_CODIGO = ITEM.GL_CODIGO               
            AND RECEP_OS_4315.CUENTA_UN_TIPO  NOT IN ('-','*','MD')
                     
left outer join NUVPD.VIEW_ICASM RECEP_OS_4320 on 1=1
            and RECEP_OS_4320.ICA = 4320    
            and RECEP_OS_4320.DOC_TIPO = RECEP_OS_4315.DOC_TIPO            
            and RECEP_OS_4320.COMPANIA = RECEP_OS_4315.COMPANIA
            --and ICA_RECEP1_4320.CUENTA_UN                        
            and RECEP_OS_4320.GL_CODIGO = ITEM.GL_CODIGO                     
            AND RECEP_OS_4320.CUENTA_UN_TIPO  NOT IN ('-','*','MD')

where 1=1
and ITEM.LINEA_TIPO in ('J','N','AF','SE')
--AND ITEM.GL_CODIGO = 'ACAF'
;]]>
         </code>
      </snippet>
   </group>
   <group category="0 - CONTABILIDAD" language="PLSQL">
      <snippet name="F0911 - Account Ledger" description="">
         <code>
            <![CDATA[

SELECT
*
from (
        SELECT 
           ASIENTO.GLKCO AS DOC_COMPANIA
          ,ASIENTO.GLDCT AS DOC_TIPO
          ,ASIENTO.GLDOC AS DOC
          ,ASIENTO.GLSFX AS DOC_LINEA
          ,CASE WHEN ASIENTO.GLDGJ <> 0 THEN TO_DATE(1900000 + ASIENTO.GLDGJ,'YYYYDDD') END AS DOC_FECHA_LM
          ,ASIENTO.GLJELN AS JE_LINEA
          ,ASIENTO.GLEXTL AS LINEA_TIPO
          
          ,ASIENTO.GLLT AS LIBRO
          ,ASIENTO.GLFY AS ANIO
          ,ASIENTO.GLPN AS PERIODO

          --,ASIENTO.GLAA/100 AS MONTO
          
          ,CASE
            WHEN ASIENTO.GLAA/100 > = 0 THEN ASIENTO.GLAA/100
          END AS CARGO

          ,CASE
            WHEN ASIENTO.GLAA/100 < 0 THEN ASIENTO.GLAA/100
          END AS ABONO          
          
          ,ASIENTO.GLCRCD AS MONEDA
          ,ASIENTO.GLCRR AS TASA          
          
          ,TRIM(ASIENTO.GLANI) AS CUENTA_NUMERO
          ,TRIM(CUENTA.GMDL01) AS DESCRIPCION
          ,ASIENTO.GLAID AS CUENTA
          ,ASIENTO.GLMCU AS CUENTA_UN
          ,ASIENTO.GLOBJ AS CUENTA_OBJETO
          ,ASIENTO.GLSUB AS CUENTA_AUXILIAR
          ,ASIENTO.GLSBL AS CUENTA_SUBLIBRO
          ,ASIENTO.GLSBLT AS CUENTA_SUB_TIPO
          
          ,ASIENTO.GLPOST AS POSTEO
          ,ASIENTO.GLICU AS BATCH
          ,ASIENTO.GLICUT AS BATCH_TIPO
           
          ,ASIENTO.GLODOC AS DOCU_ORGI
          ,ASIENTO.GLODCT AS DOCU_ORGI_TIPO
          ,ASIENTO.GLOSFX AS DOCU_ORGI_LINEA
          ,ASIENTO.GLOKCO AS DOCU_ORGI_COMPANIA
        
          ,ASIENTO.GLPKCO as OC_COMPANIA
          ,case when TRIM(ASIENTO.GLPO) is null then ' ' else TO_CHAR( TO_NUMBER(ASIENTO.GLPO)) end as OC          
          ,ASIENTO.GLDCTO AS OC_TIPO
          ,ASIENTO.GLPDCT AS OC_TIPO_2
          ,ASIENTO.GLPSFX as OC_SUFIX
          ,ASIENTO.GLLNID/1000 as OC_LINEA         
          
          ,ASIENTO.GLTXA1 AS IMPUESTO          

          ,ASIENTO.GLAN8 AS PROVEEDOR
          ,ASIENTO.GLEXA AS PROVEEDOR_DESC
          
          ,ASIENTO.GLPYID AS PAGO_ID
          ,ASIENTO.GLCN AS PAGO        
          ,ASIENTO.GLSFXE AS PAGO_LINEA  
          
          ,ASIENTO.GLCO AS COMPANIA         
          ,ASIENTO.GLCTRY AS CENTURIA
          ,ASIENTO.GLBCRC AS MONEDA_BASE
                    
          ,ASIENTO.GLASID AS SERIAL
          ,ASIENTO.GLVINV AS FACTURA
          ,CASE WHEN ASIENTO.GLIVD  <> 0 THEN TO_DATE(1900000 + ASIENTO.GLIVD ,'YYYYDDD') END AS FECHA_FACTURA
          ,ASIENTO.GLTXITM AS ITEM
          ,ASIENTO.GLITM AS ITEM2
          ,ASIENTO.GLEXR AS ITEM_DESC
          
          ,ASIENTO.GLU AS UNIDADES
          ,ASIENTO.GLUM AS UDM
          ,ASIENTO.GLGLC AS LM
          ,ASIENTO.GLRE AS FLAG_REVERSER          
          
          ,ASIENTO.GLGPF1 AS INVENTORY_FLAG
          ,ASIENTO.GLACR AS AMOUNT_CURRENCY
          ,ASIENTO.GLCKNU AS RECEIPT_NUMBER

          ,ASIENTO.GLTORG AS CREADOR
          ,CASE WHEN ASIENTO.GLDICJ <> 0 THEN TO_DATE(1900000 + ASIENTO.GLDICJ,'YYYYDDD') END AS FECHA_CREACION
          ,CASE WHEN ASIENTO.GLDSYJ <> 0 THEN TO_DATE(1900000 + ASIENTO.GLDSYJ,'YYYYDDD') END AS FECHA_SISTEMA
          
          ,ASIENTO.GLUSER AS UPDATER
          ,CASE WHEN ASIENTO.GLUPMJ <> 0 THEN TO_DATE(1900000 + ASIENTO.GLUPMJ,'YYYYDDD') END AS FECHA_UPDATE
          
        FROM proddta.F0911 ASIENTO
        LEFT OUTER JOIN proddta.f0901 CUENTA
                     ON CUENTA.GMAID = ASIENTO.GLAID
     )
          
WHERE 1=1
--AND CUENTA_NUMERO = '6.2111.001'
and DOC = '2230'
and doc_tipo = 'PV'
;


/* Notas
------------------------------------------------------------------

  WHERE PA_CABEZA.RMVDGJ = 0               
 
  AND PA_LINEA.RNDCTM NOT IN ('PG') 


* Campos no importantes
------------------------------------------------------------------
--,ASIENTO.GLEXR1 AS IMPUESTO_TIPO
--,ASIENTO.GLAM AS CUENTA_MODO
--,ASIENTO.GLCRRM AS MONEDA_MODO                   
--,ASIENTO.GLTICU  AS HORA_CREACION          
--,ASIENTO.GLUPMT AS HORA_ACTUALI
--,ASIENTO.GLPID AS PROGRAMA
--,CASE WHEN ASIENTO.GLDSVJ  <> 0 THEN TO_DATE(1900000 + ASIENTO.GLDSVJ ,'YYYYDDD') END AS FECHA_SERVICE_TAX         
--,ASIENTO.GLHCRR
--,ASIENTO.GLHDGJ
--,ASIENTO.GLDKJ
--,ASIENTO.GLDKC  
--,ASIENTO.GLBRE
--,ASIENTO.GLRCND
--,ASIENTO.GLSUMM
--,ASIENTO.GLPRGE
--,ASIENTO.GLTNN
--,ASIENTO.GLALT1
--,ASIENTO.GLALT2
--,ASIENTO.GLALT3
--,ASIENTO.GLALT4
--,ASIENTO.GLALT5
--,ASIENTO.GLALT6
--,ASIENTO.GLALT7
--,ASIENTO.GLALT8
--,ASIENTO.GLALT9 
--,ASIENTO.GLALT0
--,ASIENTO.GLALTT
--,ASIENTO.GLALTU
--,ASIENTO.GLALTV
--,ASIENTO.GLALTW
--,ASIENTO.GLALTX
--,ASIENTO.GLALTZ
--,ASIENTO.GLDLNA
--,ASIENTO.GLCFF1
--,ASIENTO.GLCFF2
--,ASIENTO.GLASM
--,ASIENTO.GLBC
--,ASIENTO.GLWR01
--,ASIENTO.GLWY
--,ASIENTO.GLWN
--,ASIENTO.GLFNLP
--,ASIENTO.GLOPSQ
--,ASIENTO.GLJBCD
--,ASIENTO.GLJBST
--,ASIENTO.GLHMCU
--,ASIENTO.GLDOI
--,ASIENTO.GLALID
--,ASIENTO.GLALTY
--,ASIENTO.GLREG#
--,ASIENTO.GLABR1
--,ASIENTO.GLABR2
--,ASIENTO.GLABR3
--,ASIENTO.GLABR4
--,ASIENTO.GLABT1
--,ASIENTO.GLABT2
--,ASIENTO.GLABT3
--,ASIENTO.GLABT4
--,ASIENTO.GLPM01
--,ASIENTO.GLPM02
--,ASIENTO.GLPM03
--,ASIENTO.GLPM04
--,ASIENTO.GLPM05
--,ASIENTO.GLPM06
--,ASIENTO.GLPM07
--,ASIENTO.GLPM08
--,ASIENTO.GLPM09
--,ASIENTO.GLPM10
--,ASIENTO.GLPRGF
--,ASIENTO.GLACTB
--,ASIENTO.GLDLNID
--,ASIENTO.GLBUPC
--,ASIENTO.GLAHBU
--,ASIENTO.GLEPGC
--,ASIENTO.GLJPGC
--,ASIENTO.GLRC5
--,ASIENTO.GLOFM 


*/]]>
         </code>
      </snippet>
      <snippet name="F0411 - Account Payable Ledger" description="">
         <code>
            <![CDATA[
select
*
from (

   select
         PASIVO.RPKCO as COMPANIA
        ,PASIVO.RPDCT as TIPO
        ,PASIVO.RPDOC as NUMERO
        ,PASIVO.RPSFX as LINEA
      
        ,PASIVO.RPSFXE as AJUSTE
        ,PASIVO.RPDCTA as AJUSTE_TIPO
        
        ,PASIVO.RPVINV as FACTURA
        
        ,PASIVO.RPAN8 as PROVEEDOR
        ,PASIVO.RPPYE as BENEFICIARIO
      
        ,case when PASIVO.RPDIVJ <> 0 then TO_DATE(1900000 + PASIVO.RPDIVJ,'YYYYDDD') end as FECHA_FACTURA
        ,case when PASIVO.RPDDJ <> 0 then TO_DATE(1900000 + PASIVO.RPDDJ,'YYYYDDD') end as FECHA_VENCIMIENTO
        ,CASE WHEN PASIVO.RPDGJ <> 0 THEN TO_DATE(1900000 + PASIVO.RPDGJ,'YYYYDDD') END AS FECHA_LM
      
        ,PASIVO.RPFY  as ANIO
        ,PASIVO.RPPN  as PERIODO
        ,PASIVO.RPCO  as COMPANIA
        
        ,PASIVO.RPICU as BATCH
        ,PASIVO.RPICUT as BATCH_TIPO
        ,case when PASIVO.RPDICJ <> 0 then TO_DATE(1900000 + PASIVO.RPDICJ,'YYYYDDD') end as BATCH_FECHA
        ,PASIVO.RPPOST as POSTEO
        
        ,PASIVO.RPAG/100 as MONTO_TOTAL_MX
        ,PASIVO.RPAAP/100 as MONTO_PENDIENTE_MX
        ,PASIVO.RPATXA/100 as MONTO_IMPONIBLE_MX
        ,PASIVO.RPATXN/100 as MONTO_NOIMPONIBLE_MX
        ,PASIVO.RPSTAM/100 as MONTO_IMPUESTO_MX
        ,PASIVO.RPTXA1 as IMPUESTO
        
        ,PASIVO.RPCRCD as MONEDA
        ,PASIVO.RPCRR as TASA
        ,PASIVO.RPACR/100 as MONTO_TOTAL_EX
        ,PASIVO.RPFAP/100 as MONTO_PENDIENTE_EX
        ,PASIVO.RPCTXA/100 as MONTO_IMPONIBLE_EX
        ,PASIVO.RPCTXN/100 as MONTO_NOIMPONIBLE_EX
        ,PASIVO.RPCTAM/100 as MONTO_IMPUESTO_EX

        ,PASIVO.RPATAD/100 as MONTO_XDIST_MX
        ,PASIVO.RPCTAD/100 as MONTO_XDIST_EX        
        
        ,PASIVO.RPGLBA AS BANCO
        ,PASIVO.RPGLC as GLCLASS
          
        ,PASIVO.RPMCU as UN
        ,PASIVO.RPSBL as CUENTA_SUBLIBRO
        ,PASIVO.RPSBLT as CUENTA_SUB_TIPO
        
        ,PASIVO.RPPST as PAGO_ESTADO
        ,PASIVO.RPPTC as PAGO_TERMINOS
        ,PASIVO.RPPYIN as PAGO_INTRUMENTO  
        
        ,PASIVO.RPVOD as FLAG_VOID
        ,PASIVO.RPCRC as CODIGO_GESTION
        
        ,PASIVO.RPPKCO as OC_COMPANIA
        ,PASIVO.RPPDCT as OC_TIPO
        
        ,case
          when PASIVO.RPPO = '        ' then 0
          when PASIVO.RPPO <> '        ' then to_number(PASIVO.RPPO)
          else 0
         end as OC
        
        ,case 
          when PASIVO.RPLNID <> 0 then TO_NUMBER(PASIVO.RPLNID)/1000
          else PASIVO.RPLNID
        end as OC_LINEA

        ,PASIVO.RPSFXO as OC_SUFIX
        
        ,PASIVO.RPRMK as DESCRIPCION
          
        ,PASIVO.RPITM as ITEM
        ,(ITEM.IMDSC1 || ITEM.IMDSC2) AS ITEM_DESCRIPCION        
        ,PASIVO.RPU as CANTIDAD

        ,PASIVO.RPUM as UDM
        
        ,PASIVO.RPTORG as CREADOR
        ,PASIVO.RPUSER as UPDATER
        ,CASE WHEN PASIVO.RPUPMJ <> 0 THEN TO_DATE(1900000 + PASIVO.RPUPMJ,'YYYYDDD') END AS FECHA_UPDATE
        
      
      from PRODDTA.F0411 PASIVO
      left outer join PRODDTA.F4101 ITEM
                   on ITEM.IMITM = PASIVO.RPITM
    )
where 1=1
--and OC >= 5000
--and OC <= 6000
--and DOC = 226
and DOC_TIPO = 'PV'
--AND DOC_COMPANIA = 1
--AND CUENTA_OBJETO <> '      '
;



/* Notas
------------------------------------------------------------------
Si se desean excluir los cancelados:
 and AJUSTE_TIPO <> 'PE'
 and RPAG >= 0


* Campos no imporntantes
------------------------------------------------------------------
--,PASIVO.RPOBJ as CUENTA_OBJETO
--,PASIVO.RPSUB as CUENTA_AUXILIAR     
--,PASIVO.RPEXR1 as IMPUESTO_TIPO
--,PASIVO.RPPID as PROGRAMA 
--,PASIVO.RPCTRY AS SIGLO
--,PASIVO.RPBALJ AS Balanced_Journal_Entries
--,PASIVO.RPADSC AS MONTO_DESCUENTO_MX
--,PASIVO.RPADSA AS MONTO_DESCUENTO_TOMADO_MX
--,PASIVO.RPCDS as MONTO_DESCUENTO_EX
--,PASIVO.RPCDSA as MONTO_DESCUENTO_TOMADO_EX
--,PASIVO.RPUPMT AS HORA_UPDATE
--,PASIVO.RPSNTO AS APROBADOR 
--,case when PASIVO.RPDSVJ <> 0 then TO_DATE(1900000 + PASIVO.RPDSVJ,'YYYYDDD') end as FECHA_SERVICE_TAX
--,CASE WHEN PASIVO.RPDDNJ <> 0 THEN TO_DATE(1900000 + PASIVO.RPDDNJ,'YYYYDDD') END AS FECHA_VENCIMIENTO_DESCUENTO
--,PASIVO.RPCRRM as mONEDA_MODO
--,PASIVO.RPAID2 AS CUENTA2
--,PASIVO.RPAM as CUENTA_MODO
--,PASIVO.RPBAID  Bank Transit Short ID String  Generic Edit  8 0
--,PASIVO.RPOKCO  Document Company (Original Order) String  Generic Edit  5 0
--,PASIVO.RPODCT  Document Type - Original  String  UDC 2 0
--,PASIVO.RPODOC  Document - Original Numeric Generic Edit  8 0
--,PASIVO.RPOSFX  Document Pay Item - Original  String  Generic Edit  3 0
--,PASIVO.RPOPSQ  Sequence Number - Operations  Numeric Generic Edit  5 2
--,PASIVO.RPVR01  Reference String  Generic Edit  25  0
--,PASIVO.RPUNIT  Unit  String  Generic Edit  8 0
--,PASIVO.RPMCU2  Business Unit 2 String  Generic Edit  12  0
--,PASIVO.RPRF  Frequency - Recurring String  UDC 2 0
--,PASIVO.RPDRF Recurring Frequency # of Payments Numeric Generic Edit  3 0
--,PASIVO.RPCTL Control/Statement Field String  Generic Edit  13  0
--,PASIVO.RPFNLP  Closed Item - As Of Processing  Character Generic Edit  1 0
--,PASIVO.RPTXA3  Tax Rate/Area 3 - Withholding String  Generic Edit  10  0
--,PASIVO.RPEXR3  Tax Expl Code 3 - Withholding String  UDC 2 0
--,PASIVO.RPRP1 A/R - A/P - Miscellaneous Code 1  Character Generic Edit  1 0
--,PASIVO.RPRP2 A/R - A/P - Miscellaneous Code 2  Character Generic Edit  1 0
--,PASIVO.RPRP3 A/R - A/P - Cash Rcpts/Inv Reg Code Character Generic Edit  1 0
--,PASIVO.RPAC07  Category Code - Address Book 07 String  UDC 3 0
--,PASIVO.RPTNN FLAG FOR 1099 CHARACTER GENERIC EDIT  1 0
--,PASIVO.RPDMCD  DOMESTIC ENTRY W/MULT CURRENCY DISTR  CHARACTER GENERIC EDIT  1 0
--,PASIVO.RPBCRC as MONEDA_BASE
--,PASIVO.RPJOBN  WORK STATION ID STRING  GENERIC EDIT  10  0
--,PASIVO.RPHCRR  Historical Currency Conversion Rate Numeric Generic Edit  15  0
--,PASIVO.RPHDGJ  Historical Date - Julian  Date  Generic Edit  6 0
--,PASIVO.RPTNST  Transit Number - Bank String  Generic Edit  20  0 
--,PASIVO.RPYC01  Category Code - A/P Ledger 01 String  UDC 3 0
--,PASIVO.RPYC02  Category Code - A/P Ledger 02 String  UDC 3 0
--,PASIVO.RPYC03  Category Code - A/P Ledger 03 String  UDC 3 0
--,PASIVO.RPYC04  Category Code - A/P Ledger 04 String  UDC 3 0
--,PASIVO.RPYC05  Category Code - A/P Ledger 05 String  UDC 3 0
--,PASIVO.RPYC06  Category Code - A/P Ledger 06 String  UDC 3 0
--,PASIVO.RPYC07  Category Code - A/P Ledger 07 String  UDC 3 0
--,PASIVO.RPYC08  Category Code - A/P Ledger 08 String  UDC 3 0
--,PASIVO.RPYC09  CATEGORY CODE - A/P LEDGER 09 STRING  UDC 3 0
--,PASIVO.RPYC10  Category Code - A/P Ledger 10 String  UDC 3 0
--,PASIVO.RPDTXS  Deferred Tax Status - VAT Character Generic Edit  1 0
--,PASIVO.RPNRTA  Non-Recoverable Tax Amount  Numeric Generic Edit  15  2
--,PASIVO.RPFNRT  Foreign Non-Recoverable Tax Numeric Generic Edit  15  2
--,PASIVO.RPTAXP  Purchasing Taxable Y/N  Character Generic Edit  1 0
--,PASIVO.RPPRGF  Purge Flag  Character Generic Edit  1 0
--,PASIVO.RPGFL5  Generic Flag 5  Character Generic Edit  1 0
--,PASIVO.RPGFL6  GENERIC FLAG 6  CHARACTER GENERIC EDIT  1 0
--,PASIVO.RPGAM1  GENERIC AMOUNT 1  NUMERIC GENERIC EDIT  15  2
--,PASIVO.RPGAM2  GENERIC AMOUNT 2  NUMERIC GENERIC EDIT  15  2
--,PASIVO.RPGEN4  Generic String 4  String  Generic Edit  25  0
--,PASIVO.RPGEN5  GENERIC STRING 5  STRING  GENERIC EDIT  25  0
--,PASIVO.RPWTAD  FUTURE - WITHHOLDING TAX AMOUNT DOMESTIC  NUMERIC GENERIC EDIT  15  2
--,PASIVO.RPWTAF  Future - Withholding Tax Amount Foreign Numeric Generic Edit  15  2
--,PASIVO.RPSMMF  SUMMARIZED FLAG CHARACTER GENERIC EDIT  1 0
--,PASIVO.RPPYWP  PAY WHEN PAID CHARACTER GENERIC EDIT  1 0
--,PASIVO.RPPWPG  PAY WHEN PAID GROUP NUMBER  NUMERIC GENERIC EDIT  15  0
--,PASIVO.RPNETTCID NETTING TRANSACTION ID  NUMERIC GENERIC EDIT  15  0
--,PASIVO.RPNETDOC  NETTING DOCUMENT NUMBER NUMERIC GENERIC EDIT  15  0
--,PASIVO.RPNETRC5  NETTING LINE ID NUMERIC GENERIC EDIT  6 0
--,PASIVO.RPNETST NETTING STATUS CODE CHARACTER UDC 1 0
--,PASIVO.RPCNTRTID Contract ID Numeric Generic Edit  8 0
--,PASIVO.RPCNTRTCD Contract Code String  Generic Edit  12  0
--,PASIVO.RPWVID  Vessel ID Numeric Generic Edit  8 0
--,PASIVO.RPBLSCD2  Block Code  String  Generic Edit  10  0
--,PASIVO.RPHARPER  Harvest Period  String  Generic Edit  6 0
--,PASIVO.RPHARSFX  Harvest Suffix  String  Generic Edit  10  0
--,PASIVO.RPDDRL  DUE DATE RULE STRING  GENERIC EDIT  5 0
--,PASIVO.RPSEQN  SEQUENCE NUMBER NUMERIC GENERIC EDIT  7 0
--,PASIVO.RPCLASS01 Classification Code 01  String  UDC 3 0
--,PASIVO.RPCLASS02 Classification Code 02  String  UDC 3 0
--,PASIVO.RPCLASS03 Classification Code 03  String  UDC 3 0
--,PASIVO.RPCLASS04 Classification Code 04  String  UDC 3 0
--,PASIVO.RPCLASS05 Classification Code 05  String  UDC 3 0




*/




]]>
         </code>
      </snippet>
      <snippet name="Facturas y sus OVs" description="">
         <code>
            <![CDATA[select
DOC_COMPANIA
,DOC_TIPO
,DOC
,PROVEEDOR
,BENEFICIARIO
,UN
,SUM(MONTO_TOTAL_MX) AS TOTAL_MX
,SUM(MONTO_PENDIENTE_MX) AS PENDIENTE_MX
,SUM(MONTO_IMPONIBLE_MX) AS IMPONIBLE_MX
,SUM(MONTO_NOIMPONIBLE_MX) AS NOIMPONIBLE_MX
,SUM(MONTO_IMPUESTO_MX) AS IMPUESTO_MX
,RECEP_COMPANIA
,RECEP_TIPO
,RECEP_doc
from (

       select
         
        PASIVOS.RPKCO as DOC_COMPANIA
        ,PASIVOS.RPDCT as DOC_TIPO
        ,PASIVOS.RPDOC as DOC

        ,PASIVOS.RPAN8 as PROVEEDOR
        ,PASIVOS.RPPYE as BENEFICIARIO
        ,max(PASIVOS.RPMCU) over (partition by PASIVOS.RPKCO, PASIVOS.RPDCT, PASIVOS.RPDOC) as UN
        
        ,PASIVOS.RPAG/100 as MONTO_TOTAL_MX
        ,PASIVOS.RPAAP/100 as MONTO_PENDIENTE_MX
        ,PASIVOS.RPATXA/100 as MONTO_IMPONIBLE_MX
        ,PASIVOS.RPATXN/100 as MONTO_NOIMPONIBLE_MX
        ,PASIVOS.RPSTAM/100 as MONTO_IMPUESTO_MX
        
        ,case 
          when PASIVOS.RPDCT = 'PV'  then inventory.recep_compania
          else PASIVOS.RPKCO
        end RECEP_COMPANIA
        
        ,CASE 
          when PASIVOS.RPDCT = 'PV' THEN inventory.recep_tipo
          else PASIVOS.RPDCT
        END RECEP_TIPO
        
        ,case 
          when PASIVOS.RPDCT = 'PV' then inventory.recep_doc
          else PASIVOS.RPDOC
        END RECEP_doc        
        
      from PRODDTA.F0411 PASIVOS

      left outer join (
                          select
                            RECEP.PRKCO AS RECEP_COMPANIA
                            ,RECEP.PRDCT AS RECEP_TIPO
                            ,RECEP.PRDOC AS RECEP_DOC
                            ,COTEJO.PRKCO AS COTEJO_COMPANIA
                            ,COTEJO.PRDCT AS COTEJO_TIPO
                            ,COTEJO.PRDOC AS COTEJO_DOC        
                          FROM PRODDTA.F43121 RECEP
                          LEFT OUTER JOIN PRODDTA.F43121 COTEJO
                                       ON COTEJO.PRDOCO = RECEP.PRDOCO --<- OC
                                      AND COTEJO.PRDCTO = RECEP.PRDCTO --<- OC_TIPO
                                      AND COTEJO.PRKCOO = RECEP.PRKCOO --<- OC_COMPANIA
                                      AND COTEJO.PRSFXO = RECEP.PRSFXO --<- OC_SUFIX
                                      AND COTEJO.PRLNID = RECEP.PRLNID --<- OC_LINEA
                                      AND COTEJO.PRNLIN = RECEP.PRNLIN --<- TRANS_NUM
                                      AND COTEJO.PRMATC = 2
                          
                          where 1=1
                          and RECEP.PRMATC = 1
                          GROUP BY
                            RECEP.PRKCO
                            ,RECEP.PRDCT
                            ,RECEP.PRDOC
                            ,COTEJO.PRKCO
                            ,COTEJO.PRDCT
                            ,COTEJO.PRDOC      
      
                    ) INVENTORY
                ON INVENTORY.COTEJO_COMPANIA = PASIVOS.RPKCO
               AND INVENTORY.COTEJO_TIPO = PASIVOS.RPDCT
               AND INVENTORY.COTEJO_DOC = PASIVOS.RPDOC          
            
      where 1=1
      and PASIVOS.RPDCTA <> 'PE'   
      AND PASIVOS.RPAG > 0    
      
      )
where 1=1

GROUP BY
DOC_COMPANIA
,DOC_TIPO
,DOC
,PROVEEDOR
,BENEFICIARIO
,UN
,RECEP_COMPANIA
,RECEP_TIPO
,RECEP_doc
;


]]>
         </code>
      </snippet>
      <snippet name="Asientos Sumarizados por Documento" description="">
         <code>
            <![CDATA[SELECT
  AST_COMPANIA
  ,AST_TIPO
  ,AST_DOC
  ,CUENTA_NUMERO
  ,CUENTA_ID
  ,CUENTA_DESC
  ,CUENTA_CLASIF
  ,CUENTA_UN
  ,MONTO
  ,ROUND((MONTO) * 100 / SUM(MONTO) OVER (PARTITION BY AST_COMPANIA,AST_TIPO,AST_DOC ),2) AS PORCENTAJE

from (
        SELECT 
           ASIENT.GLKCO AS AST_COMPANIA
          ,ASIENT.GLDCT AS AST_TIPO
          ,ASIENT.GLDOC AS AST_DOC
          ,ASIENT.GLANI AS CUENTA_NUMERO
          ,ASIENT.GLAID AS CUENTA_ID
          ,cuenta.GMDL01 as CUENTA_DESC
          ,CLASIF.DRDL01 AS CUENTA_CLASIF 
          ,ASIENT.GLMCU AS CUENTA_UN
          ,SUM(ASIENT.GLAA/100) AS MONTO
          
        FROM PRODDTA.F0911 ASIENT
        LEFT OUTER JOIN proddta.F0901 cuenta
                     ON cuenta.GMAID = ASIENT.GLAID  

        LEFT OUTER JOIN PRODCTL.F0005 CLASIF
                     ON CLASIF.DRSY = '09'    
                    AND CLASIF.DRRT = '10'    
                    AND TRIM(CLASIF.DRKY) = trim(CUENTA.GMR010)         
        
        
        WHERE ASIENT.GLLT = 'AA'            --<- Solo asientos en pesos
        AND ASIENT.GLICUT IN ('V','O')      --<- Solo Batchs de tipo 'V' y 'O'
        AND ASIENT.GLDCT NOT IN ('PV','AE') --<- Quitamos los asientos automaticos y los asientos de factura
        AND (
              CASE   
                WHEN GLU = 0 AND GLAA <= 0 THEN -1   
                ELSE GLU   
              END
            ) >= 0          
            
        group by
               ASIENT.GLKCO
              ,ASIENT.GLDCT
              ,ASIENT.GLDOC
              ,ASIENT.GLANI
              ,cuenta.GMDL01
              ,CLASIF.DRDL01 
              ,ASIENT.GLAID
              ,ASIENT.GLMCU
     )
where 1=1 
and MONTO > 0
;
]]>
         </code>
      </snippet>
      <snippet name="Supplier Ledger" description="">
         <code>
            <![CDATA[select
ADDRESS.ABAN8 as CLAVE
,ADDRESS.ABALPH as NOMBRE
,ADDRESS.ABAT1 AS TIPO
,ADDRESS.ABMCU as UN
from PRODDTA.F0101 ADDRESS                  --< Address Book
left outer join PRODDTA.F0401 SUPPLIER      --< Supplier Ledger
             on SUPPLIER.A6AN8 = ADDRESS.ABAN8 

where 1=1
and ADDRESS.ABAT1 = 'E'
and SUPPLIER.A6TRAP <> '007'
;
 ]]>
         </code>
      </snippet>
      <snippet name="VIEW_CUENTAS" description="">
         <code>
            <![CDATA[select
*
from (
  --CREATE OR REPLACE FORCE EDITIONABLE VIEW "NUVPD"."VIEW_CUENTAS" ("ID", "DESCRIPCION", "COMPANIA", "UN", "UN_DESC", "UN_PROYECTO", "UN_PROYECTO_DESC", "UN_PROYECTO_ZONA", "UN_PROYECTO_TIPO", "UN_PROYECTO_ESTADO", "OBJETO", "AUXILIAR", "NIVEL", "ESTADO", "ESTADO_DESC", "MONEDA", "TIPO", "TIPO_DESC", "CLASE", "CLASE_DESC", "FLUJO", "FLUJO_DESC") AS 
  SELECT CUENTA.GMAID AS ID,
          TRIM (CUENTA.GMDL01) AS DESCRIPCION,
          CUENTA.GMCO AS COMPANIA,
          TRIM (CUENTA.GMMCU) AS UN,
          TRIM (CENTRO.MCDL01) AS UN_DESC,
          NVL (TRIM (CENTRO.MCRP01), '-') AS UN_PROYECTO,
          NVL (TRIM (PROYECTO.DRDL01), '-') AS UN_PROYECTO_DESC,
          NVL (TRIM (PROYECTO.DRDL02), '-') AS UN_PROYECTO_ZONA,
          NVL (TRIM (PROYECTO.DRSPHD), '-') AS UN_PROYECTO_TIPO,
          NVL (TRIM (PROYECTO.DRHRDC), '-') AS UN_PROYECTO_ESTADO,
          TRIM (CUENTA.GMOBJ) AS OBJETO,
          NVL (TRIM (CUENTA.GMSUB), '-') AS AUXILIAR,
          CUENTA.GMLDA AS NIVEL,
          CUENTA.GMPEC AS ESTADO,
          NVL (TRIM (ESTADO.DRDL01), 'Activa') AS ESTADO_DESC,
          CUENTA.GMCRCD AS MONEDA,
          NVL (TRIM (CUENTA.GMR011), '-') AS TIPO,
          NVL (TRIM (TIPO.DRDL01), 'SIN TIPO') AS TIPO_DESC,
          NVL (TRIM (CUENTA.GMR010), '-') AS CLASE,
          NVL (TRIM (CLASE.DRDL01), 'SIN CLASIFICACION') AS CLASE_DESC,
          NVL (TRIM (CUENTA.GMR009), '-') AS FLUJO,
          NVL (TRIM (FLUJO.DRDL01), 'SIN FLUJO') AS FLUJO_DESC
     FROM proddta.F0901 CUENTA
          LEFT OUTER JOIN proddta.F0006 CENTRO
             ON CENTRO.MCMCU = CUENTA.GMMCU
          LEFT OUTER JOIN PRODCTL.F0005D ESTADO
             ON     ESTADO.DRSY = 'H00'
                AND ESTADO.DRRT = 'PE'
                AND TRIM (ESTADO.DRKY) = TRIM (CUENTA.GMPEC)
          LEFT OUTER JOIN PRODCTL.F0005 PROYECTO
             ON     PROYECTO.DRSY = '00'
                AND PROYECTO.DRRT = '01'
                AND TRIM (PROYECTO.DRKY) = TRIM (CENTRO.MCRP01)
          LEFT OUTER JOIN PRODCTL.F0005 TIPO
             ON     TIPO.DRSY = '09'
                AND TIPO.DRRT = '11'
                AND TRIM (TIPO.DRKY) = TRIM (CUENTA.gmr011)
          LEFT OUTER JOIN PRODCTL.F0005 CLASE
             ON     CLASE.DRSY = '09'
                AND CLASE.DRRT = '10'
                AND TRIM (CLASE.DRKY) = TRIM (CUENTA.gmr010)
          LEFT OUTER JOIN PRODCTL.F0005 FLUJO
             ON     FLUJO.DRSY = '09'
                AND FLUJO.DRRT = '09'
                and TRIM (FLUJO.DRKY) = TRIM (CUENTA.GMR009)
      where 1 = 1
)
where 1 = 1;]]>
         </code>
      </snippet>
      <snippet name="Presupuestos" description="">
         <code>
            <![CDATA[      select
        trim(UNS.MCRP01) AS PROYECTO
        ,TRIM(PROYS.DRDL01 || PROYS.DRDL02) as PROYECTO_DESC
        ,BUDGETS.gbaid as cuenta_id
        --,ASIENT.GLANI AS CUENTA_NUMERO
        ,TRIM(cuenta.GMDL01) as CUENTA_DESC
        ,TRIM(CLASIF.DRDL01) AS CUENTA_CLASIF 
        ,BUDGETS.gbfy as anio
        ,BUDGETS.gbco as compania
        ,budgets.gbmcu as UN
        ,UNS.MCDL01 AS UN_DESC
        
        
        ,BUDGETS.GBAN01/100 as ENERO_PRESU 
        ,BUDGETS.GBAN02/100 as FEBRERO_PRESU 
        ,BUDGETS.GBAN03/100 as MARZO_PRESU 
        ,BUDGETS.GBAN04/100 as ABRIL_PRESU 
        ,BUDGETS.GBAN05/100 as MAYO_PRESU 
        ,BUDGETS.GBAN06/100 as JUNIO_PRESU 
        ,BUDGETS.GBAN07/100 as JULIO_PRESU 
        ,BUDGETS.GBAN08/100 as AGOSTO_PRESU 
        ,BUDGETS.GBAN09/100 as SEPTIEMBRE_PRESU 
        ,BUDGETS.GBAN10/100 as OCTUBRE_PRESU 
        ,BUDGETS.GBAN11/100 as NOVIEMBRE_PRESU 
        ,BUDGETS.GBAN12/100 as DICIEMBRE_PRESU 
        
        ,BUDGETS.GBUSER AS CREADO
        
        from PRODDTA.F0902 BUDGETS 
        
        LEFT OUTER JOIN proddta.F0006 UNS
                     ON UNS.MCMCU = budgets.gbmcu
        
        LEFT OUTER JOIN PRODCTL.F0005 PROYS
                     ON PROYS.DRSY = '00'    
                    AND PROYS.DRRT = '01'    
                    AND TRIM(PROYS.DRKY) = trim(UNS.MCRP01)             
        
        LEFT OUTER JOIN proddta.F0901 cuenta
                     ON cuenta.GMAID = BUDGETS.gbaid  
        
        LEFT OUTER JOIN PRODCTL.F0005 CLASIF
                     ON CLASIF.DRSY = '09'    
                    AND CLASIF.DRRT = '10'    
                    AND TRIM(CLASIF.DRKY) = trim(CUENTA.GMR010)   
        
        where 1=1
        and BUDGETS.GBLT = 'BA' 
        ;]]>
         </code>
      </snippet>
      <snippet name="F0902 - Saldos" description="">
         <code>
            <![CDATA[SELECT 
CUE_COMPANIA AS COMPANIA 
,NATURA_DESC AS NATURALEZA 
,TIPO_DESC AS TIPO 
,CLAS_DESC AS CLASIFICACION 
,SUB_DESC AS SUBCLASIFICACION 
,SAL_LIBRO AS LIBRO 
,SAL_ANIO AS ANIO 
,SUM(SAL_ENERO) AS ENERO 
,SUM(SAL_FEBRERO) AS FEBRERO 
,SUM(SAL_MARZO) AS MARZO 
,SUM(SAL_ABRIL) AS ABRIL 
,SUM(SAL_MAYO) AS MAYO 
,SUM(SAL_JUNIO) AS JUNIO 
,SUM(SAL_JULIO) AS JULIO 
,SUM(SAL_AGOSTO) AS AGOSTO 
,SUM(SAL_SEPTIEMBRE) AS SEPTIEMBRE 
,SUM(SAL_OCTUBRE) AS OCTUBRE 
,SUM(SAL_NOVIEMBRE) AS NOVIEMBRE 
,SUM(SAL_DICIEMBRE) AS DICIEMBRE 
FROM ( 
         SELECT 
          CUENTAS.GMCO AS CUE_COMPANIA 
          ,COMPANIAS.CCNAME AS COMP_DESC 
          ,CUENTAS.GMAID AS CUE_ID 
          ,CUENTAS.GMMCU AS CUE_UN 
          ,CUENTAS.GMOBJ AS CUE_OBJETO 
          ,GMSUB AS CUE_AUXILIAR              
          ,CUENTAS.GMMCU||'.'||TRIM(CUENTAS.GMOBJ)||'.'||TRIM(CUENTAS.GMSUB) AS CUE_NUMERO 
          ,CUENTAS.GMDL01 AS CUE_DESCRIPCION 
          ,CUENTAS.GMLDA AS CUE_NIVEL 
          ,CUENTAS.GMPEC AS CUE_ESTADO 
          ,ESTADOS.CODIGO_DEFINIDO_DESC1 AS CUE_ESTADO_DESC 
          ,CUENTAS.GMR010 AS CUE_CATEGORIA 
          ,CATEGORIAS.CODIGO_DEFINIDO_DESC1 AS CUE_CATEGORIA_DESC           
          ,CUENTAS.GMR011 AS CUE_NATURALEZA 
          ,trim(NATURALEZAS.CODIGO_DEFINIDO_DESC1) AS NATURA_DESC           
          ,CUENTAS.GMR012 AS CUE_TIPO 
          ,trim(TIPOS.CODIGO_DEFINIDO_DESC1) AS TIPO_DESC           
          ,CUENTAS.GMR013 AS CUE_CLASIFICACION 
          ,trim(CLASIFICACIONES.CODIGO_DEFINIDO_DESC1) AS CLAS_DESC           
          ,CUENTAS.GMR014 AS CUE_SUBCLASIFICACION 
          ,trim(SUBCLASIFICACIONES.CODIGO_DEFINIDO_DESC1) AS SUB_DESC           
          ,SALDOS.GBLT as SAL_LIBRO           
          ,SALDOS.GBFY AS SAL_ANIO           
          ,SALDOS.GBAN01/100 AS SAL_ENERO 
          ,SALDOS.GBAN02/100 AS SAL_FEBRERO 
          ,SALDOS.GBAN03/100 AS SAL_MARZO 
          ,SALDOS.GBAN04/100 AS SAL_ABRIL 
          ,SALDOS.GBAN05/100 AS SAL_MAYO 
          ,SALDOS.GBAN06/100 AS SAL_JUNIO 
          ,SALDOS.GBAN07/100 AS SAL_JULIO 
          ,SALDOS.GBAN08/100 AS SAL_AGOSTO 
          ,SALDOS.GBAN09/100 AS SAL_SEPTIEMBRE 
          ,SALDOS.GBAN10/100 AS SAL_OCTUBRE 
          ,SALDOS.GBAN11/100 AS SAL_NOVIEMBRE 
          ,SALDOS.GBAN12/100 AS SAL_DICIEMBRE           
          ,CUENTAS.GMR043 AS CUE_CLASE 
          ,CLASES.CODIGO_DEFINIDO_DESC1 AS CUE_CLASE_DESC           
          ,CUENTAS.GMBPC AS CUE_PRESUPUESTO 
          ,CUENTAS.GMUSER AS CREADOR_CUENTA 
          ,CUENTAS.GMPID  AS PROGRAMA_CLAVE 
          ,CASE WHEN CUENTAS.GMUPMJ <> 0 THEN TO_DATE (1900000 + CUENTAS.GMUPMJ, 'yyyyddd') END AS CUE_FECHA_CREACION           
        FROM PRODDTA.F0901 CUENTAS         
        /*  COMPANIA 
        --------------------------------------------------------------------------------*/ 
        LEFT OUTER JOIN PRODDTA.F0010 COMPANIAS 
                     ON COMPANIAS.CCCO = CUENTAS.GMCO          
        /*  ESTADOS DE CUENTAS 
        --------------------------------------------------------------------------------*/ 
        LEFT OUTER JOIN ( 
                          SELECT 
                          DTSY AS CODIGO_PRODUCTO, 
                          DTRT AS CODIGOS_DEFINIDOS, 
                          DRKY AS CODIGO_DEFINIDO, 
                          DRDL01 AS CODIGO_DEFINIDO_DESC1, 
                          DRDL02 AS CODIGO_DEFINIDO_DESC2 
                          FROM  prodCTL.F0004 
                          LEFT OUTER JOIN prodCTL.F0005D ON DTSY = DRSY AND DRRT = DTRT 
                          WHERE 1=1 
                          AND DTSY = 'H00' 
                          AND DTRT = 'PE' 
                        ) ESTADOS 
                     ON TRIM(ESTADOS.CODIGO_DEFINIDO) = CUENTAS.GMPEC 
        /*  CATEGORIAS 
        --------------------------------------------------------------------------------*/ 
        LEFT OUTER JOIN ( 
                          SELECT 
                          DTSY AS CODIGO_PRODUCTO, 
                          DTRT AS CODIGOS_DEFINIDOS, 
                          DRKY AS CODIGO_DEFINIDO, 
                          DRDL01 AS CODIGO_DEFINIDO_DESC1, 
                          DRDL02 AS CODIGO_DEFINIDO_DESC2 
                          FROM  prodCTL.F0004 
                          LEFT OUTER JOIN prodCTL.F0005 ON DTSY = DRSY AND DRRT = DTRT 
                          WHERE 1=1 
                          AND DTSY = '09' 
                          AND DTRT = '10' 
                        ) CATEGORIAS 
                     ON TRIM(CATEGORIAS.CODIGO_DEFINIDO) = CUENTAS.GMR010 
        /*  NATURALEZA 
        --------------------------------------------------------------------------------*/ 
        LEFT OUTER JOIN ( 
                          SELECT 
                          DTSY AS CODIGO_PRODUCTO, 
                          DTRT AS CODIGOS_DEFINIDOS, 
                          DRKY AS CODIGO_DEFINIDO, 
                          DRDL01 AS CODIGO_DEFINIDO_DESC1, 
                          DRDL02 AS CODIGO_DEFINIDO_DESC2 
                          FROM  prodCTL.F0004 
                          LEFT OUTER JOIN prodCTL.F0005 ON DTSY = DRSY AND DRRT = DTRT 
                          WHERE 1=1 
                          AND DTSY = '09' 
                          AND DTRT = '11' 
                        ) NATURALEZAS 
                     ON TRIM(NATURALEZAS.CODIGO_DEFINIDO) = CUENTAS.GMR011 
        /*  TIPO 
        --------------------------------------------------------------------------------*/ 
        LEFT OUTER JOIN ( 
                          SELECT 
                          DTSY AS CODIGO_PRODUCTO, 
                          DTRT AS CODIGOS_DEFINIDOS, 
                          DRKY AS CODIGO_DEFINIDO, 
                          DRDL01 AS CODIGO_DEFINIDO_DESC1, 
                          DRDL02 AS CODIGO_DEFINIDO_DESC2 
                          FROM  prodCTL.F0004 
                          LEFT OUTER JOIN prodCTL.F0005 ON DTSY = DRSY AND DRRT = DTRT 
                          WHERE 1=1 
                          AND DTSY = '09' 
                          AND DTRT = '12'                 
                        ) TIPOS 
                     ON TRIM(TIPOS.CODIGO_DEFINIDO) = CUENTAS.GMR012 
        /*  CLASIFICACION 
        --------------------------------------------------------------------------------*/ 
        LEFT OUTER JOIN ( 
                          SELECT 
                          DTSY AS CODIGO_PRODUCTO, 
                          DTRT AS CODIGOS_DEFINIDOS, 
                          DRKY AS CODIGO_DEFINIDO, 
                          DRDL01 AS CODIGO_DEFINIDO_DESC1, 
                          DRDL02 AS CODIGO_DEFINIDO_DESC2 
                          FROM  prodCTL.F0004 
                          LEFT OUTER JOIN prodCTL.F0005 ON DTSY = DRSY AND DRRT = DTRT 
                          WHERE 1=1 
                          AND DTSY = '09' 
                          AND DTRT = '13'                 
                        ) CLASIFICACIONES 
                     ON TRIM(CLASIFICACIONES.CODIGO_DEFINIDO) = CUENTAS.GMR013 
        /*  SUBCLASIFICACION 
        --------------------------------------------------------------------------------*/ 
        LEFT OUTER JOIN ( 
                          SELECT 
                          DTSY AS CODIGO_PRODUCTO, 
                          DTRT AS CODIGOS_DEFINIDOS, 
                          DRKY AS CODIGO_DEFINIDO, 
                          DRDL01 AS CODIGO_DEFINIDO_DESC1, 
                          DRDL02 AS CODIGO_DEFINIDO_DESC2 
                          FROM  prodCTL.F0004 
                          LEFT OUTER JOIN prodCTL.F0005 ON DTSY = DRSY AND DRRT = DTRT 
                          WHERE 1=1 
                          AND DTSY = '09' 
                          AND DTRT = '14'                 
                        ) SUBCLASIFICACIONES 
                     ON TRIM(SUBCLASIFICACIONES.CODIGO_DEFINIDO) = CUENTAS.GMR014 
        /*  CLASE 
        --------------------------------------------------------------------------------*/ 
        LEFT OUTER JOIN ( 
                          SELECT 
                          DTSY AS CODIGO_PRODUCTO, 
                          DTRT AS CODIGOS_DEFINIDOS, 
                          DRKY AS CODIGO_DEFINIDO, 
                          DRDL01 AS CODIGO_DEFINIDO_DESC1, 
                          DRDL02 AS CODIGO_DEFINIDO_DESC2 
                          FROM  prodCTL.F0004 
                          LEFT OUTER JOIN prodCTL.F0005 ON DTSY = DRSY AND DRRT = DTRT 
                          WHERE 1=1 
                          AND DTSY = '09' 
                          AND DTRT = '43'                 
                        ) CLASES 
                     ON CLASES.CODIGO_DEFINIDO = CUENTAS.GMR043 
        /*  SALDOS 
        --------------------------------------------------------------------------------*/ 
        LEFT OUTER JOIN prodDTA.F0902 SALDOS 
                     ON SALDOS.GBAID = CUENTAS.GMAID      
       ) 
WHERE 1=1 
AND SAL_LIBRO = 'AA' 
AND NATURA_DESC IS NOT NULL 
AND SAL_ANIO like :parAnio 
AND NATURA_DESC LIKE :parNatu 
AND CUE_COMPANIA LIKE :parComp 
GROUP BY 
  CUE_COMPANIA 
  ,SAL_ANIO 
  ,SAL_LIBRO 
  ,NATURA_DESC 
  ,TIPO_DESC 
  ,CLAS_DESC 
  ,SUB_DESC 
ORDER BY  
  SAL_ANIO 
  ,SAL_LIBRO 
  ,NATURA_DESC 
  ,TIPO_DESC 
  ,CLAS_DESC 
  ,SUB_DESC ;]]>
         </code>
      </snippet>
      <snippet name="Unidades de Negocio" description="">
         <code>
            <![CDATA[
SELECT
*
FROM (
        select
        TRIM(CENTRO.MCMCU) as CLAVE
        ,TRIM(CENTRO.MCDL01 || CENTRO.MCDL02) as DESCRIPCION
        ,CENTRO.MCCO as COMPANIA
        ,CENTRO.MCSTYL as TIPO
        ,TRIM(TIPO.DRDL01 || TIPO.DRDL02) as TIPO_DESC
        ,NVL(TRIM(CENTRO.MCPECC),'-') AS ESTADO
        ,CASE
          when CENTRO.MCPECC = 'K' then 'BLOQUEAR PRESUPUESTO'
          when CENTRO.MCPECC = 'N' then 'DESHABILITADO'
          when CENTRO.MCPECC = 'P' then 'DEPURACION'
          else 'HABILITADO'
        end as ESTADO_DESC 
        ,NVL(TRIM(CENTRO.MCRP01), '-' ) AS PROYECTO
        ,NVL(TRIM(PROYECTO.DRSPHD),'-') as PROYECTO_TIPO
        ,NVL(TRIM(PROYECTO.DRDL01),'-') AS PROYECTO_DESC 
        ,NVL(TRIM(PROYECTO.DRDL02),'-') AS PROYECTO_ZONA
                
        ,NVL(TRIM(CENTRO.MCRP50),'-') as ESTRUCTURA
        ,NVL(TRIM(ESTRUCTURA.DRDL01 || ESTRUCTURA.DRDL02),'-') as ESTRUCTURA_DESC
        
        ,NVL(TRIM(CENTRO.MCRP02), '-' ) AS CIUDAD_OLD
        
        from proddtA.F0006 CENTRO
        
        /* UDC que representa el TIPO de la UN
        ------------------------------------------------------------*/
        LEFT OUTER JOIN PRODCTL.F0005 TIPO
                     ON TIPO.DRSY = '00'    
                    AND TIPO.DRRT = 'MC'    
                    AND TRIM(TIPO.DRKY) = trim(CENTRO.MCSTYL)
        
        /* UDC que representa el PROYECTO de la UN
        ------------------------------------------------------------*/        
        LEFT OUTER JOIN PRODCTL.F0005 PROYECTO
                     ON PROYECTO.DRSY = '00'    
                    AND PROYECTO.DRRT = '01'    
                    AND TRIM(PROYECTO.DRKY) = trim(CENTRO.MCRP01)

        /* UDC que representa si es la estructura actual
        o es la anterior implementada por la consultoria
        ------------------------------------------------------------*/                              
        LEFT OUTER JOIN PRODCTL.F0005 ESTRUCTURA
                     ON ESTRUCTURA.DRSY = '00'    
                    AND ESTRUCTURA.DRRT = '50'    
                    AND TRIM(ESTRUCTURA.DRKY) = trim(CENTRO.MCRP50)
        
        
        WHERE 1=1

     )
where 1=1
and proyecto_tipo IN ('D','P')

ORDER BY 
  COMPANIA
  ,PROYECTO
  ,CLAVE
;]]>
         </code>
      </snippet>
      <snippet name="F0011 - BATCH HEADER" description="">
         <code>
            <![CDATA[SELECT
*
FROM (
        SELECT
        BATCH.ICICUT AS TIPO       --<- PK
        ,BATCH.ICICU AS NUMERO     --<- PK
        ,BATCH.ICIST AS ESTADO
        ,TRIM(ESTADOS.DRDL01 || ESTADOS.DRDL02) AS ESTADO_DESC
        --,BATCH.ICIAPP AS APROBACION
        ,BATCH.ICUSER AS USUARIO
        ,case when BATCH.ICDICJ <> 0 then TO_DATE(1900000 + BATCH.ICDICJ,'YYYYDDD') end as FECHA
        ,BATCH.ICAME/100 AS TOTAL
        ,BATCH.ICDOCN AS NO_DOCS
        --,BATCH.ICBAL AS BALANCE_DOCS_AMOUNTS
        --,BATCH.ICBALJ AS BALANCE_JOURNAL_ENTRIES
        FROM PRODDTA.F0011 BATCH
        
        LEFT OUTER JOIN PRODCTL.F0005D ESTADOS
                     ON ESTADOS.DRSY = '98'    
                    AND ESTADOS.DRRT = 'IC'    
                    AND TRIM(ESTADOS.DRKY) = trim(BATCH.ICIST)        
    )
WHERE 1=1
AND NUMERO = '14520'
AND TIPO = 'V'
;



SELECT
DISTINCT ICIST
FROM PRODDTA.F0011
WHERE 1=1
--AND ICICU = '14520'
;


]]>
         </code>
      </snippet>
      <snippet name="F0101 - ADDRESS BOOK" description="PROVEEDORES, EMPLEADOS, ETC">
         <code>
            <![CDATA[  select
  ADDRESS.ABAN8 as CLAVE
  ,NVL(ADDRESS.ABALPH, '-') as DESCRIPCION
  ,ADDRESS.ABAT1 as TIPO
  ,NVL(TRIM(TIPO.DRDL01), '-') as TIPO_DESC
  ,NVL(TRIM(ADDRESS.ABCLASS05) , '-') as CLASE5
  ,NVL(TRIM(CLASE5.DRDL01), '-') as CLASE5_DESC
  from PRODDTA.F0101 ADDRESS
  
  LEFT OUTER JOIN PRODCTL.F0005 TIPO
             ON TIPO.DRSY = '01'    
            AND TIPO.DRRT = 'ST'    
            and TRIM(TIPO.DRKY) = TRIM(ADDRESS.ABAT1)
  
  LEFT OUTER JOIN PRODCTL.F0005 CLASE5
             ON CLASE5.DRSY = '01'    
            AND CLASE5.DRRT = 'CE'    
            and TRIM(CLASE5.DRKY) = TRIM(ADDRESS.ABCLASS05)
  where 1=1
]]>
         </code>
      </snippet>
      <snippet name="F0012 - ICAs Financieras" description="">
         <code>
            <![CDATA[select
KGITEM as "Item Number"
,KGCO as "Company"
,KGMCU as "Business Unit"
,KGOBJ as "Object Account"
,KGSUB as "Subsidiary"
,KGDL01 as "Description"
,KGDL02 as "Description 02"
,KGDL03 as "Description 03"
,KGDL04 as "Description 04"
,KGDL05 as "Description 05"
,KGMOPT as "BU Option"
,KGOOPT as "Object Option"
,KGSOPT as "Subsidiary Option"
,KGSY as "Product Code"
,KGSEQN as "Sequence Number"
,KGUSER as "User ID"
,KGPID as "Program ID"
,KGUPMJ as "Date-Updated"
,KGJOBN as "Work Station ID"
,KGUPMT as "Time-Last Updated"
from PRODDTA.F0012
--where KGITEM = '4310'
;

]]>
         </code>
      </snippet>
      <snippet name="F4095 -  ICAs Distribucion y Manofactura" description="">
         <code>
            <![CDATA[select
MLANUM as ICA --"Number-AAI Table Number"
,MLCO as "COMPANIA" --"Company"
,MLDCT as DOC_TIPO --"Document Type"
,MLGLPT as GL_CODIGO --"Category-G/L"
,MLDCTO as ORDEN_TIPO -- "Order Type"
,MLCOST as COSTO_TIPO --"Cost Component"
,MLMCU as UN --"Business Unit"
,MLOBJ as OBJETO --"Object Account"
,MLSUB as AUX --"Subsidiary"
from PRODDTA.F4095
;]]>
         </code>
      </snippet>
      <snippet name="VIEW_CXPVSMXL" description="">
         <code>
            <![CDATA[select
*
from (
              
              --CREATE OR REPLACE FORCE VIEW "NUVPD"."VIEW_CXPVSMXL" ("FAC_COMPANIA","FAC_TIPO","FAC","FACTURA","PROVEEDOR", "PROVEEDOR_DESC","BENEFICIARIO", "BENEFICIARIO_DESC","FECHA_FACTURA","FECHA_LM","ANIO","PERIODO","UN","BATCH","BATCH_TIPO","BATCH_FECHA","POSTEO","MONTO_TOTAL_MX","MONTO_PENDIENTE_MX","MONTO_IMPONIBLE_MX","MONTO_NOIMPONIBLE_MX","MONTO_IMPUESTO_MX", "IMPUESTO","MONEDA","TASA","MONTO_TOTAL_EX","MONTO_PENDIENTE_EX","MONTO_IMPONIBLE_EX","MONTO_NOIMPONIBLE_EX","MONTO_IMPUESTO_EX","MONTO_XDIST_MX","MONTO_XDIST_EX","OC_COMPANIA","OC_TIPO","OC","CREATED_BY","CREATED_BY_DESC","XML_UUID","XML_PROVEEDOR","XML_PROVEEDOR_RFC","XML_COMPANIA_RFC","XML_FACTURA_TIPO","XML_IMPORTE","XML_FECHA","XML_MONEDA","XML_ASOCIACION") as 
              SELECT
              FACTU.FAC_COMPANIA
              ,FACTU.FAC_TIPO
              ,FACTU.FAC
              ,FACTU.FACTURA
              ,FACTU.PROVEEDOR
              ,nvl(trim(PROVEEDOR.ABALPH),'--') AS PROVEEDOR_DESC 
              ,FACTU.BENEFICIARIO
              ,nvl(trim(BENEF.ABALPH),'--') AS BENEFICIARIO_DESC 
              ,FACTU.FECHA_FACTURA
              ,FACTU.FECHA_LM
              ,FACTU.ANIO
              ,FACTU.PERIODO
              ,FACTU.UN
              ,FACTU.BATCH
              ,FACTU.BATCH_TIPO
              ,FACTU.BATCH_FECHA
              ,FACTU.POSTEO
              ,FACTU.MONTO_TOTAL_MX
              ,FACTU.MONTO_PENDIENTE_MX
              ,FACTU.MONTO_IMPONIBLE_MX
              ,FACTU.MONTO_NOIMPONIBLE_MX
              ,FACTU.MONTO_IMPUESTO_MX
              ,FACTU.IMPUESTO
              ,FACTU.MONEDA
              ,FACTU.TASA
              ,FACTU.MONTO_TOTAL_EX
              ,FACTU.MONTO_PENDIENTE_EX
              ,FACTU.MONTO_IMPONIBLE_EX
              ,FACTU.MONTO_NOIMPONIBLE_EX
              ,FACTU.MONTO_IMPUESTO_EX
              ,FACTU.MONTO_XDIST_MX
              ,FACTU.MONTO_XDIST_EX
              ,FACTU.OC_COMPANIA
              ,FACTU.OC_TIPO
              ,FACTU.OC
              ,FACTU.CREATED_BY
              --,NVL(TRIM(ORG.DIR_DESC),'--') as CREATED_BY_DESC
              ,ORG.DIR_DESC as CREATED_BY_DESC
              ,NVL(XML.CDGENKEY,'--') as XML_UUID
              ,nvl(XMLDET.FTAN8,0) as XML_PROVEEDOR
              ,NVL(XMLDET.FTTAX,'--') as XML_PROVEEDOR_RFC
              ,NVL(XMLDET.FTTAXS,'--') as XML_COMPANIA_RFC
              ,NVL(XMLDET.FTBRTPO,'--') as XML_FACTURA_TIPO
              ,NVL(XMLDET.FTAMRT1/10000,0) as XML_IMPORTE
              ,case when XMLDET.FTIVD <> 0 then TO_DATE(1900000 + XMLDET.FTIVD,'YYYYDDD') else TO_DATE('01/01/1000','DD/MM/YYYY') end as XML_FECHA
              ,NVL(XMLDET.FTCRCD,'--') as XML_MONEDA
              ,NVL(XMLDET.FTURCD,'--') as XML_ASOCIACION     
              
              FROM (
                 select
                       PASIVO.RPKCO as FAC_COMPANIA
                      ,PASIVO.RPDCT as FAC_TIPO
                      ,PASIVO.RPDOC as FAC
                      ,nvl(trim(PASIVO.RPVINV),'--') as FACTURA
                      ,PASIVO.RPAN8 as PROVEEDOR
                      ,PASIVO.RPPYE as BENEFICIARIO
                      ,case when PASIVO.RPDIVJ <> 0 then TO_DATE(1900000 + PASIVO.RPDIVJ,'YYYYDDD') end as FECHA_FACTURA
                      ,CASE WHEN PASIVO.RPDGJ <> 0 THEN TO_DATE(1900000 + PASIVO.RPDGJ,'YYYYDDD') END AS FECHA_LM
                      ,PASIVO.RPFY  as ANIO
                      ,PASIVO.RPPN  as PERIODO
                      ,nvl(trim(PASIVO.RPMCU),'--') as UN
                      ,PASIVO.RPICU as BATCH
                      ,PASIVO.RPICUT as BATCH_TIPO
                      ,case when PASIVO.RPDICJ <> 0 then TO_DATE(1900000 + PASIVO.RPDICJ,'YYYYDDD') end as BATCH_FECHA
                      ,PASIVO.RPPOST as POSTEO
                      ,SUM(PASIVO.RPAG/100) as MONTO_TOTAL_MX
                      ,SUM(PASIVO.RPAAP/100) as MONTO_PENDIENTE_MX
                      ,SUM(PASIVO.RPATXA/100) as MONTO_IMPONIBLE_MX
                      ,SUM(PASIVO.RPATXN/100) as MONTO_NOIMPONIBLE_MX
                      ,SUM(PASIVO.RPSTAM/100) as MONTO_IMPUESTO_MX
                      ,NVL(TRIM(PASIVO.RPTXA1),'--') as IMPUESTO        
                      ,PASIVO.RPCRCD as MONEDA
                      ,PASIVO.RPCRR as TASA
                      ,SUM(PASIVO.RPACR/100) as MONTO_TOTAL_EX
                      ,SUM(PASIVO.RPFAP/100) as MONTO_PENDIENTE_EX
                      ,SUM(PASIVO.RPCTXA/100) as MONTO_IMPONIBLE_EX
                      ,SUM(PASIVO.RPCTXN/100) as MONTO_NOIMPONIBLE_EX
                      ,SUM(PASIVO.RPCTAM/100) as MONTO_IMPUESTO_EX
                      ,SUM(PASIVO.RPATAD/100) as MONTO_XDIST_MX
                      ,SUM(PASIVO.RPCTAD/100) as MONTO_XDIST_EX
                      ,NVL(TRIM(PASIVO.RPPKCO),'--') as OC_COMPANIA
                      ,NVL(TRIM(PASIVO.RPPDCT),'--') as OC_TIPO         
                      ,TO_NUMBER(NVL(TRIM(PASIVO.RPPO),0)) as OC          
                      ,TRIM(PASIVO.RPTORG) as CREATED_BY
                    
                    from PRODDTA.F0411 PASIVO where 1=1
                    and PASIVO.RPDCTA <> 'PE'
                    AND PASIVO.RPAG > 0
                    
                    group by
                      PASIVO.RPKCO
                      ,PASIVO.RPDCT
                      ,PASIVO.RPDOC
                      ,nvl(trim(PASIVO.RPVINV),'--')
                      ,PASIVO.RPAN8
                      ,PASIVO.RPPYE
                      ,case when PASIVO.RPDIVJ <> 0 then TO_DATE(1900000 + PASIVO.RPDIVJ,'YYYYDDD') end
                      ,CASE WHEN PASIVO.RPDGJ <> 0 THEN TO_DATE(1900000 + PASIVO.RPDGJ,'YYYYDDD') END
                      ,PASIVO.RPFY 
                      ,PASIVO.RPPN 
                      ,nvl(trim(PASIVO.RPMCU),'--')
                      ,PASIVO.RPICU
                      ,PASIVO.RPICUT
                      ,case when PASIVO.RPDICJ <> 0 then TO_DATE(1900000 + PASIVO.RPDICJ,'YYYYDDD') end
                      ,PASIVO.RPPOST
                      ,NVL(TRIM(PASIVO.RPTXA1),'--')
                      ,PASIVO.RPCRCD
                      ,PASIVO.RPCRR
                      ,NVL(TRIM(PASIVO.RPPKCO),'--') 
                      ,NVL(TRIM(PASIVO.RPPDCT),'--')
                      ,TO_NUMBER(NVL(TRIM(PASIVO.RPPO),0)) 
                      ,TRIM(PASIVO.RPTORG)
              
                  ) FACTU
                  
              /*   GENERADORES
              --------------------------------------------------------------------------------*/                 
              left outer join NUVPD.VIEW_USUARIOS ORG on 1=1
                          and ORG.CLAVE = FACTU.CREATED_BY
                       
              /*   PROVEEDORES   
              --------------------------------------------------------------------------------*/ 
              left outer join PRODDTA.F0101 PROVEEDOR  
                           on PROVEEDOR.ABAN8 = FACTU.PROVEEDOR  
                           
              /*   BENEFICIARIOS   
              --------------------------------------------------------------------------------*/ 
              left outer join PRODDTA.F0101 BENEF  
                           on BENEF.ABAN8 = FACTU.BENEFICIARIO               
              
               /*   XMLS
              --------------------------------------------------------------------------------*/                        
              left outer join PRODDTA.F5903001 XML on 1=1
                          AND XML.CDKCOO = FACTU.FAC_COMPANIA   --/ Compania
                          and XML.CDDCTO = FACTU.FAC_TIPO   --/ Tipo
                          and XML.cddoco = FACTU.FAC   --/ Numero    
              
                  /*   XMLS
              --------------------------------------------------------------------------------*/  
              left outer join PRODDTA.F5903000 XMLDET on 1=1
                          AND XMLDET.FTGENKEY = xml.CDGENKEY     
                                  
                  
              where 1=1
)
where 1=1
and FAC_TIPO = 'PS'
AND FAC = 12232
--and created_by = 'JVARGASA'
;




SELECT
*
FROM NUVPD.VIEW_CXPVSMXL]]>
         </code>
      </snippet>
      <snippet name="Egresos sin IVA (Detalle)" description="">
         <code>
            <![CDATA[select
*
from NUVPD.VM_CP
;



select
*
from (

SELECT PAGOS.BENEFICIARIO,
       NVL (SUPPLIER.DESCRIPCION, '-') AS BENEFICIARIO_DESC,
       NVL (SUPPLIER.CLASE5, '-') AS BENEFICIARIO_CLASE5,
       NVL (SUPPLIER.CLASE5_DESC, '-') AS BENEFICIARIO_CLASE5_DESC,
       PAGOS.UN,
       NVL (CENTRO.MCDL01, '-') AS UN_DESC,
       NVL (TRIM (CENTRO.MCRP01), '-') AS UN_PROYECTO,
       NVL (TRIM (PROYECTO.DRDL01), '-') AS UN_PROYECTO_DESC,
       NVL (TRIM (PROYECTO.DRDL02), '-') AS UN_PROYECTO_ZONA,
       NVL (TRIM (PROYECTO.DRSPHD), '-') AS UN_PROYECTO_TIPO,
       NVL (TRIM (PROYECTO.DRHRDC), '-') AS UN_PROYECTO_ESTADO,
       PAGOS.ANIO,
       PAGOS.PERIODO,
       PAGOS.COMPANIA,
       PAGOS.DOC_TIPO,
       PAGOS.DOC,
       PAGOS.FACTURA,
       PAGOS.FECHA_LM,
       PAGOS.CUENTA,
       PAGOS.CUENTA_NUMERO,
       PAGOS.CUENTA_DESC,
       PAGOS.CUENTA_CLASE_DESC,
       PAGOS.CUENTA_TIPO,
       PAGOS.CUENTA_FLUJO,
       PAGOS.TOTAL,
       PAGOS.ENERO,
       PAGOS.FEBRERO,
       PAGOS.MARZO,
       PAGOS.ABRIL,
       PAGOS.MAYO,
       PAGOS.JUNIO,
       PAGOS.JULIO,
       PAGOS.AGOSTO,
       PAGOS.SEPTIEMBRE,
       PAGOS.OCTUBRE,
       PAGOS.NOVIEMBRE,
       PAGOS.DICIEMBRE
  FROM (SELECT GASTOS.BENEFICIARIO,
               GASTOS.UN,
               GASTOS.ANIO,
               GASTOS.PERIODO,
               GASTOS.DOC_COMPANIA AS COMPANIA,
               GASTOS.DOC_TIPO,
               GASTOS.DOC,
               GASTOS.FACTURA,
               GASTOS.FECHA_LM,
               GASTOS.CUENTA,
               GASTOS.CUENTA_NUMERO,
               GASTOS.CUENTA_CLASE_DESC,
               GASTOS.CUENTA_TIPO,
               GASTOS.CUENTA_FLUJO,
               GASTOS.CUENTA_DESC,
               GASTOS.MONTO_DSTB AS TOTAL,
               CASE WHEN GASTOS.PERIODO = 1 THEN GASTOS.MONTO_DSTB ELSE 0 END
                  AS ENERO,
               CASE WHEN GASTOS.PERIODO = 2 THEN GASTOS.MONTO_DSTB ELSE 0 END
                  AS FEBRERO,
               CASE WHEN GASTOS.PERIODO = 3 THEN GASTOS.MONTO_DSTB ELSE 0 END
                  AS MARZO,
               CASE WHEN GASTOS.PERIODO = 4 THEN GASTOS.MONTO_DSTB ELSE 0 END
                  AS ABRIL,
               CASE WHEN GASTOS.PERIODO = 5 THEN GASTOS.MONTO_DSTB ELSE 0 END
                  AS MAYO,
               CASE WHEN GASTOS.PERIODO = 6 THEN GASTOS.MONTO_DSTB ELSE 0 END
                  AS JUNIO,
               CASE WHEN GASTOS.PERIODO = 7 THEN GASTOS.MONTO_DSTB ELSE 0 END
                  AS JULIO,
               CASE WHEN GASTOS.PERIODO = 8 THEN GASTOS.MONTO_DSTB ELSE 0 END
                  AS AGOSTO,
               CASE WHEN GASTOS.PERIODO = 9 THEN GASTOS.MONTO_DSTB ELSE 0 END
                  AS SEPTIEMBRE,
               CASE
                  WHEN GASTOS.PERIODO = 10 THEN GASTOS.MONTO_DSTB
                  ELSE 0
               END
                  AS OCTUBRE,
               CASE
                  WHEN GASTOS.PERIODO = 11 THEN GASTOS.MONTO_DSTB
                  ELSE 0
               END
                  AS NOVIEMBRE,
               CASE
                  WHEN GASTOS.PERIODO = 12 THEN GASTOS.MONTO_DSTB
                  ELSE 0
               END
                  AS DICIEMBRE
          FROM NUVPD.VIEW_E_SINIVA GASTOS
        UNION ALL
        SELECT NOMINAS.PROVEEDOR,
               NOMINAS.UN,
               NOMINAS.ANIO,
               NOMINAS.PERIODO,
               NOMINAS.DOC_COMPANIA AS COMPANIA,
               NOMINAS.DOC_TIPO,
               NOMINAS.DOC,
               NOMINAS.FACTURA,
               NOMINAS.FECHA_LM,
               NOMINAS.CUENTA,
               NOMINAS.CUENTA_NUMERO,
               NOMINAS.CUENTA_CLASE_DESC,
               NOMINAS.CUENTA_TIPO,
               NOMINAS.CUENTA_FLUJO,
               NOMINAS.CUENTA_DESC,
               NOMINAS.MONTO AS TOTAL,
               CASE WHEN NOMINAS.PERIODO = 1 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS ENERO,
               CASE WHEN NOMINAS.PERIODO = 2 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS FEBRERO,
               CASE WHEN NOMINAS.PERIODO = 3 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS MARZO,
               CASE WHEN NOMINAS.PERIODO = 4 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS ABRIL,
               CASE WHEN NOMINAS.PERIODO = 5 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS MAYO,
               CASE WHEN NOMINAS.PERIODO = 6 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS JUNIO,
               CASE WHEN NOMINAS.PERIODO = 7 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS JULIO,
               CASE WHEN NOMINAS.PERIODO = 8 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS AGOSTO,
               CASE WHEN NOMINAS.PERIODO = 9 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS SEPTIEMBRE,
               CASE WHEN NOMINAS.PERIODO = 10 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS OCTUBRE,
               CASE WHEN NOMINAS.PERIODO = 11 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS NOVIEMBRE,
               CASE WHEN NOMINAS.PERIODO = 12 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS DICIEMBRE
          FROM NUVPD.VIEW_ENOMINA NOMINAS
        UNION ALL
        SELECT SINAPLICAR.PROVEEDOR,
               SINAPLICAR.UN,
               SINAPLICAR.ANIO,
               SINAPLICAR.PERIODO,
               SINAPLICAR.DOC_COMPANIA AS COMPANIA,
               SINAPLICAR.DOC_TIPO,
               SINAPLICAR.DOC,
               SINAPLICAR.FACTURA,
               SINAPLICAR.FECHA_LM,
               SINAPLICAR.CUENTA,
               SINAPLICAR.CUENTA_NUMERO,
               SINAPLICAR.CUENTA_CLASE_DESC,
               SINAPLICAR.CUENTA_TIPO,
               SINAPLICAR.CUENTA_FLUJO,
               SINAPLICAR.CUENTA_DESC,
               SINAPLICAR.MONTO AS TOTAL,
               CASE
                  WHEN SINAPLICAR.PERIODO = 1 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS ENERO,
               CASE
                  WHEN SINAPLICAR.PERIODO = 2 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS FEBRERO,
               CASE
                  WHEN SINAPLICAR.PERIODO = 3 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS MARZO,
               CASE
                  WHEN SINAPLICAR.PERIODO = 4 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS ABRIL,
               CASE
                  WHEN SINAPLICAR.PERIODO = 5 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS MAYO,
               CASE
                  WHEN SINAPLICAR.PERIODO = 6 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS JUNIO,
               CASE
                  WHEN SINAPLICAR.PERIODO = 7 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS JULIO,
               CASE
                  WHEN SINAPLICAR.PERIODO = 8 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS AGOSTO,
               CASE
                  WHEN SINAPLICAR.PERIODO = 9 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS SEPTIEMBRE,
               CASE
                  WHEN SINAPLICAR.PERIODO = 10 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS OCTUBRE,
               CASE
                  WHEN SINAPLICAR.PERIODO = 11 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS NOVIEMBRE,
               CASE
                  WHEN SINAPLICAR.PERIODO = 12 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS DICIEMBRE
          FROM NUVPD.VIEW_ES SINAPLICAR) PAGOS
       LEFT OUTER JOIN PRODDTA.F0006 CENTRO
          ON TRIM (CENTRO.MCMCU) = PAGOS.UN
       LEFT OUTER JOIN PRODCTL.F0005 PROYECTO
          ON     PROYECTO.DRSY = '00'
             AND PROYECTO.DRRT = '01'
             AND TRIM (PROYECTO.DRKY) = TRIM (CENTRO.MCRP01)
       LEFT OUTER JOIN (SELECT ADDRESS.ABAN8 AS CLAVE,
                               NVL (ADDRESS.ABALPH, '-') AS DESCRIPCION,
                               ADDRESS.ABAT1 AS TIPO,
                               NVL (TRIM (TIPO.DRDL01), '-') AS TIPO_DESC,
                               NVL (TRIM (ADDRESS.ABCLASS05), '-') AS CLASE5,
                               NVL (TRIM (CLASE5.DRDL01), '-') AS CLASE5_DESC
                          FROM PRODDTA.F0101 ADDRESS
                               LEFT OUTER JOIN PRODCTL.F0005 TIPO
                                  ON TIPO.DRSY = '01' AND TIPO.DRRT = 'ST'
                                     AND TRIM (TIPO.DRKY) =
                                            TRIM (ADDRESS.ABAT1)
                               LEFT OUTER JOIN PRODCTL.F0005 CLASE5
                                  ON CLASE5.DRSY = '01'
                                     AND CLASE5.DRRT = 'CE'
                                     AND TRIM (CLASE5.DRKY) =
                                            TRIM (ADDRESS.ABCLASS05)
                         where 1 = 1) SUPPLIER
          on SUPPLIER.CLAVE = PAGOS.BENEFICIARIO

)
where 1=1
--and UN_PROYECTO_TIPO = 'D'
and ANIO = 15
and un_proyecto not in ('-')

order by
COMPANIA
,UN_PROYECTO_TIPO
,UN_PROYECTO
,UN_PROYECTO_DESC
,CUENTA_CLASE_DESC
,UN
,UN_DESC
;]]>
         </code>
      </snippet>
      <snippet name="Egresos sin IVA (Sumarizados)" description="">
         <code>
            <![CDATA[select
UN_PROYECTO
,UN_PROYECTO_DESC
,UN
,UN_DESC
,SUM(TOTAL) AS TOTAL
,SUM(ENERO) AS ENERO
,SUM(FEBRERO) AS FEBRERO
,SUM(MARZO) AS MARZO
,SUM(ABRIL) AS ABRIL
,SUM(MAYO) AS MAYO
,SUM(JUNIO) AS JUNIO
,SUM(JULIO) AS JULIO
,SUM(AGOSTO) AS AGOSTO
,SUM(SEPTIEMBRE) AS SEPTIEMBRE
,SUM(OCTUBRE) AS OCTUBRE
,SUM(NOVIEMBRE) AS NOVIEMBRE
,SUM(DICIEMBRE) as DICIEMBRE

FROM (

SELECT PAGOS.BENEFICIARIO,
       NVL (SUPPLIER.DESCRIPCION, '-') AS BENEFICIARIO_DESC,
       NVL (SUPPLIER.CLASE5, '-') AS BENEFICIARIO_CLASE5,
       NVL (SUPPLIER.CLASE5_DESC, '-') AS BENEFICIARIO_CLASE5_DESC,
       PAGOS.UN,
       NVL (CENTRO.MCDL01, '-') AS UN_DESC,
       NVL (TRIM (CENTRO.MCRP01), '-') AS UN_PROYECTO,
       NVL (TRIM (PROYECTO.DRDL01), '-') AS UN_PROYECTO_DESC,
       NVL (TRIM (PROYECTO.DRDL02), '-') AS UN_PROYECTO_ZONA,
       NVL (TRIM (PROYECTO.DRSPHD), '-') AS UN_PROYECTO_TIPO,
       NVL (TRIM (PROYECTO.DRHRDC), '-') AS UN_PROYECTO_ESTADO,
       PAGOS.ANIO,
       PAGOS.PERIODO,
       PAGOS.COMPANIA,
       PAGOS.DOC_TIPO,
       PAGOS.DOC,
       PAGOS.FACTURA,
       PAGOS.FECHA_LM,
       PAGOS.CUENTA,
       PAGOS.CUENTA_NUMERO,
       PAGOS.CUENTA_DESC,
       PAGOS.CUENTA_CLASE_DESC,
       PAGOS.CUENTA_TIPO,
       PAGOS.CUENTA_FLUJO,
       PAGOS.TOTAL,
       PAGOS.ENERO,
       PAGOS.FEBRERO,
       PAGOS.MARZO,
       PAGOS.ABRIL,
       PAGOS.MAYO,
       PAGOS.JUNIO,
       PAGOS.JULIO,
       PAGOS.AGOSTO,
       PAGOS.SEPTIEMBRE,
       PAGOS.OCTUBRE,
       PAGOS.NOVIEMBRE,
       PAGOS.DICIEMBRE
  FROM (SELECT GASTOS.BENEFICIARIO,
               GASTOS.UN,
               GASTOS.ANIO,
               GASTOS.PERIODO,
               GASTOS.DOC_COMPANIA AS COMPANIA,
               GASTOS.DOC_TIPO,
               GASTOS.DOC,
               GASTOS.FACTURA,
               GASTOS.FECHA_LM,
               GASTOS.CUENTA,
               GASTOS.CUENTA_NUMERO,
               GASTOS.CUENTA_CLASE_DESC,
               GASTOS.CUENTA_TIPO,
               GASTOS.CUENTA_FLUJO,
               GASTOS.CUENTA_DESC,
               GASTOS.MONTO_DSTB AS TOTAL,
               CASE WHEN GASTOS.PERIODO = 1 THEN GASTOS.MONTO_DSTB ELSE 0 END
                  AS ENERO,
               CASE WHEN GASTOS.PERIODO = 2 THEN GASTOS.MONTO_DSTB ELSE 0 END
                  AS FEBRERO,
               CASE WHEN GASTOS.PERIODO = 3 THEN GASTOS.MONTO_DSTB ELSE 0 END
                  AS MARZO,
               CASE WHEN GASTOS.PERIODO = 4 THEN GASTOS.MONTO_DSTB ELSE 0 END
                  AS ABRIL,
               CASE WHEN GASTOS.PERIODO = 5 THEN GASTOS.MONTO_DSTB ELSE 0 END
                  AS MAYO,
               CASE WHEN GASTOS.PERIODO = 6 THEN GASTOS.MONTO_DSTB ELSE 0 END
                  AS JUNIO,
               CASE WHEN GASTOS.PERIODO = 7 THEN GASTOS.MONTO_DSTB ELSE 0 END
                  AS JULIO,
               CASE WHEN GASTOS.PERIODO = 8 THEN GASTOS.MONTO_DSTB ELSE 0 END
                  AS AGOSTO,
               CASE WHEN GASTOS.PERIODO = 9 THEN GASTOS.MONTO_DSTB ELSE 0 END
                  AS SEPTIEMBRE,
               CASE
                  WHEN GASTOS.PERIODO = 10 THEN GASTOS.MONTO_DSTB
                  ELSE 0
               END
                  AS OCTUBRE,
               CASE
                  WHEN GASTOS.PERIODO = 11 THEN GASTOS.MONTO_DSTB
                  ELSE 0
               END
                  AS NOVIEMBRE,
               CASE
                  WHEN GASTOS.PERIODO = 12 THEN GASTOS.MONTO_DSTB
                  ELSE 0
               END
                  AS DICIEMBRE
          FROM NUVPD.VIEW_E_SINIVA GASTOS
        UNION ALL
        SELECT NOMINAS.PROVEEDOR,
               NOMINAS.UN,
               NOMINAS.ANIO,
               NOMINAS.PERIODO,
               NOMINAS.DOC_COMPANIA AS COMPANIA,
               NOMINAS.DOC_TIPO,
               NOMINAS.DOC,
               NOMINAS.FACTURA,
               NOMINAS.FECHA_LM,
               NOMINAS.CUENTA,
               NOMINAS.CUENTA_NUMERO,
               NOMINAS.CUENTA_CLASE_DESC,
               NOMINAS.CUENTA_TIPO,
               NOMINAS.CUENTA_FLUJO,
               NOMINAS.CUENTA_DESC,
               NOMINAS.MONTO AS TOTAL,
               CASE WHEN NOMINAS.PERIODO = 1 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS ENERO,
               CASE WHEN NOMINAS.PERIODO = 2 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS FEBRERO,
               CASE WHEN NOMINAS.PERIODO = 3 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS MARZO,
               CASE WHEN NOMINAS.PERIODO = 4 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS ABRIL,
               CASE WHEN NOMINAS.PERIODO = 5 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS MAYO,
               CASE WHEN NOMINAS.PERIODO = 6 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS JUNIO,
               CASE WHEN NOMINAS.PERIODO = 7 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS JULIO,
               CASE WHEN NOMINAS.PERIODO = 8 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS AGOSTO,
               CASE WHEN NOMINAS.PERIODO = 9 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS SEPTIEMBRE,
               CASE WHEN NOMINAS.PERIODO = 10 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS OCTUBRE,
               CASE WHEN NOMINAS.PERIODO = 11 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS NOVIEMBRE,
               CASE WHEN NOMINAS.PERIODO = 12 THEN (NOMINAS.MONTO) ELSE 0 END
                  AS DICIEMBRE
          FROM NUVPD.VIEW_ENOMINA NOMINAS
        UNION ALL
        SELECT SINAPLICAR.PROVEEDOR,
               SINAPLICAR.UN,
               SINAPLICAR.ANIO,
               SINAPLICAR.PERIODO,
               SINAPLICAR.DOC_COMPANIA AS COMPANIA,
               SINAPLICAR.DOC_TIPO,
               SINAPLICAR.DOC,
               SINAPLICAR.FACTURA,
               SINAPLICAR.FECHA_LM,
               SINAPLICAR.CUENTA,
               SINAPLICAR.CUENTA_NUMERO,
               SINAPLICAR.CUENTA_CLASE_DESC,
               SINAPLICAR.CUENTA_TIPO,
               SINAPLICAR.CUENTA_FLUJO,
               SINAPLICAR.CUENTA_DESC,
               SINAPLICAR.MONTO AS TOTAL,
               CASE
                  WHEN SINAPLICAR.PERIODO = 1 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS ENERO,
               CASE
                  WHEN SINAPLICAR.PERIODO = 2 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS FEBRERO,
               CASE
                  WHEN SINAPLICAR.PERIODO = 3 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS MARZO,
               CASE
                  WHEN SINAPLICAR.PERIODO = 4 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS ABRIL,
               CASE
                  WHEN SINAPLICAR.PERIODO = 5 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS MAYO,
               CASE
                  WHEN SINAPLICAR.PERIODO = 6 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS JUNIO,
               CASE
                  WHEN SINAPLICAR.PERIODO = 7 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS JULIO,
               CASE
                  WHEN SINAPLICAR.PERIODO = 8 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS AGOSTO,
               CASE
                  WHEN SINAPLICAR.PERIODO = 9 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS SEPTIEMBRE,
               CASE
                  WHEN SINAPLICAR.PERIODO = 10 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS OCTUBRE,
               CASE
                  WHEN SINAPLICAR.PERIODO = 11 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS NOVIEMBRE,
               CASE
                  WHEN SINAPLICAR.PERIODO = 12 THEN (SINAPLICAR.MONTO)
                  ELSE 0
               END
                  AS DICIEMBRE
          FROM NUVPD.VIEW_ES SINAPLICAR) PAGOS
       LEFT OUTER JOIN PRODDTA.F0006 CENTRO
          ON TRIM (CENTRO.MCMCU) = PAGOS.UN
       LEFT OUTER JOIN PRODCTL.F0005 PROYECTO
          ON     PROYECTO.DRSY = '00'
             AND PROYECTO.DRRT = '01'
             AND TRIM (PROYECTO.DRKY) = TRIM (CENTRO.MCRP01)
       LEFT OUTER JOIN (SELECT ADDRESS.ABAN8 AS CLAVE,
                               NVL (ADDRESS.ABALPH, '-') AS DESCRIPCION,
                               ADDRESS.ABAT1 AS TIPO,
                               NVL (TRIM (TIPO.DRDL01), '-') AS TIPO_DESC,
                               NVL (TRIM (ADDRESS.ABCLASS05), '-') AS CLASE5,
                               NVL (TRIM (CLASE5.DRDL01), '-') AS CLASE5_DESC
                          FROM PRODDTA.F0101 ADDRESS
                               LEFT OUTER JOIN PRODCTL.F0005 TIPO
                                  ON TIPO.DRSY = '01' AND TIPO.DRRT = 'ST'
                                     AND TRIM (TIPO.DRKY) =
                                            TRIM (ADDRESS.ABAT1)
                               LEFT OUTER JOIN PRODCTL.F0005 CLASE5
                                  ON CLASE5.DRSY = '01'
                                     AND CLASE5.DRRT = 'CE'
                                     AND TRIM (CLASE5.DRKY) =
                                            TRIM (ADDRESS.ABCLASS05)
                         WHERE 1 = 1) SUPPLIER
          on SUPPLIER.CLAVE = PAGOS.BENEFICIARIO
          
  
)

where 1=1
--and UN_PROYECTO_TIPO = 'D'
and ANIO = 15
and un_proyecto not in ('-')

group by
UN_PROYECTO
,UN_PROYECTO_DESC
,UN
,UN_DESC

order by un_proyecto, un

;]]>
         </code>
      </snippet>
      <snippet name="VIEW_EFACTURAS" description="">
         <code>
            <![CDATA[
  CREATE OR REPLACE FORCE EDITIONABLE VIEW "NUVPD"."VIEW_EFACTURAS" ("COMPANIA", "TIPO", "NUMERO", "LINEA", "AJUSTE", "AJUSTE_TIPO", "FACTURA", "PROVEEDOR", "BENEFICIARIO", "FECHA_FACTURA", "FECHA_VENCIMIENTO", "FECHA_LM", "ANIO", "PERIODO", "BATCH", "BATCH_TIPO", "BATCH_FECHA", "POSTEO", "MONTO_TOTAL_MX", "MONTO_PENDIENTE_MX", "MONTO_IMPONIBLE_MX", "MONTO_NOIMPONIBLE_MX", "MONTO_IMPUESTO_MX", "IMPUESTO", "MONEDA", "TASA", "MONTO_TOTAL_EX", "MONTO_PENDIENTE_EX", "MONTO_IMPONIBLE_EX", "MONTO_NOIMPONIBLE_EX", "MONTO_IMPUESTO_EX", "MONTO_XDIST_MX", "MONTO_XDIST_EX", "BANCO", "GLCLASS", "UN", "CUENTA_SUBLIBRO", "CUENTA_SUB_TIPO", "PAGO_ESTADO", "PAGO_TERMINOS", "PAGO_INTRUMENTO", "FLAG_VOID", "CODIGO_GESTION", "OC_COMPANIA", "OC_TIPO", "OC", "OC_LINEA", "OC_SUFIX", "DESCRIPCION", "ITEM", "ITEM_NUMERO", "ITEM_DESC", "ITEM_GLCLASS", "ITEM_GLCLASS_DESC", "CANTIDAD", "UDM", "UDM_DESC", "CREADOR", "UPDATER", "FECHA_UPDATE") AS 
  select
         PASIVO.RPKCO as COMPANIA
        ,PASIVO.RPDCT as TIPO
        ,PASIVO.RPDOC as NUMERO
        ,PASIVO.RPSFX as LINEA
      
        ,PASIVO.RPSFXE as AJUSTE
        ,nvl(trim(PASIVO.RPDCTA),'--') as AJUSTE_TIPO
        
        ,nvl(trim(PASIVO.RPVINV),'--') as FACTURA
        
        ,PASIVO.RPAN8 as PROVEEDOR
        ,PASIVO.RPPYE as BENEFICIARIO
      
        ,case when PASIVO.RPDIVJ <> 0 then TO_DATE(1900000 + PASIVO.RPDIVJ,'YYYYDDD') end as FECHA_FACTURA
        ,case when PASIVO.RPDDJ <> 0 then TO_DATE(1900000 + PASIVO.RPDDJ,'YYYYDDD') end as FECHA_VENCIMIENTO
        ,CASE WHEN PASIVO.RPDGJ <> 0 THEN TO_DATE(1900000 + PASIVO.RPDGJ,'YYYYDDD') END AS FECHA_LM
      
        ,PASIVO.RPFY  as ANIO
        ,PASIVO.RPPN  as PERIODO
        --,PASIVO.RPCO  as COMPANIA
        
        ,PASIVO.RPICU as BATCH
        ,PASIVO.RPICUT as BATCH_TIPO
        ,case when PASIVO.RPDICJ <> 0 then TO_DATE(1900000 + PASIVO.RPDICJ,'YYYYDDD') end as BATCH_FECHA
        ,PASIVO.RPPOST as POSTEO
        
        ,PASIVO.RPAG/100 as MONTO_TOTAL_MX
        ,PASIVO.RPAAP/100 as MONTO_PENDIENTE_MX
        ,PASIVO.RPATXA/100 as MONTO_IMPONIBLE_MX
        ,PASIVO.RPATXN/100 as MONTO_NOIMPONIBLE_MX
        ,PASIVO.RPSTAM/100 as MONTO_IMPUESTO_MX
        ,nvl(trim(PASIVO.RPTXA1),'--') as IMPUESTO
        
        ,PASIVO.RPCRCD as MONEDA
        ,PASIVO.RPCRR as TASA
        ,PASIVO.RPACR/100 as MONTO_TOTAL_EX
        ,PASIVO.RPFAP/100 as MONTO_PENDIENTE_EX
        ,PASIVO.RPCTXA/100 as MONTO_IMPONIBLE_EX
        ,PASIVO.RPCTXN/100 as MONTO_NOIMPONIBLE_EX
        ,PASIVO.RPCTAM/100 as MONTO_IMPUESTO_EX

        ,PASIVO.RPATAD/100 as MONTO_XDIST_MX
        ,PASIVO.RPCTAD/100 as MONTO_XDIST_EX        
        
        ,PASIVO.RPGLBA as BANCO
        ,NVL(TRIM(PASIVO.RPGLC),'--') as GLCLASS

        ,NVL(TRIM(PASIVO.RPMCU),'--') as UN
        ,NVL(TRIM(PASIVO.RPSBL),'--') as CUENTA_SUBLIBRO
        ,nvl(trim(PASIVO.RPSBLT),'--') as CUENTA_SUB_TIPO
        
        ,NVL(TRIM(PASIVO.RPPST),'--') as PAGO_ESTADO
        ,NVL(TRIM(PASIVO.RPPTC),'--') as PAGO_TERMINOS
        ,NVL(TRIM(PASIVO.RPPYIN),'--') as PAGO_INTRUMENTO  
        
        ,nvl(trim(PASIVO.RPVOD),'--') as FLAG_VOID
        ,nvl(trim(PASIVO.RPCRC),'--') as CODIGO_GESTION
        
        ,NVL(TRIM(PASIVO.RPPKCO),'--') as OC_COMPANIA
        ,nvl(trim(PASIVO.RPPDCT),'--') as OC_TIPO
        
        ,TO_NUMBER(NVL(trim(PASIVO.RPPO),'0')) as oc
        
        ,PASIVO.RPLNID/1000 as OC_LINEA

        ,nvl(trim(PASIVO.RPSFXO),'--') as OC_SUFIX
        
        ,nvl(trim(PASIVO.RPRMK),'--') as DESCRIPCION
          
        ,PASIVO.RPITM as ITEM
        ,NVL(ITEM.IMLITM,'--') as ITEM_NUMERO        
        ,NVL(ITEM.IMDSC1 || ITEM.IMDSC2,'--') as ITEM_DESC
        ,nvl(ITEM.IMGLPT,'--') as ITEM_GLCLASS
        ,nvl(TRIM(GLCLASS.DRDL01),'--') as ITEM_GLCLASS_DESC
        
        ,(PASIVO.RPU/100) as CANTIDAD
        ,nvl(trim(PASIVO.RPUM),'--') as UDM
        ,nvl(TRIM(UDM.DRDL01),'--') as UDM_DESC
        
        ,TRIM(PASIVO.RPTORG) as CREADOR
        ,trim(PASIVO.RPUSER) as UPDATER
        ,CASE WHEN PASIVO.RPUPMJ <> 0 THEN TO_DATE(1900000 + PASIVO.RPUPMJ,'YYYYDDD') END AS FECHA_UPDATE
        
      
      from PRODDTA.F0411 PASIVO

      /*   ITEMS
      --------------------------------------------------------------------------------*/
      left outer join PRODDTA.F4101 ITEM
                   on ITEM.IMITM = PASIVO.RPITM

      /*   UNIDADES DE MEDIDAS 
      --------------------------------------------------------------------------------*/
      LEFT OUTER JOIN PRODCTL.F0005D UDM
                   ON UDM.DRSY = '00'
                  and UDM.DRRT = 'UM'
                  AND TRIM(UDM.DRKY) = trim(PASIVO.RPUM)   

      /*   GLCLASS
      --------------------------------------------------------------------------------*/                  
      LEFT OUTER JOIN PRODCTL.F0005 GLCLASS
                   ON GLCLASS.DRSY = '41'    
                  AND GLCLASS.DRRT = '9'    
                  AND TRIM(GLCLASS.DRKY) = TRIM(ITEM.IMGLPT);

      where 1=1
      and PASIVO.RPDCTA <> 'PE'  --<- Quitamos los anulados ( registros marcados como anulados )
      AND PASIVO.RPAG > 0        --<- Quitamos los anulados ( saldos mayores a 0 )  
]]>
         </code>
      </snippet>
      <snippet name="VIEW_EAPLICANTICIPOS" description="">
         <code>
            <![CDATA[select 
*
from 
(
CREATE OR REPLACE FORCE EDITIONABLE VIEW "NUVPD"."VIEW_EAPLICANTICIPOS" ("PAGO_ID", "PAGO_NUMERO", "BENEFICIARIO", "FACTURA_COMPANIA", "FACTURA_TIPO", "FACTURA", "FACTURA_MONTO", "FACTURA_CANTIDAD", "ANTICIPO_COMPANIA", "ANTICIPO_TIPO", "ANTICIPO", "ANTICIPO_MONTO", "ANTICIPO_CANTIDAD", "MONTO_APLICADO") AS 
  SELECT
FACTURAS.PAGO_ID
,FACTURAS.PAGO_NUMERO
,FACTURAS.BENEFICIARIO
,FACTURAS.FACTURA_COMPANIA
,FACTURAS.FACTURA_TIPO
,FACTURAS.FACTURA
,FACTURAS.FACTURA_MONTO
,FACTURAS.FACTURA_CANTIDAD
,ANTICIPOS.ANTICIPO_COMPANIA
,ANTICIPOS.ANTICIPO_TIPO
,ANTICIPOS.ANTICIPO
,ANTICIPOS.ANTICIPO_MONTO
,ANTICIPOS.ANTICIPO_CANTIDAD
,CASE 
  WHEN  FACTURAS.FACTURA_MONTO > ANTICIPOS.ANTICIPO_MONTO THEN ANTICIPOS.ANTICIPO_MONTO
  WHEN  FACTURAS.FACTURA_MONTO < ANTICIPOS.ANTICIPO_MONTO THEN FACTURAS.FACTURA_MONTO
  ELSE  ANTICIPOS.ANTICIPO_MONTO
END AS MONTO_APLICADO
FROM (

        SELECT
          CPAG.RMPYID as PAGO_ID
          ,CPAG.RMDOCM as PAGO_NUMERO
          ,CPAG.RMPYE as BENEFICIARIO 
          ,LPAG.RNKCO  AS FACTURA_COMPANIA
          ,LPAG.RNDCT AS FACTURA_TIPO
          ,LPAG.RNDOC as FACTURA
          ,SUM((LPAG.RNPAAP/100) * -1) AS FACTURA_MONTO
          ,COUNT(*) OVER (PARTITION BY CPAG.RMPYID) AS FACTURA_CANTIDAD
          from PRODDTA.F0413 CPAG
          left outer join PRODDTA.F0414 LPAG
                       on LPAG.RNPYID = CPAG.RMPYID
          WHERE 1=1
          and CPAG.RMVDGJ = 0       --<- QUITAMOS LAS APLICACIONES ANULADAS
          and LPAG.RNDCTM in ('PN','PG') --<- Solo registros de aplicaciones y su perdida o ganancia cambiaria
          and CPAG.RMDCTM = 'PN'  --<- Solo registros de aplicaciones
          AND LPAG.RNPAAP < 0   --<- Solo registros de facturas
          
          GROUP BY
            CPAG.RMPYID
            ,CPAG.RMDOCM
            ,CPAG.RMPYE
            ,LPAG.RNKCO 
            ,LPAG.RNDCT
            ,LPAG.RNDOC
            
    ) FACTURAS
LEFT OUTER JOIN (

                  SELECT
                    CPAG.RMPYID as PAGO_ID
                    ,CPAG.RMDOCM as PAGO_NUMERO
                    ,CPAG.RMPYE as BENEFICIARIO 
                    ,LPAG.RNKCO  AS ANTICIPO_COMPANIA
                    ,LPAG.RNDCT AS ANTICIPO_TIPO
                    ,LPAG.RNDOC as ANTICIPO
                    ,SUM(LPAG.RNPAAP/100) AS ANTICIPO_MONTO
                    ,COUNT(*) OVER (PARTITION BY CPAG.RMPYID) AS ANTICIPO_CANTIDAD
                    from PRODDTA.F0413 CPAG
                    left outer join PRODDTA.F0414 LPAG
                                 on LPAG.RNPYID = CPAG.RMPYID
                    WHERE 1=1       
                    and CPAG.RMVDGJ = 0       --<- QUITAMOS LAS APLICACIONES ANULADAS
                    AND LPAG.RNDCTM = 'PN'   --<- Solo registros de aplicaciones
                    and CPAG.RMDCTM = 'PN'    --<- Solo registros de aplicaciones
                    AND LPAG.RNPAAP > 0   --<- Solo registros de anticipos      
                    
                    GROUP BY
                      CPAG.RMPYID
                      ,CPAG.RMDOCM
                      ,CPAG.RMPYE
                      ,LPAG.RNKCO 
                      ,LPAG.RNDCT
                      ,LPAG.RNDOC
                ) ANTICIPOS
            ON ANTICIPOS.PAGO_ID = FACTURAS.PAGO_ID
WHERE 1=1
AND (
        FACTURAS.FACTURA_CANTIDAD = 1 
        AND ANTICIPOS.ANTICIPO_CANTIDAD > 1
    )
OR  (    
        FACTURAS.FACTURA_CANTIDAD > 1 
        AND ANTICIPOS.ANTICIPO_CANTIDAD = 1
    )
OR  (
        FACTURAS.FACTURA_CANTIDAD = 1 
        AND ANTICIPOS.ANTICIPO_CANTIDAD = 1
    )

ORDER BY FACTURAS.PAGO_ID,FACTURAS.FACTURA

)
where 1=1
and ANTICIPO_COMPANIA = '00011'
and ANTICIPO_TIPO = 'PQ'
and ANTICIPO = 40
;
]]>
         </code>
      </snippet>
      <snippet name="VIEW_PAGOS_CABECERA" description="">
         <code>
            <![CDATA[/* ------------------------------------------------------------------------------ *\
    Nombre: VIEW_PAGOS_CABECERA
    
    Descripcion: Vista que muestra la cabecera de los pagos
\* ------------------------------------------------------------------------------ */

/* ------------------------------------------------------------------------------ *\
    DEPENDENCIAS:
    
      - PRODDTA.F0413 : Accounts Payable - Matching Document 
\* ------------------------------------------------------------------------------ */

/* ------------------------------------------------------------------------------ *\
    OBSERVACIONES: 
    
    a) La tabla PRODDTA.F0413 guarda un registro por cada pago, cada uno de ellos
       con el monto total del pago, el beneficiario, fecha pago, etc.
       
    b) Esta tabla tiene un campo ID que no se muestra en la aplicacion y un campo 
       que identifica el numero de pago (que si se muestra en la aplicacion)
       
    c) PN = Pagos manuales (como anticipos), PK = pagos automatico
    
    d) El monto (RMPAAP) ya considera el IVA
    
    e) Al momento de anular un pago, se registra la fecha 
       en el campo "FECHA_ANULACION"
    
\* ------------------------------------------------------------------------------ */

select
*
from (
        select 
         CPAG.RMPYID as ID
        ,CPAG.RMDCTM as TIPO 
        ,CPAG.RMDOCM as NUMERO
        ,CPAG.RMPYE as BENEFICIARIO       

        ,CASE WHEN CPAG.RMDMTJ <> 0 THEN TO_DATE(1900000 + CPAG.RMDMTJ,'YYYYDDD') END AS FECHA_PAGO
        ,case when CPAG.RMVLDT <> 0 then TO_DATE(1900000 + CPAG.RMVLDT,'YYYYDDD') end as FECHA_LIQUIDACION
        ,CASE WHEN CPAG.RMVDGJ <> 0 THEN TO_DATE(1900000 + CPAG.RMVDGJ,'YYYYDDD') else TO_DATE('01/01/1000','DD/MM/YYYY') END AS FECHA_ANULACION 

        ,(CPAG.RMPAAP/100 * -1) as MONTO
        ,CPAG.RMCRCD AS MONEDA

        ,CPAG.RMPYIN as INTRUMENTO
        ,CPAG.RMGLBA as BANCO_CUENTA_ID
        ,CPAG.RMCBNK AS BANCO_CUENTA_NUMERO
        
        ,CPAG.RMICU  as BATCH
        ,CPAG.RMICUT as BATCH_TIPO
        ,case when CPAG.RMDICJ <> 0 then TO_DATE(1900000 + CPAG.RMUPMJ,'YYYYDDD') end as BATCH_FECHA
        ,CPAG.RMISTP AS POSTEO
        
        ,CPAG.RMTORG as CREATED_BY
        ,CPAG.RMUSER as UPDATED_BY
        ,case when CPAG.RMUPMJ <> 0 then TO_DATE(1900000 + CPAG.RMUPMJ,'YYYYDDD') end as UPDATED_AT
        
        
        from PRODDTA.F0413 CPAG
    )
where 1=1
--AND NUMERO = 1
--and BENEFICIARIO = 200479
--and id = 1891
--AND FECHA_PAGO <> FECHA_LIQUIDACION
--and FECHA_ANULACION <> '01/01/00'
;

/* ------------------------------------------------------------------------------ *\
    CAMPOS NO UTILIZADOS DE TABLA: PRODDTA.F0413
\* ------------------------------------------------------------------------------ */

--,CPAG.RMPID  AS PROGRAMA
--,CPAG.RMCRRM AS MONEDA_MODO
--,CPAG.RMAM AS CUENTA_MODO
--,CPAG.RMBKTR --<- VACIO
--,CPAG.RMJOBN AS WORKSTATION
--,CPAG.RMMIP  --<- VACIO
--,CPAG.RMLRFL --<- VACIO
--,CPAG.RMPRGF --<- VACIO
--,CPAG.RMGFL7 --<- VACIO
--,CPAG.RMGFL8 --<- VACIO
--,CPAG.RMGAM3 --<- SOLO TIENE 0
--,CPAG.RMGAM4 --<- SOLO TIENE 0
--,CPAG.RMGEN6 --<- VACIO
--,CPAG.RMGEN7 --<- VACIO
--,CPAG.RMNETTCID --<- SOLO TIENE 0
--,CPAG.RMNETDOC --<- SOLO TIENE 0
--,CPAG.RMRCND --<- VACIO
--,CPAG.RMR3 --<- VACIO
--,CPAG.RMCNTRTID --<- SOLO TIENE 0
--,CPAG.RMCNTRTCD --<- VACIO
--,CPAG.RMWVID --<- SOLO TIENE 0
--,CPAG.RMBLSCD2 --<- VACIO
--,CPAG.RMHARPER --<- VACIO
--,CPAG.RMHARSFX --<- VACIO                        
--,CPAG.RMUPMT AS TIME_UPDATE
]]>
         </code>
      </snippet>
      <snippet name="Codigos LM y Configuracion ICAS" description="">
         <code>
            <![CDATA[select
ICAS.COMPANIA
,ICAS.GL_CODIGO

,RECEP_OP_4310.CUENTA_NUMERO || ' (' || RECEP_OP_4310.CUENTA_DESCRIPCION || ')' as "RECEPCION - OP (4310)"
,RECEP_OP_4320.CUENTA_NUMERO || ' (' || RECEP_OP_4320.CUENTA_DESCRIPCION || ')' as "RECEPCION - OP (4320)"

,RECEP_OJ_4310.CUENTA_NUMERO || ' (' || RECEP_OJ_4310.CUENTA_DESCRIPCION || ')' as "RECEPCION - OJ (4310)"
,RECEP_OJ_4320.CUENTA_NUMERO || ' (' || RECEP_OJ_4320.CUENTA_DESCRIPCION || ')' as "RECEPCION - OJ (4320)"

,TRANSF_IT_4122.CUENTA_NUMERO || ' (' || TRANSF_IT_4122.CUENTA_DESCRIPCION || ')' as "TRANSFERENCIA - IT (4122)"
,TRANSF_IT_4124.CUENTA_NUMERO || ' (' || TRANSF_IT_4124.CUENTA_DESCRIPCION || ')' as "TRANSFERENCIA - IT (4124)"

,SAL_II_4122.CUENTA_NUMERO || ' (' || SAL_II_4122.CUENTA_DESCRIPCION || ')' as "SALIDA NORMAL - II (4122)"
,SAL_II_4124.CUENTA_NUMERO || ' (' || SAL_II_4124.CUENTA_DESCRIPCION || ')' as "SALIDA NORMAL - II (4124)"

,DESPOT_IM_4122.CUENTA_NUMERO || ' (' || DESPOT_IM_4122.CUENTA_DESCRIPCION || ')' as "DESPACHO OT - IM (4122)"
,DESPOT_IM_4124.CUENTA_NUMERO || ' (' || DESPOT_IM_4124.CUENTA_DESCRIPCION || ')' as "DESPACHO OT - IM (4124)"

FROM (

        select
        COMPANIA  
        ,GL_CODIGO 
        
        from NUVPD.VIEW_ICASM
        where 1=1
        and ICA = 4310
        AND DOC_TIPO IN ('OP','SJ')
        group by
        COMPANIA  
        ,GL_CODIGO 
     ) ICAS
     
/* ICAS DE RECEPCION de TIPO DE OP
----------------------------------------------------------------------------*/
left outer join NUVPD.VIEW_ICASM RECEP_OP_4310 on 1=1
            and RECEP_OP_4310.ICA = 4310
            and RECEP_OP_4310.DOC_TIPO = 'OP' 
            and RECEP_OP_4310.COMPANIA = ICAS.COMPANIA
            and RECEP_OP_4310.GL_CODIGO = ICAS.GL_CODIGO
            and RECEP_OP_4310.CUENTA_UN IN ('F211133')
            AND RECEP_OP_4310.CUENTA_UN_TIPO  NOT IN ('-','*','MD')
                     
left outer join NUVPD.VIEW_ICASM RECEP_OP_4320 on 1=1
            and RECEP_OP_4320.ICA = 4320 
            and RECEP_OP_4320.DOC_TIPO = RECEP_OP_4310.DOC_TIPO            
            and RECEP_OP_4320.COMPANIA = ICAS.COMPANIA
            and RECEP_OP_4320.GL_CODIGO = ICAS.GL_CODIGO
            --and ICA_RECEP1_4320.CUENTA_UN
            AND RECEP_OP_4320.CUENTA_UN_TIPO  NOT IN ('-','*','MD')


/* ICAS DE RECEPCION de TIPO DE OJ
----------------------------------------------------------------------------*/
left outer join NUVPD.VIEW_ICASM RECEP_OJ_4310 on 1=1
            and RECEP_OJ_4310.ICA = 4310
            and RECEP_OJ_4310.DOC_TIPO = 'OJ' 
            and RECEP_OJ_4310.COMPANIA = ICAS.COMPANIA
            and RECEP_OJ_4310.GL_CODIGO = ICAS.GL_CODIGO              
            and RECEP_OJ_4310.CUENTA_UN IN ('F211133')
            AND RECEP_OJ_4310.CUENTA_UN_TIPO  NOT IN ('-','*','MD')
                     
left outer join NUVPD.VIEW_ICASM RECEP_OJ_4320 on 1=1
            and RECEP_OJ_4320.ICA = 4320 
            and RECEP_OJ_4320.DOC_TIPO = RECEP_OJ_4310.DOC_TIPO            
            and RECEP_OJ_4320.COMPANIA = ICAS.COMPANIA
            and RECEP_OJ_4320.GL_CODIGO = ICAS.GL_CODIGO
            --and ICA_RECEP1_4320.CUENTA_UN
            AND RECEP_OJ_4320.CUENTA_UN_TIPO  NOT IN ('-','*','MD')


/* ICAS DE TRANFERENCIA (DOCUMENTO IT) 
----------------------------------------------------------------------------*/
left outer join NUVPD.VIEW_ICASM TRANSF_IT_4122 on 1=1
            and TRANSF_IT_4122.ICA = 4122
            and TRANSF_IT_4122.DOC_TIPO = 'IT' 
            and TRANSF_IT_4122.COMPANIA = ICAS.COMPANIA
            and TRANSF_IT_4122.GL_CODIGO = ICAS.GL_CODIGO              
            and TRANSF_IT_4122.CUENTA_UN IN ('F211133')
            AND TRANSF_IT_4122.CUENTA_UN_TIPO  NOT IN ('-','*','MD')

left outer join NUVPD.VIEW_ICASM TRANSF_IT_4124 on 1=1
            and TRANSF_IT_4124.ICA = 4124 
            and TRANSF_IT_4124.DOC_TIPO = TRANSF_IT_4122.DOC_TIPO
            and TRANSF_IT_4124.COMPANIA = ICAS.COMPANIA
            and TRANSF_IT_4124.GL_CODIGO = ICAS.GL_CODIGO 
            and TRANSF_IT_4124.CUENTA_UN = TRANSF_IT_4122.UN
            AND TRANSF_IT_4124.CUENTA_UN_TIPO  NOT IN ('-','*','MD')
            
/* ICAS DE SALIDAS NORMALES (DOCUMENTO II) 
----------------------------------------------------------------------------*/
left outer join NUVPD.VIEW_ICASM SAL_II_4122 on 1=1
            and SAL_II_4122.ICA = 4122
            and SAL_II_4122.DOC_TIPO = 'II' 
            and SAL_II_4122.COMPANIA = ICAS.COMPANIA
            and SAL_II_4122.GL_CODIGO = ICAS.GL_CODIGO              
            and SAL_II_4122.CUENTA_UN IN ('F211133')
            AND SAL_II_4122.CUENTA_UN_TIPO  NOT IN ('-','*','MD')

left outer join NUVPD.VIEW_ICASM SAL_II_4124 on 1=1
            and SAL_II_4124.ICA = 4124 
            and SAL_II_4124.DOC_TIPO = SAL_II_4122.DOC_TIPO
            and SAL_II_4124.COMPANIA = ICAS.COMPANIA
            and SAL_II_4124.GL_CODIGO = ICAS.GL_CODIGO 
            and SAL_II_4124.CUENTA_UN = SAL_II_4122.UN
            AND SAL_II_4124.CUENTA_UN_TIPO  NOT IN ('-','*','MD')            


/* ICAS DE DESPACHO A OT (DOCUMENTO IM) 
----------------------------------------------------------------------------*/
left outer join NUVPD.VIEW_ICASM DESPOT_IM_4122 on 1=1
            and DESPOT_IM_4122.ICA = 4122
            and DESPOT_IM_4122.DOC_TIPO = 'IM' 
            and DESPOT_IM_4122.COMPANIA = ICAS.COMPANIA
            and DESPOT_IM_4122.GL_CODIGO = ICAS.GL_CODIGO              
            and DESPOT_IM_4122.CUENTA_UN IN ('F211133')
            AND DESPOT_IM_4122.CUENTA_UN_TIPO  NOT IN ('-','*','MD')

left outer join NUVPD.VIEW_ICASM DESPOT_IM_4124 on 1=1
            and DESPOT_IM_4124.ICA = 4124 
            and DESPOT_IM_4124.DOC_TIPO = DESPOT_IM_4122.DOC_TIPO
            and DESPOT_IM_4124.COMPANIA = ICAS.COMPANIA
            and DESPOT_IM_4124.GL_CODIGO = ICAS.GL_CODIGO 
            and DESPOT_IM_4124.CUENTA_UN = DESPOT_IM_4122.UN
            AND DESPOT_IM_4124.CUENTA_UN_TIPO  NOT IN ('-','*','MD')
            
where 1=1
and ICAS.COMPANIA = '00011'
ORDER BY GL_CODIGO
;
]]>
         </code>
      </snippet>
      <snippet name="Equipos" description="">
         <code>
            <![CDATA[/* MAESTRO ACTIVOS */
SELECT
*
from CRPDTA.F1201
where 1=1
AND FANUMB = '10761'
;


/* MAESTRO EQUIPOS */
SELECT
*
from CRPDTA.F1217
where 1=1
and WRNUMB = '10761'
;]]>
         </code>
      </snippet>
      <snippet name="Asosciacion de UUID" description="">
         <code>
            <![CDATA[select
*
from PRODDTA.F5903000

left outer join PRODDTA.F5903001 on 1=1
            and CDGENKEY = FTGENKEY

left outer join PRODDTA.F5903003 on 1=1
            AND UUGENKEY = FTGENKEY

where 1=1
and FTBRTPO = 'CXP'

ORDER BY FTGENKEY

--and FTGENKEY like '40615245%'
;
]]>
         </code>
      </snippet>
      <snippet name="XML Tablas desarrollo" description="">
         <code>
            <![CDATA[    select
    *
    from PRODDTA.F5903000
    
    left outer join PRODDTA.F5903001 on 1=1
                and CDGENKEY = FTGENKEY
    
    left outer join PRODDTA.F5903003 on 1=1
                AND UUGENKEY = FTGENKEY
                
    where 1=1
    AND FTGENKEY like '16A4EF68-9928-4C64-9943-F86F164E9383%'
    --and FTBRTPO = 'CXC'
    --and CDURRF = 'CXP'
            
    ;]]>
         </code>
      </snippet>
      <snippet name="Proveedores sin facturas en CXP" description="">
         <code>
            <![CDATA[SELECT
*
FROM (

            SELECT
            CLAVE
            ,DESCRIPCION
            ,TIPO
            ,NVL(CANTIDAD,0) AS CANTIDAD
            FROM (
            
                select 
                ADDRESS.ABAN8 as CLAVE
                ,NVL (ADDRESS.ABALPH, '-') AS DESCRIPCION
                ,ADDRESS.ABAT1 as TIPO
                ,NVL (TRIM (TIPO.DRDL01), '-') AS TIPO_DESC
                
                FROM PRODDTA.F0101 ADDRESS
                
                left outer join PRODCTL.F0005 TIPO on 1=1 
                            and TIPO.DRSY = '01' 
                            and TIPO.DRRT = 'ST'
                            and TRIM (TIPO.DRKY) = TRIM (ADDRESS.ABAT1)
                            
                where 1 = 1
                and ADDRESS.ABAT1 = 'V'
            )
            
            LEFT OUTER JOIN (
                                select
                                PROVEEDOR,
                                COUNT(*) AS CANTIDAD
                                from NUVPD.VIEW_EFACTURAS
                                
                                group by
                                    PROVEEDOR
                            ) on 1=1
                        and PROVEEDOR = CLAVE

)
where 1=1
AND CANTIDAD = 0


;]]>
         </code>
      </snippet>
   </group>
   <group category="0 - INDICADORES" language="PLSQL">
      <snippet name="Flujo de Efectivo" description="">
         <code>
            <![CDATA[SELECT   
  
'EGRESOS' AS FLUJO,   
PASIVO_TIPO AS DOCUMENTO_TIPO,   
PASIVO_CLAVE AS DOCUMENTO_NUMERO,   
PAGO_MES,   
PAGO_ANIO,   
PAGO_COMPANIA AS COMPANIA_ClaVE,   
pago_compania_desc AS COMPANIA_DESC,   
ast_cuenta_clasif_DESC as clasifiacion,   
PAGO_BENEFICIARIO AS proveedor_clave,   
PAGO_BENEFICIARIO_DESC AS proveedor_Desc,   
AST_UN_CLAVE AS UN_CLAVE,   
AST_UN_DESCRIPCION as un_desc,   
   
AST_UN_PROYECTO as departamento_cLAVe,   
ast_un_proyecto_DESC as departamento_desc,   
   
  
   
SUM (AST_MONTO_DISTRIBUIDO) AS MONTO_PAGADO_MXP,   
  
AST_CUENTA_NUMERO,  
AST_CUENTA_DESCRIPCION   
   
FROM (   
    SELECT   
      PAGO_CLAVE,   
      PAGO_COMPANIA,   
      BOOK_DESC as pago_compania_desc,   
      PAGO_TIPO,   
      PAGO_NUMERO,   
      PAGO_BENEFICIARIO,   
      PAGO_BENEFICIARIO_DESC,         
      PAGO_MATCHING,   
      PAGO_MES,    
      PAGO_ANIO,   
      PAGO_PASIVO_TIPO,   
      PAGO_PASIVO_CLAVE,   
      PAGO_TOTAL_EXT,   
      PAGO_MONEDA,   
      PAGO_TOTAL_MX,   
      PAGO_DOC_CLAVE,   
      PAGO_DOC_TIPO,   
      PAGO_DOC_COMPANIA,   
      PASIVO_COMPANIA,   
      PASIVO_BENEFICIARIO,   
         
      PASIVO_UN,   
      PASIVO_UN_DESCRIPCION,   
      PASIVO_PROYECTO,   
      PASIVO_PROYECTO_DESC,   
      PASIVO_TIPO,   
      PASIVO_CLAVE,   
      PASIVO_SUBTOTAL_EXT,   
      PASIVO_IMPUESTO_EXT,   
      PASIVO_TOTAL_EXT,     
      PASIVO_MONEDA,   
      PASIVO_TIPO_CAMBIO,   
      PASIVO_SUBTOTAL_MX,   
      PASIVO_IMPUESTO_MX,   
      PASIVO_TOTAL_MX,   
         
      PASIVO_BATCH,   
      PASIVO_BATCH_TIPO,   
      DOC_CLAVE,   
      DOC_TIPO,   
      DOC_COMPANIA,   
               
      CASE   
        WHEN AST_UN_CLAVE IS NULL AND PASIVO_TIPO in ('PE','DG','PQ','P4','P5','A1')  THEN 1   
        ELSE COUNT (*)    
             OVER (PARTITION BY PAGO_CLAVE,pago_numero, PAGO_PASIVO_TIPO,PAGO_PASIVO_CLAVE ,pasivo_clave, pasivo_tipo, pasivo_compania)    
      END AS AST_CANTIDAD,   
         
      CASE   
        WHEN AST_UN_CLAVE IS NULL AND PASIVO_TIPO in ('PE','DG','PQ','P4','P5','A1')  THEN TRIM(PASIVO_UN)   
        ELSE TRIM(AST_UN_CLAVE)   
      END AS AST_UN_CLAVE,   
         
      CASE   
        WHEN AST_UN_DESCRIPCION IS NULL THEN PASIVO_UN_DESCRIPCION   
        ELSE AST_UN_DESCRIPCION   
      END AS AST_UN_DESCRIPCION,   
         
      CASE   
        WHEN AST_UN_PROYECTO IS NULL THEN PASIVO_PROYECTO   
        ELSE AST_UN_PROYECTO   
      END AS AST_UN_PROYECTO,         
         
      CASE   
        WHEN ast_un_proyecto_DESC IS NULL THEN PASIVO_PROYECTO_DESC   
        ELSE ast_un_proyecto_DESC   
      END AS ast_un_proyecto_DESC,   
   
      AST_CUENTA_NUMERO,   
   
      CASE   
        WHEN AST_CUENTA_DESCRIPCION IS NULL AND PASIVO_TIPO in ('PE','DG','PQ','P4','P5','A1')  THEN CSCONVERT('ANTICIPOS NO APLICADOS','NCHAR_CS'  )   
        ELSE AST_CUENTA_DESCRIPCION   
      END AS AST_CUENTA_DESCRIPCION,     
         
      ast_cuenta_clasif,   
         
      CASE   
        when ast_cuenta_clasif_DESC is null AND PASIVO_TIPO in ('PE','DG','PQ','P4','P5','A1') then CSCONVERT('ANTICIPOS NO APLICADOS','NCHAR_CS'  )   
        WHEN ast_cuenta_clasif_DESC is null AND PASIVO_TIPO NOT in ('PE','DG','PQ','P4','P5','A1') THEN CSCONVERT('SIN CLASIFICACION','NCHAR_CS'  )   
        ELSE ast_cuenta_clasif_DESC   
      END AS ast_cuenta_clasif_DESC,   
         
      CASE   
        WHEN AST_MONTO IS NULL AND PASIVO_TIPO in ('PE','DG','PQ','P4','P5','A1')  THEN 0   
        ELSE AST_MONTO   
      END AS AST_MONTO_ORIGINAL,   
         
      CASE   
        WHEN AST_UN_CLAVE IS NULL AND PASIVO_TIPO in ('PE','DG','PQ','P4','P5','A1')  THEN PAGO_TOTAL_MX   
           
        ELSE ROUND(PAGO_TOTAL_MX *  ( ( (AST_MONTO*100) /    
                      SUM (AST_MONTO)    
                      OVER (PARTITION BY PAGO_CLAVE,pago_numero, PAGO_PASIVO_TIPO,PAGO_PASIVO_CLAVE ,pasivo_clave, pasivo_tipo, pasivo_compania)) / 100),2)   
      END AS AST_MONTO_DISTRIBUIDO,          
         
        
         
        
         
      CASE   
        WHEN AST_MONEDA_BASE IS NULL AND PASIVO_TIPO in ('PE','DG','PQ','P4','P5','A1')  THEN CSCONVERT('MX','NCHAR_CS')   
        ELSE AST_MONEDA_BASE   
      END AS AST_MONEDA_BASE,     
   
      CASE   
        WHEN AST_TC IS NULL AND PASIVO_TIPO in ('PE','DG','PQ','P4','P5','A1')  THEN 0   
        ELSE AST_TC   
      END AS AST_TC,     
   
      CASE   
        WHEN AST_MONTO_EXT IS NULL AND PASIVO_TIPO in ('PE','DG','PQ','P4','P5','A1')  THEN PASIVO_TOTAL_EXT   
        ELSE AST_MONTO_EXT   
      END AS AST_MONTO_EXT,     
       
      CASE   
        WHEN AST_MONEDA_TRASNSACCION IS NULL AND PASIVO_TIPO in ('PE','DG','PQ','P4','P5','A1')  THEN PASIVO_MONEDA   
        ELSE AST_MONEDA_TRASNSACCION   
      END AS AST_MONEDA_TRASNSACCION    
       
    FROM (   
            select   
               
            PAGO_CLAVE,   
            PAGO_COMPANIA,   
            PAGO_TIPO,   
            PAGO_NUMERO,   
            PAGO_BENEFICIARIO,   
            PAGO_BENEFICIARIO_DESC,   
            PAGO_MATCHING,   
            PAGO_MES,   
            PAGO_ANIO,      
            PAGO_PASIVO_CLAVE,   
            PAGO_PASIVO_TIPO,    
            PAGO_PASIVO_COMPANIA,   
            SUM(PAGO_TOTAL_EXT)/(COUNT (*) OVER (PARTITION BY PAGO_CLAVE,PAGO_TIPO, PAGO_NUMERO, PAGO_PASIVO_CLAVE, PAGO_PASIVO_TIPO, PAGO_PASIVO_COMPANIA)) AS PAGO_TOTAL_EXT,   
            PAGO_MONEDA,   
            SUM(PAGO_TOTAL_MX)/(COUNT (*) OVER (PARTITION BY PAGO_CLAVE,PAGO_TIPO, PAGO_NUMERO, PAGO_PASIVO_CLAVE, PAGO_PASIVO_TIPO, PAGO_PASIVO_COMPANIA)) AS PAGO_TOTAL_MX,   
            PAGO_DOC_COMPANIA,   
            PAGO_DOC_CLAVE,   
            PAGO_DOC_TIPO,   
            COUNT (*) OVER (PARTITION BY PAGO_CLAVE,PAGO_TIPO, PAGO_NUMERO, PAGO_PASIVO_CLAVE, PAGO_PASIVO_TIPO, PAGO_PASIVO_COMPANIA) as PAG_CANTIDAD   
   
            from (   
                        SELECT   
                          PA_CABEZA.RMPYID AS PAGO_CLAVE,   
                          PA_LINEA.RNCO AS PAGO_COMPANIA,   
                          PA_CABEZA.RMDCTM AS PAGO_TIPO,   
                          PA_CABEZA.RMDOCM AS PAGO_NUMERO,   
                          PA_CABEZA.RMPYE AS PAGO_BENEFICIARIO,   
                          ABALPH AS PAGO_BENEFICIARIO_DESC,   
                            
                          PA_LINEA.RNDCTM AS PAGO_MATCHING,   
                            
                          PA_LINEA.RNPN AS PAGO_MES,   
                          PA_LINEA.RNFY AS PAGO_ANIO,      
                                   
                          PA_LINEA.RNDOC AS PAGO_PASIVO_CLAVE,   
                          PA_LINEA.RNDCT AS PAGO_PASIVO_TIPO,    
                          PA_LINEA.RNKCO AS PAGO_PASIVO_COMPANIA,   
                             
                          (PA_LINEA.RNPFAP / 100) * -1 AS PAGO_TOTAL_EXT,   
                          PA_LINEA.RNCRCD AS PAGO_MONEDA,   
                            
                          (PA_LINEA.RNPAAP / 100) * -1 AS PAGO_TOTAL_MX,   
                     
                          case    
                            when APA.FAC_COMPANIA is null then PA_LINEA.RNKCO    
                            else APA.FAC_COMPANIA   
                          end PAGO_DOC_COMPANIA,   
                             
                          case    
                            when APA.FAC_NUMERO is null then PA_LINEA.RNDOC    
                            else APA.FAC_NUMERO   
                          end PAGO_DOC_CLAVE,   
                                       
                          case    
                            when APA.FAC_TIPO is null then PA_LINEA.RNDCT    
                            else APA.FAC_TIPO   
                          end PAGO_DOC_TIPO   
                             
                             
                        FROM proddta.F0413 PA_CABEZA   
                        LEFT OUTER JOIN proddta.F0414 PA_LINEA   
                                     ON PA_LINEA.RNPYID = PA_CABEZA.RMPYID      
                        LEFT OUTER JOIN PRODDTA.F0101                             
                                     ON ABAN8 = PA_CABEZA.RMPYE   
                        left outer join (   
                                            SELECT   
                                              ANTICIPOS.ANT_COMPANIA,   
                                              ANTICIPOS.ANT_NUMERO,   
                                              ANTICIPOS.ANT_TIPO,   
                                              PASIVOS.FAC_COMPANIA,   
                                              PASIVOS.FAC_NUMERO,   
                                              PASIVOS.FAC_TIPO   
                                            FROM (   
                                                    SELECT   
                                                      RMPYID AS PAGO_CLAVE,   
                                                      RNCO AS PAGO_COMPANIA,   
                                                      RMDCTM AS PAGO_TIPO,   
                                                      RMDOCM AS PAGO_NUMERO,          
                                                      RNDOC AS  ANT_NUMERO,   
                                                      RNDCT AS  ANT_TIPO,   
                                                      RNKCO AS  ANT_COMPANIA   
                                                    FROM proddta.F0414 DETALLE   
                                                    inner join proddta.F0413 on RMPYID = RNPYID    
                                                                           and RMVDGJ = 0      
                                                    WHERE RNDCTM = 'PN'   
                                                    AND RNDCT in ('PE','PQ')   
                                                      
                                                 ) ANTICIPOS   
                                                  LEFT OUTER JOIN (   
                                                                    SELECT   
                                                                      RMPYID AS PAGO_CLAVE,   
                                                                      RNCO AS PAGO_COMPANIA,   
                                                                      RMDCTM AS PAGO_TIPO,   
                                                                      RMDOCM AS PAGO_NUMERO,          
                                                                      RNDOC AS  FAC_NUMERO,   
                                                                      RNDCT AS  FAC_TIPO,   
                                                                      RNKCO AS  FAC_COMPANIA   
                                                                    FROM proddta.F0414   
                                                                    inner join proddta.F0413 on RMPYID = RNPYID   
                                                                    WHERE RNDCTM = 'PN'   
                                                                    AND RNDCT not in ('PE','PQ')   
                                                                  ) PASIVOS ON PASIVOS.PAGO_CLAVE = ANTICIPOS.PAGO_CLAVE   
                                            group by    
                                              ANTICIPOS.ANT_NUMERO,   
                                              ANTICIPOS.ANT_TIPO,   
                                              ANTICIPOS.ANT_COMPANIA,   
                                              PASIVOS.FAC_NUMERO,   
                                              PASIVOS.FAC_TIPO,   
                                              PASIVOS.FAC_COMPANIA           
                           
                                        ) APA ON PA_LINEA.RNDOC = APA.ANT_NUMERO   
                                             AND PA_LINEA.RNDCT = APA.ANT_TIPO    
                                             AND PA_LINEA.RNKCO = APA.ANT_COMPANIA   
                           
                        WHERE PA_CABEZA.RMVDGJ = 0                
                          
                        AND PA_LINEA.RNDCTM NOT IN ('PG')    
            )   
               
            GROUP BY   
            PAGO_CLAVE,   
            PAGO_COMPANIA,   
            PAGO_TIPO,   
            PAGO_NUMERO,   
            PAGO_BENEFICIARIO,   
            PAGO_BENEFICIARIO_DESC,   
            PAGO_MATCHING,   
            PAGO_MES,   
            PAGO_ANIO,      
            PAGO_PASIVO_CLAVE,   
            PAGO_PASIVO_TIPO,    
            PAGO_PASIVO_COMPANIA,   
            PAGO_MONEDA,   
            PAGO_DOC_COMPANIA,   
            PAGO_DOC_CLAVE,   
            PAGO_DOC_TIPO   
         )    
    LEFT OUTER JOIn (   
                      select   
                           
                         pasivo.RPKCO AS PASIVO_COMPANIA,   
                            
                         pasivo.RPMCU as pasivo_un,          
                         UN.MCDL01 AS PASIVO_UN_DESCRIPCION,   
                         UN.MCRP01 AS PASIVO_PROYECTO,   
                         (PROY_CLASIF.DRDL01 || PROY_CLASIF.DRDL02) as PASIVO_PROYECTO_DESC,   
          
                         PASIVO.RPDOC AS PASIVO_CLAVE,   
                         PASIVO.RPDCT AS PASIVO_TIPO,             
                         PASIVO.RPPYE as PASIVO_BENEFICIARIO,   
   
                         SUM((PASIVO.RPACR-PASIVO.RPCTAM)/100) AS PASIVO_SUBTOTAL_EXT,   
                         SUM(PASIVO.RPCTAM/100) AS PASIVO_IMPUESTO_EXT,   
                         SUM(PASIVO.RPACR/100) AS PASIVO_TOTAL_EXT,   
                             
                         PASIVO.RPCRCD AS PASIVO_MONEDA,   
                         PASIVO.RPCRR as PASIVO_TIPO_CAMBIO,   
       
                         sum((PASIVO.RPAG-PASIVO.RPSTAM)/100) as PASIVO_SUBTOTAL_MX,   
                         SUM(PASIVO.RPSTAM/100) AS PASIVO_IMPUESTO_MX,   
                         SUM(PASIVO.RPAG/100) AS PASIVO_TOTAL_MX,   
                                                 
                         PASIVO.RPICU AS PASIVO_BATCH,   
                         PASIVO.RPICUT AS PASIVO_BATCH_TIPO,   
                            
                           
                         CASE    
                          WHEN PASIVO.RPDCT = 'PV' THEN RECEPCION_CLAVE   
                          ELSE PASIVO.RPDOC   
                         END DOC_CLAVE,   
                            
                         CASE   
                          WHEN PASIVO.RPDCT = 'PV' THEN RECEPCION_TIPO   
                          ELSE PASIVO.RPDCT   
                         END DOC_TIPO,   
                            
                         CASE    
                          WHEN PASIVO.RPDCT = 'PV' THEN RECEPCION_COMPANIA   
                          ELSE pasivo.RPKCO   
                         END DOC_COMPANIA   
                           
                      from proddta.f0411 PASIVO    
                      LEFT OUTER JOIN (           
                                          SELECT       
                                            RECEPC.PRDOC AS RECEPCION_CLAVE,         
                                            RECEPC.PRDCT AS RECEPCION_TIPO,   
                                            RECEPC.PRKCO AS RECEPCION_COMPANIA,         
                                            COTEJO.PRDOC AS COTEJO_CLAVE,         
                                            COTEJO.PRDCT AS COTEJO_TIPO,   
                                            COTEJO.PRKCO AS COTEJO_COMPANIA   
                                          FROM proddta.F43121 RECEPC   
                                          LEFT OUTER JOIN proddta.F43121 COTEJO     
                                              ON  COTEJO.PRCO = RECEPC.PRCO   
                                              AND COTEJO.PRMCU = RECEPC.PRMCU   
                                              AND COTEJO.PRDOCO = RECEPC.PRDOCO   
                                              AND COTEJO.PRDCTO = RECEPC.PRDCTO   
                                              AND COTEJO.PRSFXO = RECEPC.PRSFXO   
                                              AND COTEJO.PRKCOO = RECEPC.PRKCOO   
                                              AND COTEJO.PRLNID = RECEPC.PRLNID   
                                              AND COTEJO.PRNLIN = RECEPC.PRNLIN   
                                              AND COTEJO.PRMATC = 2   
                                          WHERE RECEPC.PRMATC = 1     
                                          GROUP BY    
                                          RECEPC.PRDOC,   
                                          RECEPC.PRDCT,   
                                          RECEPC.PRKCO,   
                                          COTEJO.PRDOC,   
                                          COTEJO.PRDCT,   
                                          COTEJO.PRKCO   
                                      )    
                                   ON COTEJO_COMPANIA = pasivo.RPKCO   
                                  AND COTEJO_CLAVE = PASIVO.RPDOC    
                                  AND COTEJO_TIPO = PASIVO.RPDCT   
                                     
                      LEFT OUTER JOIN proddta.F0006 UN ON UN.MCMCU = pasivo.RPMCU    
                         
                      LEFT OUTER JOIN PRODCTL.F0005 PROY_CLASIF ON PROY_CLASIF.DRSY = '00'    
                                                               AND PROY_CLASIF.DRRT = '01'    
                                                               AND TRIM(PROY_CLASIF.DRKY) = trim(UN.MCRP01)                                            
   
   
                      WHERE 1=1   
                        
                      and PASIVO.RPDCTA <> 'PE'   
                      AND PASIVO.RPAG >= 0        
                      GROUP BY                  
                          PASIVO.RPDOC,         
                          PASIVO.RPDCT,         
                          pasivo.RPKCO,         
                          pasivo.RPMCU,         
                          UN.MCDL01,   
                          UN.MCRP01,   
                          PROY_CLASIF.DRDL01,   
                          PROY_CLASIF.DRDL02,   
                          PASIVO.RPPYE,         
                          PASIVO.RPCRCD,        
                          PASIVO.RPCRR,         
                          PASIVO.RPICU,         
                          PASIVO.RPICUT,        
                          RECEPCION_CLAVE,      
                          RECEPCION_TIPO,       
                          RECEPCION_COMPANIA    
                    )    
                 on PASIVO_CLAVE = PAGO_doc_CLAVE   
                and PASIVO_TIPO = PAGO_doc_TIPO   
                and PASIVO_COMPANIA = PAGO_doc_COMPANIA   
                   
    LEFT OUTER JOIN (   
                      SELECT   
                          GLDOC AS AST_DOC_CLAVE,           
                          GLDCT AS AST_DOC_TIPO,      
                          GLKCO AS AST_DOC_COMPANIA,    
                             
                          GLMCU AS AST_UN_CLAVE,   
                          MCDL01 AS AST_UN_DESCRIPCION,   
                          MCRP01 AS AST_UN_PROYECTO,   
                          (PROY_CLASIF.DRDL01 || PROY_CLASIF.DRDL02) as ast_un_proyecto_DESC,   
   
                    
                          GLANI AS AST_CUENTA_NUMERO,   
                          GMDL01 AS AST_CUENTA_DESCRIPCION,   
                          GMR010 as ast_cuenta_clasif,   
                          CUENTA_CLASIF.DRDL01 AS ast_cuenta_clasif_DESC,   
                  
                          sum(GLAA / 100) AS AST_MONTO,   
                          GLBCRC AS AST_MONEDA_BASE,   
                             
                          GLCRR AS AST_TC,   
                          sum(GLACR/100) AS AST_MONTO_EXT,   
                          GLCRCD AS AST_MONEDA_TRASNSACCION,   
                         
                          GLICU AS AST_BATCH_CLAVE,   
                          GLICUT AS AST_BATCH_TIPO,   
                          GLPOST AS AST_ESTADO   
                             
                      from proddta.F0911    
                        LEFT OUTER JOIN proddta.F0901 ON GMAID = GLAID    
                        LEFT OUTER JOIN PRODCTL.F0005 CUENTA_CLASIF ON CUENTA_CLASIF.DRSY = '09'    
                                                                   AND CUENTA_CLASIF.DRRT = '10'    
                                                                   AND TRIM(CUENTA_CLASIF.DRKY) = trim(GMR010)   
                           
                        LEFT OUTER JOIN proddta.F0006 ON MCMCU = GLMCU    
                           
                        LEFT OUTER JOIN PRODCTL.F0005 PROY_CLASIF ON PROY_CLASIF.DRSY = '00'    
                                                             AND PROY_CLASIF.DRRT = '01'    
                                                             AND TRIM(PROY_CLASIF.DRKY) = trim(MCRP01)                                            
   
                      WHERE GLLT = 'AA'           
                      AND GLICUT IN ('V','O')     
                      AND GLDCT <> 'PV'           
                      AND GLDCT <> 'AE'           
                      AND    
                        (CASE   
                          WHEN GLU = 0 AND GLAA < 0 THEN -1   
                          ELSE GLU   
                        END)  >= 0                
   
                      group by      
                          GLDOC,    
                          GLDCT,    
                          GLKCO,    
                          GLMCU,    
                          MCDL01,   
                          MCRP01,   
                          PROY_CLASIF.DRDL01,   
                          PROY_CLASIF.DRDL02,   
                          GLANI,    
                          GMDL01,   
                          GMR010,   
                          CUENTA_CLASIF.DRDL01,   
                          GLBCRC,   
                          GLCRR,    
                          GLCRCD,   
                          GLICU,    
                          GLICUT,   
                          GLPOST    
                             
                    ) ON AST_DOC_CLAVE = DOC_CLAVE   
                     AND AST_DOC_tipo = DOC_TIPO   
                     AND AST_doc_compania = DOC_compania   
       
    LEFT OUTER JOIN (   
                     
                      SELECT   
                      CCCO AS COMP_CODE,   
                      CCNAME AS COMP_DESC,   
                      CCAN8 AS COMP_BOOK_CODE,   
                      ABALPH || ALADD1  AS BOOK_DESC   
                      FROM PRODDTA.F0010   
                      LEFT OUTER JOIN PRODDTA.F0101 ON ABAN8 = CCAN8     
                      left outer join PRODDTA.F0116 on CCAN8 = alan8 AND ALEFTB = 0     
       
                    ) ON COMP_CODE = PAGO_COMPANIA       
                   
    where PAGO_TIPO = 'PK'   
    ORDER BY          
    pago_COMPANIA,     
    PAGO_TIPO,        
    PAGO_NUMERO      
)   
   
WHERE 1=1   

AND PAGO_ANIO = 14   
and AST_UN_PROYECTO = '133' 
 
group by   
 
'EGRESOS' ,   
PASIVO_TIPO ,   
PASIVO_CLAVE ,   
PAGO_MES,   
PAGO_ANIO,   
PAGO_COMPANIA ,   
pago_compania_desc ,   
ast_cuenta_clasif_DESC ,   
PAGO_BENEFICIARIO ,   
PAGO_BENEFICIARIO_DESC ,   
AST_UN_CLAVE ,   
AST_UN_DESCRIPCION ,   
AST_UN_PROYECTO ,   
ast_un_proyecto_DESC ,   
AST_CUENTA_NUMERO,  
AST_CUENTA_DESCRIPCION
;]]>
         </code>
      </snippet>
      <snippet name="Requisiciones y sus cotizaciones" description="">
         <code>
            <![CDATA[

select

REQ_COMPANIA
,REQ_ID
,REQ_TIPO
,REQ_LINEA
,REQ_LAST_STATUS
,REQ_NEXT_STATUS
,REQ_UDM

,COUNT(COT_ID) as COT_CANTIDAD
,COUNT(COT_ASIG_STATUS) as COT_ASIGNADAS
,COUNT(COT_CANCEL_STATUS) as COT_CANCELADAS

FROM (

		SELECT 
		REQ.PDKCOO AS REQ_COMPANIA
		,REQ.PDDOCO AS REQ_ID
		,REQ.PDDCTO AS REQ_TIPO
		,REQ.PDLNID/1000 AS REQ_LINEA
		,REQ.PDLTTR as REQ_LAST_STATUS
		,REQ.PDNXTR AS REQ_NEXT_STATUS
		,REQ.PDUOM as REQ_UDM

    ,COT.PDKCOO as COT_COMPANIA
   
    ,COT.PDDOCO as COT_ID
    ,COT.PDDCTO as COT_TIPO
    ,COT.PDLNID AS COT_LINEA
    
    ,case
      when COT.PDLTTR = 140 and COT.PDNXTR = 160 then 1
      else null
		end as COT_asig_status

    ,case
      when COT.PDLTTR = 980 and COT.PDNXTR = 999 then 1
      else null
		end as COT_CANCEL_STATUS
        
    
    
		FROM PRODDTA.F4311 REQ

		/* Cotizaciones */
   LEFT OUTER JOIN PRODDTA.F4311 COT  
					 ON COT.PDOKCO = REQ.PDKCOO       
					AND TO_NUMBER(REPLACE(COT.PDOORN,' ',0)) =  REQ.PDDOCO 
					AND COT.PDOCTO = REQ.PDDCTO      
					AND COT.PDOGNO = REQ.PDLNID      
					and COT.PDDCTO in ('QS','OQ','QX')       
					--AND COT.PDLTTR <> '980'     

		WHERE 1=1 
		and REQ.PDDCTO in ('SR','OR','XR')  
		--AND SOLICITUD.PDLTTR <> '980' 

	 )
where 1=1 
and REQ_UDM = 'NA'
--and REQ_ID = 682
--and REQ_LINEA = 1

GROUP BY
  REQ_COMPANIA
  ,REQ_ID
  ,REQ_TIPO
  ,REQ_LINEA
  ,REQ_LAST_STATUS
  ,REQ_NEXT_STATUS
  ,REQ_UDM

ORDER BY  
  REQ_COMPANIA 
  ,REQ_TIPO 
  ,REQ_ID 
  ,REQ_LINEA


;

]]>
         </code>
      </snippet>
      <snippet name="VIEW_SCOMPRAS" description="">
         <code>
            <![CDATA[
  CREATE OR REPLACE FORCE EDITIONABLE VIEW "NUVPD"."VIEW_SCOMPRAS" ("REQ_COMPANIA", "REQ_COMPANIA_DESC", "REQ_UN", "REQ_UN_DESC", "REQ_UN_PROYECTO", "REQ_UN_PROYECTO_DESC", "REQ_TIPO", "REQ_TIPO_DESC", "REQ", "REQ_LINEA", "REQ_LINEA_TIPO", "REQ_GENERADOR", "REQ_GENERADOR_DESC", "REQ_FECHA_CREACION", "REQ_FECHA_NECESIDAD", "REQ_ESTADO_LAST", "REQ_ESTADO_LAST_DESC", "REQ_ESTADO_NEXT", "REQ_ITEM_NUMERO", "REQ_ITEM_DESC", "REQ_COMPRADOR", "REQ_COMPRADOR_DESC", "REQ_CANTIDAD_SOLICITADA", "REQ_UDM", "REQ_UDM_DESC", "COT_COMPANIA", "COT_TIPO", "COT", "COT_LINEA", "COT_GENERADOR", "COT_FECHA_CREACION", "COT_ESTADO_LAST", "COT_ESTADO_LAST_DESC", "COT_ESTADO_NEXT", "ORD_COMPANIA", "ORD_TIPO", "ORD_TIPO_DESC", "ORD", "ORD_FECHA_CREACION", "ORD_FECHA_ENTREGA", "ORD_GENERADOR", "ORD_GENERADOR_DESC", "ORD_LINEA", "ORD_PROVEEDOR", "ORD_PROVEEDOR_DESC", "ORD_ESTADO_LAST", "ORD_ESTADO_LAST_DESC", "ORD_ESTADO_NEXT", "ORD_CANTIDAD_SOLIC", "ORD_UDM", "ORD_UDM_DESC", "ORD_CANTIDAD_RECIB", "ORD_CANTIDAD_XRECIB", "ORD_RECEPCION", "ORD_PU_EX", "ORD_TOTAL_EX", "ORD_MONTO_RECIB_EX", "ORD_MONTO_XRECIB_EX", "ORD_MONEDA", "ORD_MONEDA_DESC", "ORD_TASA", "ORD_PU_MX", "ORD_TOTAL_MX", "ORD_MONTO_RECIB_MX", "ORD_MONTO_XRECIB_MX", "ORD_IMPUESTO", "ORD_IMPUESTO_DESC", "ORD_IMPUESTO_FLAG", "ORD_DESCUENTO", "ORD_TERMINO_PAGO", "ORD_TERMINO_PAGO_DESC", "ORD_UPDATED_BY", "ORD_UPDATED_BY_DESC") AS 
  SELECT                
            SOLICITUD.PDKCOO as REQ_COMPANIA
            ,nvl(COMPANIA.CCNAME,'--') as REQ_COMPANIA_DESC
        
            ,TRIM(SOLICITUD.PDMCU) as  REQ_UN
            ,nvl(TRIM(SUCURSAL.MCDL01 || SUCURSAL.MCDL02), '--') as REQ_UN_DESC
            ,NVL(TRIM(SUCURSAL.MCRP01),'--') as REQ_UN_PROYECTO                
            ,NVL(TRIM(PROYECTO.DRDL01),'--') AS REQ_UN_PROYECTO_DESC    
            
            ,SOLICITUD.PDDCTO as REQ_TIPO
            ,nvl(TRIM(TIPO_REQ.DRDL01), '--') as REQ_TIPO_DESC
            ,SOLICITUD.PDDOCO as REQ
            ,SOLICITUD.PDLNID/1000 as REQ_LINEA
            ,TRIM(SOLICITUD.PDLNTY) as REQ_LINEA_TIPO
            
            ,SOLICITUD.PDTORG as REQ_GENERADOR
            ,NVL(TRIM(GENERADOR_REQ.DIR_DESC),'--') as REQ_GENERADOR_DESC
            
            ,case when SOLICITUD.PDTRDJ <> 0 then TO_DATE(1900000 + SOLICITUD.PDTRDJ,'yyyyddd') else TO_DATE('01/01/1000','DD/MM/YYYY') end as REQ_FECHA_CREACION                
            ,case when SOLICITUD.PDDRQJ <> 0 then TO_DATE(1900000 + SOLICITUD.PDDRQJ,'yyyyddd') else to_date('01/01/1000','DD/MM/YYYY') end as REQ_FECHA_NECESIDAD                
            
            ,SOLICITUD.PDLTTR as REQ_ESTADO_LAST
            ,nvl(TRIM(ESTADO_REQ.DRDL01),'--') as REQ_ESTADO_LAST_DESC
            ,SOLICITUD.PDNXTR AS REQ_ESTADO_NEXT
            
            ,NVL(TRIM(SOLICITUD.PDLITM),'--') as REQ_ITEM_NUMERO                
            ,NVL(TRIM(SOLICITUD.PDDSC1 || ' ' || SOLICITUD.PDDSC2),'--') AS REQ_ITEM_DESC            
            ,SOLICITUD.PDANBY as REQ_COMPRADOR                
            ,nvl(TRIM(COMPRADOR.ABALPH),'--') AS REQ_COMPRADOR_DESC                
            ,SOLICITUD.PDUORG/10000 AS REQ_CANTIDAD_SOLICITADA
            ,SOLICITUD.PDUOM as REQ_UDM
            ,nvl(trim(UDM_REQ.DRDL01),'--') AS REQ_UDM_DESC

            ,NVL(COTIZACION.PDKCOO,'--') AS COT_COMPANIA
            ,NVL(COTIZACION.PDDCTO,'--') as COT_TIPO
            ,NVL(COTIZACION.PDDOCO,0) as COT
            ,NVL(COTIZACION.PDLNID/1000, 0) as COT_LINEA
            ,NVL(COTIZACION.PDTORG,'-') as COT_GENERADOR
            ,case when COTIZACION.PDTRDJ <> 0 then TO_DATE(1900000 + COTIZACION.PDTRDJ,'yyyyddd') else to_date('01/01/1000','DD/MM/YYYY') end as COT_FECHA_CREACION
            ,NVL(COTIZACION.PDLTTR,'--') as COT_ESTADO_LAST
            ,NVL(TRIM(ESTADO_COT.DRDL01),'-') as COT_ESTADO_LAST_DESC
            ,NVL(COTIZACION.PDNXTR,'--') AS COT_ESTADO_NEXT
                            
            ,NVL(ORDEN.PDKCOO,'--') AS ORD_COMPANIA
            ,NVL(ORDEN.PDDCTO, '--') as ORD_TIPO
            ,NVL(TRIM(TIPO_ORDEN.DRDL01),'--') as ORD_TIPO_DESC
            ,nvl(ORDEN.PDDOCO, 0) as ORD
            ,case when ORDEN.PDTRDJ <> 0 then TO_DATE(1900000 + ORDEN.PDTRDJ,'yyyyddd') else TO_DATE('01/01/1000','DD/MM/YYYY') end as ORD_FECHA_CREACION                
            ,case when ORDEN.PDOPDJ <> 0 then TO_DATE(1900000 + ORDEN.PDOPDJ,'yyyyddd') else TO_DATE('01/01/1000','DD/MM/YYYY') end as ORD_FECHA_ENTREGA                
            ,NVL(ORDEN.PDTORG,'--') as ORD_GENERADOR
            ,NVL(TRIM(GENERADOR_ORDEN.DIR_DESC),'--') as ORD_GENERADOR_DESC
            ,NVL(ORDEN.PDLNID/1000,0) as ORD_LINEA                
            ,NVL(ORDEN.PDAN8,0)  as ORD_PROVEEDOR                
            ,NVL(TRIM(PROVEEDOR.ABALPH),'--') as ORD_PROVEEDOR_DESC                 
            ,NVL(ORDEN.PDLTTR,'--') as ORD_ESTADO_LAST
            ,NVL(TRIM(ESTADO_OC.DRDL01),'--') as ORD_ESTADO_LAST_DESC    
            ,nvl(ORDEN.PDNXTR,'--') AS ORD_ESTADO_NEXT
            
            ,NVL(ORDEN.PDUORG/10000,0) as ORD_CANTIDAD_SOLIC      
            ,NVL(ORDEN.PDUOM,'--') as ORD_UDM                
            ,nvl(trim(UDM_ORDEN.DRDL01),'--') AS ORD_UDM_DESC
        
            ,NVL(ORDEN.PDUREC/10000,0) as ORD_CANTIDAD_RECIB
            ,nvl(ORDEN.PDUOPN/10000,0) AS ORD_CANTIDAD_XRECIB
        
             ,case                 
              WHEN (ORDEN.PDUOPN = 0 AND ORDEN.PDUREC > 0) THEN 'COMPLETA'
              WHEN (ORDEN.PDUREC = 0 AND ORDEN.PDUOPN > 0) THEN 'PENDIENTE'                  
              WHEN (ORDEN.PDUREC > 0 AND ORDEN.PDUOPN > 0) THEN 'PARCIAL'                  
              when (ORDEN.PDUREC = 0 and ORDEN.PDUOPN = 0) then 'CANCELADA'
              WHEN (ORDEN.PDUREC is NULL and ORDEN.PDUOPN is NULL) THEN 'PENDIENTE'
            END AS ORD_RECEPCION                         
            
            ,NVL(ORDEN.PDFRRC/10000,0) as ORD_PU_EX
            ,nvl(ORDEN.PDFEA/100,0) AS ORD_TOTAL_EX
        
            ,NVL(ORDEN.PDFREC/100,0) as ORD_MONTO_RECIB_EX                   
            ,nvl(ORDEN.PDFAP/100,0) AS ORD_MONTO_XRECIB_EX       
            
            ,NVL(ORDEN.PDCRCD,'--') as ORD_MONEDA
            ,NVL(MONEDA.CVDL01,'--') as ORD_MONEDA_DESC   
            
            ,nvl(ORDEN.PDCRR,0) AS ORD_TASA
        
            ,NVL(ORDEN.PDPRRC/10000,0) as ORD_PU_MX
            ,nvl(ORDEN.PDAEXP/100,0) as ORD_TOTAL_MX
        
            ,NVL(ORDEN.PDAREC/100,0) as ORD_MONTO_RECIB_MX                   
            ,nvl(ORDEN.PDAOPN/100,0) AS ORD_MONTO_XRECIB_MX      
            
            ,NVL(TRIM(ORDEN.PDTXA1),'--') as ORD_IMPUESTO
            ,NVL(TRIM(IMPUESTO.TATAXA),'--') as ORD_IMPUESTO_DESC
            ,nvl(ORDEN.PDTX,'--') AS ORD_IMPUESTO_FLAG
        
            ,nvl(ORDEN.PDDSPR,0) AS ord_DESCUENTO                    
                                
            ,NVL(ORDEN.PDPTC,'--') as ORD_TERMINO_PAGO
            ,nvl(TRIM(CONDICION.PNPTD),'--') AS ord_TERMINO_PAGO_DESC
                            
            ,NVL(TRIM(ORDEN.PDUSER),'--') as ORD_UPDATED_BY
            ,NVL(TRIM(UPDATER.DIR_DESC),'--') as ORD_UPDATED_BY_DESC
            
          FROM PRODDTA.F4311 SOLICITUD
          
          /*   COTIZACIONES                
          --------------------------------------------------------------------------------*/                   
          left outer join PRODDTA.F4311 COTIZACION on 1=1
                      AND COTIZACION.PDOKCO = SOLICITUD.PDKCOO
                      and TO_NUMBER(NVL(TRIM(COTIZACION.PDOORN),'0')) = SOLICITUD.PDDOCO
                      AND COTIZACION.PDOCTO = SOLICITUD.PDDCTO
                      and COTIZACION.PDOGNO = SOLICITUD.PDLNID
                      and COTIZACION.PDDCTO in ('QS','OQ','QX')
                      AND COTIZACION.PDLTTR NOT IN ('980')
                                      
           /*  ORDENES DE COMPRA                 
          --------------------------------------------------------------------------------*/                                                  
          LEFT OUTER JOIN PRODDTA.F4311 ORDEN ON 1=1
                      and TO_NUMBER(NVL(trim(ORDEN.PDOORN),'0')) = COTIZACION.PDDOCO         
                      AND ORDEN.PDOCTO = COTIZACION.PDDCTO
                      AND ORDEN.PDOKCO = COTIZACION.PDKCOO                 
                      and ORDEN.PDOGNO = COTIZACION.PDLNID
                      and ORDEN.PDDCTO in ('OS','OP','OX')                 
                      and ORDEN.PDLTTR not in ('980')
                          
          /*  COMPANIA                    
          --------------------------------------------------------------------------------*/
          left outer join PRODDTA.F0010 COMPANIA
                       ON COMPANIA.CCCO = SOLICITUD.PDKCOO
                          
          /*  UNIDADES DE NEGOCIO                 
          --------------------------------------------------------------------------------*/                 
          LEFT OUTER JOIN PRODDTA.F0006 SUCURSAL                
                       ON SUCURSAL.MCMCU = SOLICITUD.PDMCU                
                                       
          /*  PROYECTOS                 
          --------------------------------------------------------------------------------*/                                      
          LEFT OUTER JOIN PRODCTL.F0005 PROYECTO                
                       ON PROYECTO.DRSY = '00'                    
                      AND PROYECTO.DRRT = '01'
                      AND TRIM(PROYECTO.DRKY) = TRIM(SUCURSAL.MCRP01)                   
                                     
          /*   GENERADORES SOLICITUD
          --------------------------------------------------------------------------------*/   
          left outer join NUVPD.VIEW_USUARIOS GENERADOR_REQ on 1=1
                      AND GENERADOR_REQ.CLAVE = trim(SOLICITUD.PDTORG) 

                       
          /*   GENERADORES ORDENES               
          --------------------------------------------------------------------------------*/ 
          left outer join NUVPD.VIEW_USUARIOS GENERADOR_ORDEN on 1=1
                      AND GENERADOR_ORDEN.CLAVE = trim(ORDEN.PDTORG)           
                        
                          
          /*   ACTUALIZADORES ORDENES                 
          --------------------------------------------------------------------------------*/    
          left outer join NUVPD.VIEW_USUARIOS UPDATER on 1=1
                      AND UPDATER.CLAVE = trim(ORDEN.PDUSER)            
                                             
          /*   COMPRADORES                
          --------------------------------------------------------------------------------*/
          LEFT OUTER JOIN PRODDTA.F0101 COMPRADOR                
                       ON COMPRADOR.ABAN8 = SOLICITUD.PDANBY                
                          
          /*   PROVEEDORES                   
          --------------------------------------------------------------------------------*/
          LEFT OUTER JOIN PRODDTA.F0101 PROVEEDOR                  
                       ON PROVEEDOR.ABAN8 = ORDEN.PDAN8                        
            
          /*   UNIDADES DE MEDIDAS REQUISICION               
          --------------------------------------------------------------------------------*/
          LEFT OUTER JOIN PRODCTL.F0005D UDM_REQ
                       ON UDM_REQ.DRSY = '00'                
                      and UDM_REQ.DRRT = 'UM'                
                      AND TRIM(UDM_REQ.DRKY) = SOLICITUD.PDUOM
                                      
          /*   UNIDADES DE MEDIDAS ORDEN
          --------------------------------------------------------------------------------*/
          LEFT OUTER JOIN PRODCTL.F0005D UDM_ORDEN
                       ON UDM_ORDEN.DRSY = '00'                
                      and UDM_ORDEN.DRRT = 'UM'                
                      AND TRIM(UDM_ORDEN.DRKY) = ORDEN.PDUOM
                                      
           /*  IMPUESTOS                 
          --------------------------------------------------------------------------------*/
          LEFT OUTER JOIN PRODDTA.F4008 IMPUESTO                
                       on IMPUESTO.TATXA1 = ORDEN.PDTXA1
        
          /*   TIPOS DE REQUISICONES                      
          --------------------------------------------------------------------------------*/
          LEFT OUTER JOIN PRODCTL.F0005D TIPO_REQ                   
                       ON TIPO_REQ.DRSY = '00'                   
                      and TIPO_REQ.DRRT = 'DT'                   
                      AND TRIM(TIPO_REQ.DRKY) = SOLICITUD.PDDCTO
                      
          /*   TIPOS DE ORDENES                      
          --------------------------------------------------------------------------------*/
          left outer join PRODCTL.F0005D TIPO_ORDEN                   
                       ON TIPO_ORDEN.DRSY = '00'                   
                      and TIPO_ORDEN.DRRT = 'DT'                   
                      AND TRIM(TIPO_ORDEN.DRKY) = ORDEN.PDDCTO
        
          /*   ESTADOS DE LA REQ                      
          --------------------------------------------------------------------------------*/
          LEFT OUTER JOIN PRODCTL.F0005D ESTADO_REQ                  
                       ON ESTADO_REQ.DRSY = '40'                   
                      and ESTADO_REQ.DRRT = 'AT'                   
                      AND TRIM(ESTADO_REQ.DRKY) = SOLICITUD.PDLTTR
                      
          /*   ESTADOS DE LA COTIZACION                      
          --------------------------------------------------------------------------------*/
          LEFT OUTER JOIN PRODCTL.F0005D ESTADO_COT
                       on ESTADO_COT.DRSY = '40'                   
                      and ESTADO_COT.DRRT = 'AT'                   
                      AND TRIM(ESTADO_COT.DRKY) = COTIZACION.PDLTTR
                      
          /*   ESTADOS DE LA ORDEN                      
          --------------------------------------------------------------------------------*/
          LEFT OUTER JOIN PRODCTL.F0005D ESTADO_OC                
                       on ESTADO_OC.DRSY = '40'                   
                      and ESTADO_OC.DRRT = 'AT'                   
                      AND TRIM(ESTADO_OC.DRKY) = ORDEN.PDLTTR
        
          /*  MONEDAS
          --------------------------------------------------------------------------------*/ 
          left outer join PRODDTA.F0013 MONEDA
                       ON MONEDA.CVCRCD = ORDEN.PDCRCD              
                       
          /*   CONDICIONES DE PAGO                    
          --------------------------------------------------------------------------------*/                     
          left outer join PRODDTA.F0014 CONDICION                   
                       ON CONDICION.PNPTC = ORDEN.PDPTC                  
         
          where 1=1                
          and SOLICITUD.PDDCTO in ('SR','OR','XR') 
          and SOLICITUD.PDLTTR not in ('980') 
          
          order by
            SOLICITUD.PDKCOO --/ REQ_COMPANIA
            ,SOLICITUD.PDDCTO --/ REQ_TIPO
            ,SOLICITUD.PDDOCO --/ REQ
            ,SOLICITUD.PDLNID/1000 --/ REQ_LINEA
;
]]>
         </code>
      </snippet>
      <snippet name="GASTOS" description="">
         <code>
            <![CDATA[        
          SELECT
            GASTOS.beneficiario
            ,PROVS.ABALPH AS beneficiario_DESC
            ,GASTOS.proveedor
            ,GASTOS.UN
            ,UNS.MCDL01 AS UN_DESC
            ,UNS.MCRP01 AS PROYECTO
            ,TRIM(PROYS.DRDL01 || PROYS.DRDL02) as PROYECTO_DESC
            ,GASTOS.anio
            ,GASTOS.periodo
            ,GASTOS.DOC_COMPANIA
            ,GASTOS.DOC_TIPO
            ,GASTOS.DOC
            --,GASTOS.MONTO_PAGO 
            --,GASTOS.PASIVO_COMPANIA
            --,GASTOS.PASIVO_TIPO
            --,GASTOS.PASIVO
            ,GASTOS.MONTO_PASIVO
            ,GASTOS.RECEP_COMPANIA
            ,GASTOS.RECEP_TIPO
            ,GASTOS.RECEP_DOC
            ,GASTOS.CUENTA_ID
            ,GASTOS.CUENTA_NUMERO
            ,GASTOS.CUENTA_CLASIF
            ,GASTOS.CUENTA_DESC
            ,GASTOS.MONTO_DISTRUB
            ,CASE 
              WHEN periodo = 1 THEN GASTOS.MONTO_DISTRUB
              ELSE 0
            END ENERO
            ,CASE 
              WHEN periodo = 2 THEN GASTOS.MONTO_DISTRUB
              ELSE 0
            END FEBRERO
            ,CASE 
              WHEN periodo = 3 THEN GASTOS.MONTO_DISTRUB
              ELSE 0
            END MARZO
            ,CASE 
              WHEN periodo = 4 THEN GASTOS.MONTO_DISTRUB
              ELSE 0
            END ABRIL
            ,CASE 
              WHEN periodo = 5 THEN GASTOS.MONTO_DISTRUB
              ELSE 0
            END MAYO
            ,CASE 
              WHEN periodo = 6 THEN GASTOS.MONTO_DISTRUB
              ELSE 0
            END JUNIO
            ,CASE 
              WHEN periodo = 7 THEN GASTOS.MONTO_DISTRUB
              ELSE 0
            END JULIO
            ,CASE 
              WHEN periodo = 8 THEN GASTOS.MONTO_DISTRUB
              ELSE 0
            END AGOSTO
            ,CASE 
              WHEN periodo = 9 THEN GASTOS.MONTO_DISTRUB
              ELSE 0
            END SEPTIEMBRE
            ,CASE 
              WHEN periodo = 10 THEN GASTOS.MONTO_DISTRUB
              ELSE 0
            END OCTUBRE
            ,CASE 
              WHEN periodo = 11 THEN GASTOS.MONTO_DISTRUB
              ELSE 0
            END NOVIEMBRE
            ,CASE 
              WHEN periodo = 12 THEN GASTOS.MONTO_DISTRUB
              ELSE 0
            END DICIEMBRE            

          FROM (
                  SELECT
                  PAGOS.pago_tipo
                  ,PAGOS.pago_numero
                  ,PAGOS.PAGO_LINEA
                  ,PAGOS.beneficiario
                  ,PAGOS.proveedor
                  ,PAGOS.anio
                  ,PAGOS.periodo
                  
                  ,PAGOS.DOC_COMPANIA
                  ,PAGOS.DOC_TIPO
                  ,PAGOS.DOC
                  ,PAGOS.MONTO_PAGO 
                  
                  ,PAGOS.PASIVO_COMPANIA
                  ,PAGOS.PASIVO_TIPO
                  ,PAGOS.PASIVO
                  ,PAGOS.MONTO_PASIVO
                  
                  ,PAS.RECEP_COMPANIA
                  ,PAS.RECEP_TIPO
                  ,PAS.RECEP_DOC
                  
                  ,CASE 
                    WHEN CONTA.CUENTA_ID IS NULL THEN PAS.UN 
                    ELSE CONTA.CUENTA_UN
                  END UN
                  
                  ,CONTA.CUENTA_ID
                  ,CONTA.CUENTA_NUMERO
                  
                  ,CASE 
                    WHEN CONTA.CUENTA_ID IS NULL     AND CONTA.CUENTA_CLASIF IS NULL AND PAGOS.PASIVO_TIPO = 'PE' THEN CSCONVERT('NOMINA OUTSOURCING','NCHAR_CS' )
                    WHEN CONTA.CUENTA_ID IS NULL     AND CONTA.CUENTA_CLASIF IS NULL AND PAGOS.PASIVO_TIPO <> 'PE' THEN CSCONVERT('ANTICIPOS NO APLICADOS','NCHAR_CS' )
                    WHEN CONTA.CUENTA_ID IS NOT NULL AND CONTA.CUENTA_CLASIF IS NULL THEN CSCONVERT('SIN CLASIFICACION','NCHAR_CS' )
                    ELSE CONTA.CUENTA_CLASIF
                  END CUENTA_CLASIF        
                  
                  ,CASE
                    WHEN CONTA.CUENTA_ID IS NULL AND PAGOS.PASIVO_TIPO = 'PE' THEN CSCONVERT('PRESTAMOS','NCHAR_CS' )
                    WHEN CONTA.CUENTA_ID IS NULL AND PAGOS.PASIVO_TIPO = 'P5' THEN CSCONVERT('ANTICIPO A EMPLEADO','NCHAR_CS' )
                    WHEN CONTA.CUENTA_ID IS NULL AND PAGOS.PASIVO_TIPO = 'DG' THEN CSCONVERT('DEPOSITOS EN GARANTIA','NCHAR_CS' )
                    WHEN CONTA.CUENTA_ID IS NULL AND PAGOS.PASIVO_TIPO = 'PQ' THEN CSCONVERT('ANTICIPOS DE COMPRAS','NCHAR_CS' )
                    WHEN CONTA.CUENTA_ID IS NULL AND PAGOS.PASIVO_TIPO NOT IN ('PE','P5','DG','PQ') THEN CSCONVERT('OTROS','NCHAR_CS' )
                    ELSE CONTA.CUENTA_DESC
                  END CUENTA_DESC
                  
                  ,CASE 
                    WHEN CONTA.CUENTA_ID IS NULL THEN  PAGOS.MONTO_PASIVO
                    ELSE ROUND(PAGOS.MONTO_PASIVO * (CONTA.PORCENTAJE / 100),2) 
                  END MONTO_DISTRUB
                  
                  FROM (
                          select
                          PAG.pago_tipo
                          ,PAG.pago_numero
                          ,PAG.PAGO_LINEA
                          ,PAG.beneficiario
                          ,PAG.proveedor
                          ,PAG.anio
                          ,PAG.periodo
                          
                          ,PAG.DOC_COMPANIA
                          ,PAG.DOC_TIPO
                          ,PAG.DOC
                          ,PAG.monto_mx AS MONTO_PAGO
                          
                          ,CASE 
                            WHEN ANT.ANTICIPO_COMPANIA IS NULL THEN DOC_COMPANIA
                            ELSE ANT.FACTURA_COMPANIA
                          END PASIVO_COMPANIA
                          
                          ,CASE 
                            WHEN ANT.ANTICIPO_TIPO IS NULL THEN DOC_TIPO
                            ELSE ANT.FACTURA_TIPO
                          END PASIVO_TIPO
                          
                          ,CASE 
                            WHEN ANT.ANTICIPO IS NULL THEN DOC
                            ELSE ANT.FACTURA
                          END PASIVO
                          
                          ,CASE 
                            WHEN ANT.ANTICIPO IS NULL THEN PAG.monto_mx
                            ELSE ANT.MONTO_APLICADO
                          END MONTO_PASIVO
                          
                          from nuvpd.viewpagos PAG
                          
                          left outer join (
                                              select
                                              FACTURA_COMPANIA
                                              ,FACTURA_TIPO
                                              ,FACTURA
                                              ,ANTICIPO_COMPANIA
                                              ,ANTICIPO_TIPO
                                              ,ANTICIPO
                                              ,SUM(MONTO_APLICADO) AS MONTO_APLICADO
                                              from nuvpd.viewfacturaant
                                              GROUP BY
                                              FACTURA_COMPANIA
                                              ,FACTURA_TIPO
                                              ,FACTURA
                                              ,ANTICIPO_COMPANIA
                                              ,ANTICIPO_TIPO
                                              ,ANTICIPO
                          
                                          ) ANT
                                       on ANT.ANTICIPO_COMPANIA = PAG.DOC_COMPANIA
                                      AND ANT.ANTICIPO_TIPO = PAG.DOC_TIPO
                                      AND ANT.ANTICIPO = PAG.DOC
                                      AND PAG.DOC_TIPO NOT IN ('PE')
                       ) PAGOS
                       
                  LEFT OUTER JOIN NUVPD.VIEWFACTURARECEP PAS
                               ON PAS.DOC_COMPANIA = PAGOS.PASIVO_COMPANIA
                              AND PAS.DOC_TIPO = PAGOS.PASIVO_TIPO
                              AND PAS.DOC = PAGOS.PASIVO
                  
                  LEFT OUTER JOIN NUVPD.VIEWASIENTOSCONT CONTA
                               ON CONTA.AST_COMPANIA = PAS.RECEP_COMPANIA
                              AND CONTA.AST_TIPO = PAS.RECEP_TIPO
                              AND CONTA.AST_DOC = PAS.RECEP_DOC
          
               ) GASTOS
               
          LEFT OUTER JOIN proddta.F0006 UNS
                       ON UNS.MCMCU = GASTOS.UN
          
          LEFT OUTER JOIN PRODCTL.F0005 PROYS
                       ON PROYS.DRSY = '00'    
                      AND PROYS.DRRT = '01'    
                      AND TRIM(PROYS.DRKY) = trim(UNS.MCRP01)
                      
          LEFT OUTER JOIN PRODDTA.F0101 PROVS
                       ON PROVS.ABAN8 = GASTOS.beneficiario    
          
          
          ;]]>
         </code>
      </snippet>
      <snippet name="Actualizar Vistas" description="">
         <code>
            <![CDATA[exec DBMS_MVIEW.refresh('NUVPD.VEGRESOSXCLASIF'); 
exec DBMS_MVIEW.refresh('NUVPD.VEGRESOSXCUENTA'); 
exec DBMS_MVIEW.refresh('NUVPD.VEGRESOSXDOC'); 

exec DBMS_MVIEW.refresh('NUVPD.VINGRESOSXCLASIF'); 
exec DBMS_MVIEW.refresh('NUVPD.VINGRESOSXCUENTA'); 
exec DBMS_MVIEW.refresh('NUVPD.VINGRESOSXDOC'); 

]]>
         </code>
      </snippet>
      <snippet name="Tiempo entre Requisicion y Recepcion" description="">
         <code>
            <![CDATA[select
COMPRAS.*

,RECEIVES.DOC_TIPO
,RECEIVES.DOC
,RECEIVES.FECHA_RECEIVE
,RECEIVES.FECHA_LM
,RECEIVES.Fecha_receive - COMPRAS.REQ_FECHA_CREACION as DIAS
from NUVPD.VIEW_SCOMPRAS COMPRAS
LEFT OUTER JOIN (
                    select
                    RECEPCIONES.OC_COMPANIA
                    ,RECEPCIONES.OC_TIPO
                    ,RECEPCIONES.OC
                    ,RECEPCIONES.OC_LINEA
                    ,RECEPCIONES.DOC_TIPO
                    ,RECEPCIONES.DOC
                    ,RECEPCIONES.FECHA_RECEIVE
                    ,RECEPCIONES.FECHA_LM
                    from NUVPD.VIEW_RECEPCIONES RECEPCIONES
                    INNER JOIN (
                                  select
                                  OC_COMPANIA
                                  ,OC_TIPO
                                  ,OC
                                  ,OC_LINEA
                                  ,max(DOC) AS DOC
                                  from NUVPD.VIEW_RECEPCIONES
                                  where 1=1
                                  and TRANSACT = 1
                                  group by
                                  OC_COMPANIA
                                  ,OC_TIPO
                                  ,OC
                                  ,OC_LINEA
                              ) ULTIMOS
                          on ULTIMOS.OC_COMPANIA = RECEPCIONES.OC_COMPANIA
                         and ULTIMOS.OC_TIPO = RECEPCIONES.OC_TIPO
                         and ULTIMOS.OC = RECEPCIONES.OC
                         and ULTIMOS.OC_LINEA = RECEPCIONES.OC_LINEA
                         and ULTIMOS.DOC = RECEPCIONES.DOC
                    where 1=1
                    and RECEPCIONES.TRANSACT = 1
                ) RECEIVES
                
             on RECEIVES.OC_COMPANIA = COMPRAS.REQ_COMPANIA
            and RECEIVES.OC_TIPO = COMPRAS.OC_TIPO
            and RECEIVES.OC = COMPRAS.OC
            and RECEIVES.OC_LINEA = COMPRAS.OC_LINEA

where 1=1
and COMPRAS.OC_RECEPCION = 'Recepcion COMPLETA'
and COMPRAS.REQ_FECHA_CREACION >= '01/04/2015'
and COMPRAS.REQ_FECHA_CREACION <= '30/06/2015'

order by
  COMPRAS.REQ_COMPANIA
  ,COMPRAS.REQ_TIPO
  ,COMPRAS.REQ
  ,COMPRAS.REQ_LINEA
  ,COMPRAS.OC_TIPO
  ,COMPRAS.OC
  ,COMPRAS.OC_LINEA
;
]]>
         </code>
      </snippet>
      <snippet name="Vista - Configuracion de ITEMS de Stock" description="">
         <code>
            <![CDATA[select
ALM.*
,RECEP_OP_4310.CUENTA_NUMERO || ' (' || RECEP_OP_4310.CUENTA_DESCRIPCION || ')' as "RECEPCION - OP (4310)"
,RECEP_OP_4320.CUENTA_NUMERO || ' (' || RECEP_OP_4320.CUENTA_DESCRIPCION || ')' as "RECEPCION - OP (4320)"

,RECEP_OJ_4310.CUENTA_NUMERO || ' (' || RECEP_OJ_4310.CUENTA_DESCRIPCION || ')' as "RECEPCION - OJ (4310)"
,RECEP_OJ_4320.CUENTA_NUMERO || ' (' || RECEP_OJ_4320.CUENTA_DESCRIPCION || ')' as "RECEPCION - OJ (4320)"

,TRANSF_IT_4122.CUENTA_NUMERO || ' (' || TRANSF_IT_4122.CUENTA_DESCRIPCION || ')' as "TRANSFERENCIA - IT (4122)"
,TRANSF_IT_4124.CUENTA_NUMERO || ' (' || TRANSF_IT_4124.CUENTA_DESCRIPCION || ')' as "TRANSFERENCIA - IT (4124)"

,SAL_II_4122.CUENTA_NUMERO || ' (' || SAL_II_4122.CUENTA_DESCRIPCION || ')' as "SALIDA NORMAL - II (4122)"
,SAL_II_4124.CUENTA_NUMERO || ' (' || SAL_II_4124.CUENTA_DESCRIPCION || ')' as "SALIDA NORMAL - II (4124)"

,DESPOT_IM_4122.CUENTA_NUMERO || ' (' || DESPOT_IM_4122.CUENTA_DESCRIPCION || ')' as "DESPACHO OT - IM (4122)"
,DESPOT_IM_4124.CUENTA_NUMERO || ' (' || DESPOT_IM_4124.CUENTA_DESCRIPCION || ')' as "DESPACHO OT - IM (4124)"

,COSTO_01.COSTO as "COSTO COMPRA (01)"
,COSTO_02.COSTO as "COSTO PROMEDIO (02)"
,STOCK.EXISTENCIAS 

from NUVPD.VIEW_ITEM_ALMACEN ALM

/* ICAS DE RECEPCION de TIPO DE OP
----------------------------------------------------------------------------*/
left outer join NUVPD.VIEW_ICASM RECEP_OP_4310 on 1=1
            and RECEP_OP_4310.ICA = 4310
            and RECEP_OP_4310.DOC_TIPO = 'OP' 
            and RECEP_OP_4310.COMPANIA = ALM.COMPANIA
            and RECEP_OP_4310.GL_CODIGO = ALM.GL_CODIGO              
            and RECEP_OP_4310.CUENTA_UN = ALM.UN
            AND RECEP_OP_4310.CUENTA_UN_TIPO  NOT IN ('-','*','MD')
                     
left outer join NUVPD.VIEW_ICASM RECEP_OP_4320 on 1=1
            and RECEP_OP_4320.ICA = 4320 
            and RECEP_OP_4320.DOC_TIPO = RECEP_OP_4310.DOC_TIPO            
            and RECEP_OP_4320.COMPANIA = ALM.COMPANIA
            and RECEP_OP_4320.GL_CODIGO = ALM.GL_CODIGO
            --and ICA_RECEP1_4320.CUENTA_UN
            AND RECEP_OP_4320.CUENTA_UN_TIPO  NOT IN ('-','*','MD')


/* ICAS DE RECEPCION de TIPO DE OJ
----------------------------------------------------------------------------*/
left outer join NUVPD.VIEW_ICASM RECEP_OJ_4310 on 1=1
            and RECEP_OJ_4310.ICA = 4310
            and RECEP_OJ_4310.DOC_TIPO = 'OJ' 
            and RECEP_OJ_4310.COMPANIA = ALM.COMPANIA
            and RECEP_OJ_4310.GL_CODIGO = ALM.GL_CODIGO              
            and RECEP_OJ_4310.CUENTA_UN = ALM.UN
            AND RECEP_OJ_4310.CUENTA_UN_TIPO  NOT IN ('-','*','MD')
                     
left outer join NUVPD.VIEW_ICASM RECEP_OJ_4320 on 1=1
            and RECEP_OJ_4320.ICA = 4320 
            and RECEP_OJ_4320.DOC_TIPO = RECEP_OJ_4310.DOC_TIPO            
            and RECEP_OJ_4320.COMPANIA = ALM.COMPANIA
            and RECEP_OJ_4320.GL_CODIGO = ALM.GL_CODIGO
            --and ICA_RECEP1_4320.CUENTA_UN
            AND RECEP_OJ_4320.CUENTA_UN_TIPO  NOT IN ('-','*','MD')


/* ICAS DE TRANFERENCIA (DOCUMENTO IT) 
----------------------------------------------------------------------------*/
left outer join NUVPD.VIEW_ICASM TRANSF_IT_4122 on 1=1
            and TRANSF_IT_4122.ICA = 4122
            and TRANSF_IT_4122.DOC_TIPO = 'IT' 
            and TRANSF_IT_4122.COMPANIA = ALM.COMPANIA
            and TRANSF_IT_4122.GL_CODIGO = ALM.GL_CODIGO              
            and TRANSF_IT_4122.CUENTA_UN = ALM.UN
            AND TRANSF_IT_4122.CUENTA_UN_TIPO  NOT IN ('-','*','MD')

left outer join NUVPD.VIEW_ICASM TRANSF_IT_4124 on 1=1
            and TRANSF_IT_4124.ICA = 4124 
            and TRANSF_IT_4124.DOC_TIPO = TRANSF_IT_4122.DOC_TIPO
            and TRANSF_IT_4124.COMPANIA = ALM.COMPANIA
            and TRANSF_IT_4124.GL_CODIGO = ALM.GL_CODIGO 
            and TRANSF_IT_4124.CUENTA_UN = ALM.UN
            AND TRANSF_IT_4124.CUENTA_UN_TIPO  NOT IN ('-','*','MD')
            
/* ICAS DE SALIDAS NORMALES (DOCUMENTO II) 
----------------------------------------------------------------------------*/
left outer join NUVPD.VIEW_ICASM SAL_II_4122 on 1=1
            and SAL_II_4122.ICA = 4122
            and SAL_II_4122.DOC_TIPO = 'II' 
            and SAL_II_4122.COMPANIA = ALM.COMPANIA
            and SAL_II_4122.GL_CODIGO = ALM.GL_CODIGO              
            and SAL_II_4122.CUENTA_UN = ALM.UN
            AND SAL_II_4122.CUENTA_UN_TIPO  NOT IN ('-','*','MD')

left outer join NUVPD.VIEW_ICASM SAL_II_4124 on 1=1
            and SAL_II_4124.ICA = 4124 
            and SAL_II_4124.DOC_TIPO = SAL_II_4122.DOC_TIPO
            and SAL_II_4124.COMPANIA = ALM.COMPANIA
            and SAL_II_4124.GL_CODIGO = ALM.GL_CODIGO 
            and SAL_II_4124.CUENTA_UN = ALM.UN
            AND SAL_II_4124.CUENTA_UN_TIPO  NOT IN ('-','*','MD')            


/* ICAS DE DESPACHO A OT (DOCUMENTO IM) 
----------------------------------------------------------------------------*/
left outer join NUVPD.VIEW_ICASM DESPOT_IM_4122 on 1=1
            and DESPOT_IM_4122.ICA = 4122
            and DESPOT_IM_4122.DOC_TIPO = 'IM' 
            and DESPOT_IM_4122.COMPANIA = ALM.COMPANIA
            and DESPOT_IM_4122.GL_CODIGO = ALM.GL_CODIGO              
            and DESPOT_IM_4122.CUENTA_UN = ALM.UN
            AND DESPOT_IM_4122.CUENTA_UN_TIPO  NOT IN ('-','*','MD')

left outer join NUVPD.VIEW_ICASM DESPOT_IM_4124 on 1=1
            and DESPOT_IM_4124.ICA = 4124 
            and DESPOT_IM_4124.DOC_TIPO = DESPOT_IM_4122.DOC_TIPO
            and DESPOT_IM_4124.COMPANIA = ALM.COMPANIA
            and DESPOT_IM_4124.GL_CODIGO = ALM.GL_CODIGO 
            and DESPOT_IM_4124.CUENTA_UN = ALM.UN
            AND DESPOT_IM_4124.CUENTA_UN_TIPO  NOT IN ('-','*','MD')
            

/* COSTO DE COMPRA (01) 
----------------------------------------------------------------------------*/
left outer join NUVPD.VIEW_ALM_ITEM_COSTO COSTO_01 on 1=1
            and COSTO_01.UN = ALM.UN
            and COSTO_01.ITEM_CLAVE = ALM.ITEM_CLAVE
            AND COSTO_01.METODO = 01
            
/* COSTO PROMEDIO (02) 
----------------------------------------------------------------------------*/
left outer join NUVPD.VIEW_ALM_ITEM_COSTO COSTO_02 on 1=1
            and COSTO_02.UN = ALM.UN
            and COSTO_02.ITEM_CLAVE = ALM.ITEM_CLAVE
            AND COSTO_02.METODO = 02   
            
            
/* EXISTENCIAS
----------------------------------------------------------------------------*/            
LEFT OUTER JOIN (
                    select
                    LIITM  as ITEM_CLAVE
                    ,trim(LIMCU)  as UN
                    ,SUM(LIPQOH)/10000 as EXISTENCIAS
                    ,SUM(LIPREQ)/10000 as OC_PENDIENTE
                    ,sum(LIQOWO)/10000 as OT_COMPROMETIDO
                    from PRODDTA.F41021  
                    where 1=1
                    group by
                    LIITM
                    ,LIMCU
                ) STOCK on 1=1
           and STOCK.UN = ALM.UN
           AND STOCK.ITEM_CLAVE = ALM.ITEM_CLAVE
            
where 1=1
and ALM.UN = 'F211133'
--AND ALM.ITEM_NUMERO = '22-18-003-000'
--AND ALM.ITEM_DESCRIPCION LIKE '%TRAPO%'
order by 
  ALM.UN
  ,ALM.ITEM_CLAVE
;
]]>
         </code>
      </snippet>
      <snippet name="Vista - Configuraciones de ITEM de Servicios" description="">
         <code>
            <![CDATA[select
ITEM.*
,RECEP_OS_4315.CUENTA_NUMERO || ' (' || RECEP_OS_4315.CUENTA_DESCRIPCION || ')' as "RECEPCION - OS (4315)"
,RECEP_OS_4320.CUENTA_NUMERO || ' (' || RECEP_OS_4320.CUENTA_DESCRIPCION || ')' as "RECEPCION - OS (4320)"
from NUVPD.VIEW_ITEMS ITEM

/* ICAS DE RECEPCION de TIPO DE OS
----------------------------------------------------------------------------*/
left outer join NUVPD.VIEW_ICASM RECEP_OS_4315 on 1=1
            and RECEP_OS_4315.ICA = 4315
            and RECEP_OS_4315.DOC_TIPO = 'OS' 
            and RECEP_OS_4315.COMPANIA = '00011'
            and RECEP_OS_4315.CUENTA_UN = 'F211133'      
            and RECEP_OS_4315.GL_CODIGO = ITEM.GL_CODIGO               
            AND RECEP_OS_4315.CUENTA_UN_TIPO  NOT IN ('-','*','MD')
                     
left outer join NUVPD.VIEW_ICASM RECEP_OS_4320 on 1=1
            and RECEP_OS_4320.ICA = 4320    
            and RECEP_OS_4320.DOC_TIPO = RECEP_OS_4315.DOC_TIPO            
            and RECEP_OS_4320.COMPANIA = RECEP_OS_4315.COMPANIA
            --and ICA_RECEP1_4320.CUENTA_UN                        
            and RECEP_OS_4320.GL_CODIGO = ITEM.GL_CODIGO                     
            AND RECEP_OS_4320.CUENTA_UN_TIPO  NOT IN ('-','*','MD')

where 1=1
and ITEM.LINEA_TIPO in ('J','N','AF','SE')
--AND ITEM.GL_CODIGO = 'ACAF'
;]]>
         </code>
      </snippet>
   </group>
   <group category="0 - SISTEMA" language="PLSQL">
      <snippet name="Fechas" description="">
         <code>
            <![CDATA[select
TO_NUMBER(TO_CHAR(TO_DATE(20141018,'YYYYMMDD'),'YYYYDDD'))-1900000 
,to_date(to_char(114291+1900000),'YYYYDDD')
FROM DUAL;]]>
         </code>
      </snippet>
      <snippet name="Anexos" description="">
         <code>
            <![CDATA[SELECT *
FROM PRODDTA.F0413
LEFT OUTER JOIN (SELECT * FROM PRODDTA.F00165 WHERE  GDMOSEQN = 1 AND GDGTMOTYPE = 5 AND GDOBNM = 'GT0413M') 
 ON TO_NUMBER(REPLACE(GDTXKY,'|', '0')) = RMPYID
WHERE 1=1 
AND RMDOCM LIKE '%12691%'
;]]>
         </code>
      </snippet>
      <snippet name="Address Book - F0101" description="">
         <code>
            <![CDATA[select 
ADDRESS.ABAN8 as CLAVE
,NVL (ADDRESS.ABALPH, '-') AS DESCRIPCION
,ADDRESS.ABAT1 as TIPO
,NVL (TRIM (TIPO.DRDL01), '-') AS TIPO_DESC

FROM PRODDTA.F0101 ADDRESS

left outer join PRODCTL.F0005 TIPO on 1=1 
            and TIPO.DRSY = '01' 
            and TIPO.DRRT = 'ST'
            and TRIM (TIPO.DRKY) = TRIM (ADDRESS.ABAT1)
            
where 1 = 1
;]]>
         </code>
      </snippet>
      <snippet name="VIEW_USUARIOS" description="">
         <code>
            <![CDATA[/* ------------------------------------------------------------------------------ *\
    Nombre: VIEW_USUARIOS
    
    Descripcion: Vista que muestra los usuarios e informacion de su direccion
                 asociada
\* ------------------------------------------------------------------------------ */

/* ------------------------------------------------------------------------------ *\
    DEPENDENCIAS:
    
      - SY910.F0092
      - PRODDTA.F0101
      - PRODCTL.F0005D
\* ------------------------------------------------------------------------------ */

select
*
from (
    --CREATE OR REPLACE FORCE EDITIONABLE VIEW "NUVPD"."VIEW_USUARIOS" ("CLAVE", "DIR", "DIR_DESC", "DIR_TIPO", "DIR_TIPO_DESC") AS 
    select
        USUARIO.ULUSER as CLAVE
        ,USUARIO.ULAN8 as DIR
        ,NVL(TRIM(DIRECCION.ABALPH), '--') as DIR_DESC
        ,NVL(TRIM(DIRECCION.ABAT1), '--')  as DIR_TIPO
        ,NVL(TRIM(TIPO_DIRECCION.DRDL01),'--') as DIR_TIPO_DESC
    from SY910.F0092 usuario
            
     /*   DIRECCIONES
    --------------------------------------------------------------------------------*/
    left outer join PRODDTA.F0101 DIRECCION
                 on DIRECCION.ABAN8 = usuario.ULAN8
    
    /*   TIPOS DE DIRECCIONES
    --------------------------------------------------------------------------------*/
    left outer join PRODCTL.F0005D TIPO_DIRECCION ON 1=1
                AND TIPO_DIRECCION.DRSY = '01'
                and TIPO_DIRECCION.DRRT = 'ST'
                and TRIM(TIPO_DIRECCION.DRKY) = TRIM(DIRECCION.ABAT1)
    
    where 1=1
) where 1=1
AND CLAVE = 'ACRUZZ'
;


]]>
         </code>
      </snippet>
      <snippet name="Permisos de usuarios APPS" description="">
         <code>
            <![CDATA[select
*
from (
		select
		per_usuario as 'usuario',
		usr_nombre + ' ' + usr_apellido_pat + ' ' + usr_apellido_mat as 'usuario_nombre',
		men_id as 'menu',
		men_desc as 'menu_desc'
		from SYS_PER_MENUS
		left outer join SYS_USR_USERS on 1=1
		 		    and usr_username = per_usuario
		left outer join SYS_CAT_MENUS on 1=1
					and men_id = per_menu
		
) as TEMP
where 1=1
and usuario like '%JOACH%'

order by usuario
;]]>
         </code>
      </snippet>
   </group>
   <group category="0 - NOMINA" language="PLSQL">
      <snippet name="Empleados" description="">
         <code>
            <![CDATA[
SELECT  
* 
FROM  
(  
    SELECT  
        EMPLEADOS.PERSON_ID AS PERS_CLAVE,  
        EMPLEADOS.PERSON_TYPE_ID AS PERS_TIPO_CODIGO,  
        TIPOS.USER_PERSON_TYPE AS PERS_TIPO_DESC, 
        EMPLEADOS.EMPLOYEE_NUMBER AS PERS_EMPLEADO_NUMERO, 
        EMPLEADOS.TITLE AS PERS_TITULO, 
        EMPLEADOS.FIRST_NAME AS PERS_PRIMER_NOMBRE, 
        EMPLEADOS.MIDDLE_NAMES AS PERS_SEGUNDO_NOMBRE,  
        EMPLEADOS.LAST_NAME AS PERS_APELLIDO_PATERNO,  
        EMPLEADOS.PER_INFORMATION1 AS PERS_APELLIDO_MATERNO, 
        EMPLEADOS.FULL_NAME AS PERS_NOMBRE_COMPLETO, 
        EMPLEADOS.SEX AS PERS_GENERO_CLAVE,  
        CASE  
        WHEN EMPLEADOS.SEX = 'M' THEN 'Masculino'  
        WHEN EMPLEADOS.SEX = 'F' THEN 'Femenino'  
        WHEN EMPLEADOS.SEX IS NULL THEN ' '  
        ELSE 'Sexo desconocido'  
        END PERS_GENERO_DESC, 
        EMPLEADOS.NATIONAL_IDENTIFIER AS PERS_CURP, 
       EMPLEADOS.NATIONALITY AS PERS_NACIONALIDAD_CLAVE, 
        EMPLEADOS.PER_INFORMATION2 AS PERS_RFC, 
        EMPLEADOS.PER_INFORMATION3 AS PERS_NUMERO_IMSS, 
        EMPLEADOS.PER_INFORMATION5 AS PERS_IFE,  
        EMPLEADOS.DATE_OF_BIRTH AS PERS_FECHA_NACIMIENTO,  
        EMPLEADOS.TOWN_OF_BIRTH AS PERS_CIUDAD_NACIMIENTO,  
        EMPLEADOS.REGION_OF_BIRTH AS PERS_ESTADO_NACIMIENTO,  
        EMPLEADOS.COUNTRY_OF_BIRTH AS PERS_PAIS_NACIMIENTO_CLAVE,  
        EMPLEADOS.EFFECTIVE_START_DATE AS PERS_FECHA_EFECTIVE_DESDE,  
        EMPLEADOS.EFFECTIVE_END_DATE  AS PERS_FECHA_EFECTIVE_HASTA,  
        EMPLEADOS.EMAIL_ADDRESS AS PERS_EMAIL, 
        EMPLEADOS.MARITAL_STATUS AS PERS_ESTADO_CIVIL, 
        EMPLEADOS.EMAIL_ADDRESS AS PERS_CORREO_ELECTRONICO, 
         CASE 
       WHEN EMPLEADOS.MARITAL_STATUS = 'S' THEN 'Solter@' 
       WHEN EMPLEADOS.MARITAL_STATUS = 'M' THEN 'Cazad@' 
       WHEN EMPLEADOS.MARITAL_STATUS IS NULL THEN ' '  
       ELSE '--'  
       END PERS_ESTADO_CIVIL_DESC, 
       EMPLEADOS.START_DATE as PERS_FECHA_CONTRATACION 
  FROM PER_ALL_PEOPLE_F EMPLEADOS 
  INNER JOIN ( 
                  SELECT 
                  PERSON_ID, 
                   MAX(OBJECT_VERSION_NUMBER) AS VER, 
                   MAX(EFFECTIVE_END_DATE) AS EFEC_DATE 
                   FROM PER_ALL_PEOPLE_F 
                   GROUP BY PERSON_ID 
              ) ACT ON ACT.PERSON_ID = EMPLEADOS.PERSON_ID AND ACT.VER = EMPLEADOS.OBJECT_VERSION_NUMBER AND ACT.EFEC_DATE = EMPLEADOS.EFFECTIVE_END_DATE  
    LEFT OUTER JOIN PER_PERSON_TYPES TIPOS ON TIPOS.PERSON_TYPE_ID = EMPLEADOS.PERSON_TYPE_ID  
) EMP 
left outer join ( 
                   SELECT 
                   ASIGNACIONES.ASSIGNMENT_ID AS ASIG_CLAVE, 
                   ASIGNACIONES.ASSIGNMENT_NUMBER AS ASIG_EMPLEADO_NUMERO, 
                   ASIGNACIONES.PERSON_ID AS ASIG_PERSONA_CLAVE, 
                   ASIGNACIONES.EFFECTIVE_START_DATE AS ASIG_FECHA_INICIO, 
                   ASIGNACIONES.EFFECTIVE_END_DATE as ASIG_FECHA_FIN, 
                   ASIGNACIONES.ORGANIZATION_ID AS ASIG_ORGANIZACION_CLAVE, 
                   ORGANIZACIONES.NAME AS ASIG_ORGANIZACION_DESC, 
                   ASIGNACIONES.JOB_ID AS ASIG_TRABAJO_CLAVE, 
                   TRABAJOS.NAME AS ASIG_TRABAJO_DESC, 
                   ASIGNACIONES.GRADE_ID AS ASIG_GRADO_CLAVE, 
                   GRADOS.NAME AS ASIG_GRADO_DESC, 
                   ASIGNACIONES.LOCATION_ID AS ASIG_UBICACION_CLAVE, 
                   UBICACIONES.location_code AS ASIG_UBICACION_DESC, 
                    ASIGNACIONES.PEOPLE_GROUP_ID AS ASIG_GRUPO_CLAVE, 
                    GRUPOS.GROUP_NAME AS ASIG_GRUPO_DESC, 
                    ASIGNACIONES.POSITION_ID AS ASIG_PUESTO_CLAVE, 
                    PUESTOS.NAME AS ASIG_PUESTO_DESC, 
                    ASIGNACIONES.PAYROLL_ID AS ASIG_NOMINA_CLAVE, 
                    NOMINA.PAYROLL_NAME AS ASIG_NOMINA_DESC, 
                    ASIGNACIONES.ASSIGNMENT_STATUS_TYPE_ID AS ASIG_ESTADO_CLAVE, 
                   ESTADOS.USER_STATUS AS ASIG_ESTADO_DESC, 
                   ASIGNACIONES.EMPLOYMENT_CATEGORY AS ASIG_CATEGORIA_CODIGO, 
                   ASIGNACIONES.PAY_BASIS_ID AS ASIG_SALARIO_BASE_CLAVE, 
                   PAYB.name as ASIG_SALARIO_BASE_DESC, 
                   ASIGNACIONES.SOFT_CODING_KEYFLEX_ID AS INFORMACION_ESTATUTARIA_CLAVE, 
                    ESTATUTARIA.CONCATENATED_SEGMENTS AS INFORMACION_ESTATUTARIA_DESC, 
                   ASIGNACIONES.OBJECT_VERSION_NUMBER AS ASIG_VERSION 
                   FROM PER_ALL_ASSIGNMENTS_F  ASIGNACIONES 
                   INNER JOIN ( 
                                 SELECT 
                                 ASSIGNMENT_NUMBER, 
                                 MAX(OBJECT_VERSION_NUMBER) AS VER, 
                                 max(EFFECTIVE_END_DATE) as asig_date 
                                 FROM PER_ALL_ASSIGNMENTS_F 
                                 where TO_CHAR(EFFECTIVE_END_DATE,'YYYY-MM-DD' ) = '4712-12-31' 
                                 GROUP BY ASSIGNMENT_NUMBER 
                              ) ACT ON ACT.ASSIGNMENT_NUMBER = ASIGNACIONES.ASSIGNMENT_NUMBER  AND ACT.VER = ASIGNACIONES.OBJECT_VERSION_NUMBER and ACT.ASIG_DATE = ASIGNACIONES.EFFECTIVE_END_DATE 
                   LEFT OUTER JOIN PER_GRADES GRADOS ON GRADOS.GRADE_ID = ASIGNACIONES.GRADE_ID 
                   LEFT OUTER JOIN HR_ALL_ORGANIZATION_UNITS ORGANIZACIONES ON ORGANIZACIONES.ORGANIZATION_ID = ASIGNACIONES.ORGANIZATION_ID 
                   LEFT OUTER JOIN HR_SOFT_CODING_KEYFLEX ESTATUTARIA ON ESTATUTARIA.SOFT_CODING_KEYFLEX_ID = ASIGNACIONES.SOFT_CODING_KEYFLEX_ID 
                   LEFT OUTER JOIN PER_PAY_BASES PAYB ON PAYB.PAY_BASIS_ID = ASIGNACIONES.PAY_BASIS_ID 
                   LEFT OUTER JOIN PER_JOBS TRABAJOS ON TRABAJOS.JOB_ID = ASIGNACIONES.JOB_ID 
                   LEFT OUTER JOIN PER_ASSIGNMENT_STATUS_TYPES ESTADOS ON ESTADOS.ASSIGNMENT_STATUS_TYPE_ID = ASIGNACIONES.ASSIGNMENT_STATUS_TYPE_ID 
                   LEFT OUTER JOIN HR_LOCATIONS_ALL UBICACIONES ON UBICACIONES.LOCATION_ID =  ASIGNACIONES.LOCATION_ID  
                   LEFT OUTER JOIN PAY_PEOPLE_GROUPS GRUPOS ON GRUPOS.PEOPLE_GROUP_ID = ASIGNACIONES.PEOPLE_GROUP_ID  
                    LEFT OUTER JOIN PER_ALL_POSITIONS PUESTOS ON PUESTOS.POSITION_ID = ASIGNACIONES.POSITION_ID  
                    LEFT OUTER JOIN PAY_ALL_PAYROLLS_F NOMINA ON NOMINA.PAYROLL_ID = ASIGNACIONES.PAYROLL_ID  
                ) ASG ON ASG.ASIG_PERSONA_CLAVE =  EMP.PERS_CLAVE  
LEFT OUTER JOIN ( 
                  SELECT 
                  GRUPOS.PEOPLE_GROUP_ID AS GRUP_CLAVE, 
                  GRUPOS.GROUP_NAME AS GRUP_NOMBRE, 
                  GRUPOS.ENABLED_FLAG AS GRUP_BANDERA_HABILITADO, 
                  GRUPOS.SEGMENT4 AS GRUP_NOMINA_JDE, 
                  GRUPOS.SEGMENT6 AS GRUP_COMPANIA_JDE, 
                  GRUPOS.SEGMENT2 AS GRUP_PROYECTO_JDE, 
                  PROY.LOOKUP_CODE AS GRUP_PROYECTO_CODE_JDE, 
                  GRUPOS.SEGMENT3 AS GRUP_FASE_JDE, 
                  FASE.LOOKUP_CODE AS GRUP_FASE_CODE_JDE, 
                  grupos.segment7 as GRUP_PUESTO_JDE, 
                  IMMS.LOOKUP_CODE AS GRUP_PUESTO_CODE_JDE 
                 FROM PAY_PEOPLE_GROUPS GRUPOS 
                  LEFT OUTER JOIN FND_LOOKUP_VALUES PROY ON PROY.MEANING = GRUPOS.SEGMENT2 
                                                        AND PROY.lookup_type = 'NVL_PAY_PROYECTO' 
                                                        AND PROY.LANGUAGE = 'ESA' 
                  LEFT OUTER JOIN FND_LOOKUP_VALUES FASE ON FASE.MEANING = GRUPOS.SEGMENT3 
                                                        AND FASE.lookup_type = 'NVL_PAY_FASE_V2' 
                                                        AND FASE.LANGUAGE = 'ESA' 
                  LEFT OUTER JOIN FND_LOOKUP_VALUES IMMS ON IMMS.MEANING = GRUPOS.segment7 
                                                        AND IMMS.lookup_type = 'NVL_PUESTO_IMSS' 
                                                        AND IMMS.LANGUAGE = 'ESA' 
                ) GRP ON GRP.GRUP_CLAVE = ASG.ASIG_GRUPO_CLAVE 
left outer join ( 
                    select 
                   PPPM.ASSIGNMENT_ID AS METODO_ASIGNACION_ID, 
                   POPN.ORG_PAYMENT_METHOD_NAME AS METODO_NOMBRE, 
                   PTI.PAYMENT_TYPE_NAME AS METODO_TIPO, 
                   PPPM.PRIORITY AS METODO_PRIORIDAD, 
                   PPPM.EFFECTIVE_START_DATE AS METODO_FECHA_EFEC_DESDE, 
                   PPPM.EFFECTIVE_END_DATE AS METODO_FECHA_EFEC_HASTA, 
                   PPPM.AMOUNT AS METODO_IMPORTE_SALDO, 
                   PPPM.PERCENTAGE AS METODO_PORCENTAJE, 
                   PPPM.ATTRIBUTE1 AS METODO_PAGO, 
                   PEA.SEGMENT2 AS METODO_SUCURSAL, 
                   PEA.SEGMENT3 AS METODO_CUENTA, 
                   PEA.SEGMENT4 AS METODO_TIPO_CUENTA_ID, 
                   PEA.SEGMENT5 AS METODO_CLABE 
                   from PAY_PERSONAL_PAYMENT_METHODS_F PPPM 
                   LEFT OUTER JOIN PAY_EXTERNAL_ACCOUNTS PEA 
                                ON PEA.EXTERNAL_ACCOUNT_ID = PPPM.EXTERNAL_ACCOUNT_ID 
                   LEFT OUTER JOIN PAY_ORG_PAYMENT_METHODS_F POPN 
                                ON POPN.ORG_PAYMENT_METHOD_ID = PPPM.ORG_PAYMENT_METHOD_ID 
                   LEFT OUTER JOIN PAY_PAYMENT_TYPES PTI 
                                ON PTI.PAYMENT_TYPE_ID = POPN.PAYMENT_TYPE_ID  
                   WHERE TO_CHAR(PPPM.EFFECTIVE_END_DATE,'YYYY-MM-DD' ) =  '4712-12-31' 
               ) MTP ON MTP.METODO_ASIGNACION_ID = asg.ASIG_CLAVE 
where 1=1 
and PERS_EMPLEADO_NUMERO = 200436
--andNVL(PERS_EMPLEADO_NUMERO,'VACIO') LIKE :parNumeroEmpleado 
--AND NVL(PERS_PRIMER_NOMBRE,'VACIO') LIKE :parPrimerNombre 
--AND NVL(PERS_SEGUNDO_NOMBRE,'VACIO') LIKE :parSegundoNombre 
--AND NVL(PERS_APELLIDO_PATERNO,'VACIO')  LIKE :parApellidoPaterno 
--AND NVL(PERS_APELLIDO_MATERNO,'VACIO')  LIKE :parApellidoMaterno 
--AND NVL(PERS_GENERO_CLAVE,'VACIO') LIKE :parGeneroClave 
--AND NVL(GRUP_COMPANIA_JDE,'VACIO') LIKE :parCompania 
--AND NVL(ASIG_PUESTO_CLAVE,'0') LIKE :parPuestoClave 
--AND NVL(ASIG_ORGANIZACION_CLAVE,'0') LIKE :parDepartamentoClave 
--and nvl(PERS_TIPO_CODIGO,'0' ) like :parTipo 
--AND PERS_FECHA_CONTRATACION between :parContratacionInicio AND :parContratacionFi
;
]]>
         </code>
      </snippet>
      <snippet name="Grupos" description="">
         <code>
            <![CDATA[SELECT 
ENABLED_FLAG
, SUMMARY_FLAG
, NVL(TO_CHAR(START_DATE_ACTIVE, 'J'), 0)
,NVL(TO_CHAR(END_DATE_ACTIVE, 'J'), 0)
,SEGMENT4
, SEGMENT6
, SEGMENT1
, SEGMENT2
, SEGMENT3
, SEGMENT7
, SEGMENT5
, PEOPLE_GROUP_ID 
FROM PAY_PEOPLE_GROUPS 
WHERE 1=1 
AND ID_FLEX_NUM = 50356 
AND SEGMENT4 = 'OPERATIVA' 
AND SEGMENT6 = 'SISTEMAS INTEGRALES DE COMPRESION' 
AND SEGMENT1 IS NULL 
AND SEGMENT2 = 'COMPRESION 2 ATG' 
AND SEGMENT3 = 'F201134' 
AND SEGMENT7 = 'EMPLEADO OFICIAL' 
AND SEGMENT5 IS NULL 
;]]>
         </code>
      </snippet>
      <snippet name="Sueldos" description="">
         <code>
            <![CDATA[select
papf.employee_number 
,papf.full_name 
,TIPOS.USER_PERSON_TYPE AS PERS_TIPO_DESC 
,paaf.person_id
,pj.NAME job 
,haou.NAME ORGANIZATION 
,ppp.proposed_salary_n salario_imss
,ppp.attribute2 salario_real
FROM per_all_people_f papf 

LEFT OUTER JOIN PER_PERSON_TYPES TIPOS 
             ON TIPOS.PERSON_TYPE_ID = papf.PERSON_TYPE_ID  

left outer join per_all_assignments_f paaf 
             on paaf.person_id = papf.person_id 
            AND SYSDATE BETWEEN paaf.effective_start_date AND paaf.effective_end_date 

left outer join per_jobs pj 
             on pj.job_id  = paaf.job_id 
          
left outer join hr_all_organization_units haou           
             on haou.organization_id = paaf.organization_id 

left outer join per_all_positions pap 
             on pap.position_id = paaf.position_id 

left outer join per_position_definitions ppd 
             on ppd.position_definition_id = pap.position_definition_id 
             
left outer join (
                    select
                    ppp.assignment_id
                    ,ppp.pay_proposal_id
                    ,ppp.proposed_salary_n
                    ,ppp.attribute2
                    FROM per_pay_proposals ppp
                    inner join (
                                  SELECT 
                                  assignment_id
                                  ,MAX (pay_proposal_id) pay_object
                                  FROM per_pay_proposals 
                                  group by
                                  assignment_id
                               ) valid
                            on valid.assignment_id = ppp.assignment_id
                           and valid.pay_object = ppp.pay_proposal_id
                ) ppp 
             on ppp.assignment_id = paaf.assignment_id
              
WHERE 1 = 1 
AND SYSDATE BETWEEN papf.effective_start_date AND papf.effective_end_date 
AND papf.current_employee_flag = 'Y' 
AND papf.employee_number IS NOT NULL 

order by employee_number
;


]]>
         </code>
      </snippet>
      <snippet name="Organizaciones" description="">
         <code>
            <![CDATA[select
*
from HR_ALL_ORGANIZATION_UNITS
where 1=1
and organization_id = 130
;


select
*
from FND_USER
where 1=1
and user_id = 1240
;
]]>
         </code>
      </snippet>
   </group>
   <group category="0 - TESORERIA" language="PLSQL">
      <snippet name="F0414 - Accounts Payable - Matching Document Detail" description="">
         <code>
            <![CDATA[SELECT
*
FROM (
        SELECT 
         LPAG.RNPYID as id
        ,LPAG.RNRC5 as linea
        ,LPAG.RNDCTM as TIPO
        
        ,LPAG.RNKCO  AS DOC_COMPANIA
        ,LPAG.RNDCT AS DOC_TIPO
        ,LPAG.RNDOC AS DOC
        ,LPAG.RNSFX AS DOC_LINEA
        ,LPAG.RNSFXE AS DOC_AJUSTE        
        ,LPAG.RNAN8 AS BENEFICIARIO  --<- Determinar si en realidad es el beneficiario o el proveedor
        
        ,(LPAG.RNPFAP/100) * -1 AS MONTO_EX
        ,LPAG.RNCRCD AS MONEDA
        ,LPAG.RNCRR AS TASA
        ,(LPAG.RNPAAP/100) * -1 AS MONTO_MX

        ,LPAG.RNRMK AS DESCRPCION  
        
        ,LPAG.RNPOST AS POST
        ,LPAG.RNGLC AS GL
        ,LPAG.RNPN AS PERIODO
        ,LPAG.RNFY AS ANIO
     
        ,LPAG.RNCO AS COMPANIA
        ,LPAG.RNMCU AS UN
        ,LPAG.RNPO AS OC

        ,LPAG.RNUSER AS UPDATER
        ,CASE WHEN LPAG.RNUPMJ <> 0 THEN TO_DATE(1900000 + LPAG.RNUPMJ,'YYYYDDD') END AS FECHA_UPDATE
        FROM proddta.F0414 LPAG
     )
WHERE 1=1
AND ID = 29991

;


/* Notas
------------------------------------------------------------------


* Campos no importantes
------------------------------------------------------------------
--,LPAG.RNHCRR AS HISTORICAL_CONVERSION_RATE
--,LPAG.RNPID AS PROGRAMA

--,LPAG.RNADSC AS DESCUENTO_DISPONIBLE_MX
--,LPAG.RNADSA AS DESCUENTO_TOMADO_MX
--,LPAG.RNCDS AS DESCUENTO_DISPONIBLE_EX
--,LPAG.RNCDSA AS DESCUENTO_TOMADO_MX
--,LPAG.RNCRRM AS MONEDA_MODO
--,LPAG.RNALT6
--,LPAG.RNCTRY SIGLO
--,LPAG.RNFNLP --<- VACIO

--,LPAG.RNUPMT AS TIME_UPDATE
--,LPAG.RNJOBN AS WORKSTATION
--,LPAG.RNBCRC AS MONEDA_BASE
--,LPAG.RNLRFL --<- Vacio
--,LPAG.RNGFL7 --<- Vacio
--,LPAG.RNGFL8 --<- Vacio
--,LPAG.RNGAM3 --<- Solo 0s
--,LPAG.RNGAM4 --<- Solo 0s
--,LPAG.RNGEN6 --<- Vacio
--,LPAG.RNGEN7 --<- Vacio
--,LPAG.RNDRCO --<- Vacio
--,LPAG.RNNETTCID --<- Solo 0s
--,LPAG.RNNETDOC --<- Solo 0s
--,LPAG.RNNETRC5 --<- Solo 0s
--,LPAG.RNCNTRTID --<- Solo 0s
--,LPAG.RNCNTRTCD --<- Vacio
--,LPAG.RNWVID --<- Solo 0s
--,LPAG.RNBLSCD2 --<- Vacio 
--,LPAG.RNHARPER --<- Vacio
--,LPAG.RNHARSFX --<- Vacio

*/]]>
         </code>
      </snippet>
      <snippet name="Pagos" description="">
         <code>
            <![CDATA[
select
*
from (
        select 
         CPAG.RMPYID as id
        ,CPAG.RMDCTM as TIPO --<- PN = Pagos manuales (como anticipos), PK = pagos automatico (no existen anticipos en este grupo)
        ,CPAG.RMDOCM as NUMERO
        ,LPAG.RNRC5 as LINEA
        ,LPAG.RNDCTM as LINEA_TIPO
        ,CPAG.RMPYE as BENEFICIARIO --<- INDICA EL BENEFICIADO POR EL PAGO (A QUIEN SE DEPOSITO)
        ,LPAG.RNAN8 AS PROVEEDOR    --<- INDICA EL PROVEEDOR DE LA FACTURA 

        ,case when CPAG.RMDMTJ <> 0 then TO_DATE(1900000 + CPAG.RMDMTJ,'YYYYDDD') end as FECHA_PAGO
        ,case when CPAG.RMVLDT <> 0 then TO_DATE(1900000 + CPAG.RMVLDT,'YYYYDDD') end as FECHA_LIQUIDACION
        ,case when CPAG.RMVDGJ <> 0 then TO_DATE(1900000 + CPAG.RMVDGJ,'YYYYDDD') end as FECHA_ANULACION 

        ,LPAG.RNKCO  AS DOC_COMPANIA
        ,LPAG.RNDCT AS DOC_TIPO
        ,LPAG.RNDOC AS DOC
        ,LPAG.RNSFX AS DOC_LINEA
        ,LPAG.RNSFXE AS DOC_AJUSTE        
        
        ,(CPAG.RMPAAP/100 * -1) as MONTO_TOTAL   --<- Este monto ya contempla el IVA
        ,CPAG.RMCRCD as MONEDA

        ,(LPAG.RNPFAP/100) * -1 AS MONTO_LINEA_EX
        ,LPAG.RNCRCD AS MONEDA_LINEA
        ,LPAG.RNCRR AS TASA
        ,(LPAG.RNPAAP/100) * -1 AS MONTO_LINEA_MX
        
        ,LPAG.RNRMK AS DESCRPCION  

        ,CPAG.RMPYIN as INTRUMENTO
        ,CPAG.RMGLBA as CUENTA_BANCO
        ,CPAG.RMCBNK as CUENTA_BANCO_NUM
        
        ,LPAG.RNPOST AS POST
        ,LPAG.RNGLC AS GL
        ,LPAG.RNPN AS PERIODO
        ,LPAG.RNFY AS ANIO        
        
        ,CPAG.RMICU  as BATCH
        ,CPAG.RMICUT as BATCH_TIPO
        ,case when CPAG.RMDICJ <> 0 then TO_DATE(1900000 + CPAG.RMUPMJ,'YYYYDDD') end as BATCH_FECHA
        ,CPAG.RMISTP as POSTEO        
        
        ,LPAG.RNCO AS COMPANIA
        ,LPAG.RNMCU AS UN
        ,LPAG.RNPO AS OC        
        
        ,CPAG.RMTORG as ORIGINADOR_CABE
        ,CPAG.RMUSER as UPDATER_CABE
        ,case when CPAG.RMUPMJ <> 0 then TO_DATE(1900000 + CPAG.RMUPMJ,'YYYYDDD') end as FECHA_UPDATE_CABE
        
        ,LPAG.RNUSER AS UPDATER_LIN
        ,CASE WHEN LPAG.RNUPMJ <> 0 THEN TO_DATE(1900000 + LPAG.RNUPMJ,'YYYYDDD') END AS FECHA_UPDATE_LIN
        
        from PRODDTA.F0413 CPAG
        left outer join PRODDTA.F0414 LPAG
                     on LPAG.RNPYID = CPAG.RMPYID
    )
where 1=1
AND TIPO = 'PK'
--AND LINEA_TIPO = 'PG'
and NUMERO = 15

and BENEFICIARIO = 70041
--AND DOC= 1350
--AND DOC_LINEA = 002
--AND DOC_TIPO = 'PS'
;


/* Notas
-------------------------------------------------------

-- Tipos de Pago --

  PN - Pago Manual (comunmente aplicaciones de anticipos)
  PK - Pago automatico (pagos de facturas o anticipos, pero nunca aplicacion de anticipos)

-- Tipos de linea de pago --

  PN - Linea de Pago Manual (comunmente aplicaciones de anticipos)
  PK - Linea de Pago automatico (pagos de facturas o anticipos)
  PG - Linea de Perdidas o ganancias cambiarias (aparecen en pagos con tasa de cambio distinta entre factura y pago)
  PO - Indica linea anulaciÃ³n del pago

-- Tipo vs Tipo Linea --

PN - PO  -> Pago manual anulado, aplicacion de anticipo anulado
PN - PG  -> Pago manual con perdida/ganacia cambiaria
PK - PO  -> Pago automatico anulado
PK - PG  -> Pago automatico con ganancia o perdida cambiaria
PN - PN  -> Pago Manual
PK - PK  -> Pago automatico

-- Aplicacion de anticipos --

Cuando se pagan anticipos se tienen las lineas de las documentos de facturas (monto positivo ) 
y la linea del anticipo Aplicado (monto en negativo). Ambas de tipo PN
          
-- AnulaciÃ³n de aplicacion de anticipos --

Cuando se anula una aplicaciÃ³n de anticipo, se crean nuevas lineas en el pago, estas lineas representan
los movimientos contrarios de la aplicacion, por lo que abra una linea por cada linea de documento pero 
con monto con signo contrario y con tipo de linea PO. Adicionalmente la fecha de modificacion sera especificada

-- Perdida o ganacia cambiaria

Cuando existe diferencias en el tipo de cambio entre la factura y el pago de esta. El sistema agrega
una linea de tipo PG con la diferencia de esta.



*/
]]>
         </code>
      </snippet>
      <snippet name="Anticipos vs Facturas" description="">
         <code>
            <![CDATA[SELECT
*
FROM (
        
        SELECT
        CPAG.RMPYID as PAGO_ID
        ,CPAG.RMDOCM as PAGO_NUMERO
        ,LPAG.RNRC5 as PAGO_LINEA
        ,CPAG.RMPYE as BENEFICIARIO 
        ,LPAG.RNAN8 AS PROVEEDOR    
        ,case when CPAG.RMDMTJ <> 0 then TO_DATE(1900000 + CPAG.RMDMTJ,'YYYYDDD') end as FECHA_PAGO      
        ,LPAG.RNKCO  AS FACTURA_COMPANIA
        ,LPAG.RNDCT AS FACTURA_TIPO
        ,LPAG.RNDOC AS FACTURA
        ,(LPAG.RNPAAP/100) * -1 AS FACTURA_MONTO
        ,ANTICIPOS.ANTICIPO_COMPANIA
        ,ANTICIPOS.ANTICIPO_TIPO
        ,ANTICIPOS.ANTICIPO
        ,ANTICIPOS.ANTICIPO_MONTO
        ,CASE 
          WHEN  ((LPAG.RNPAAP/100) * -1) > ANTICIPOS.ANTICIPO_MONTO THEN ANTICIPOS.ANTICIPO_MONTO
          WHEN  ((LPAG.RNPAAP/100) * -1) < ANTICIPOS.ANTICIPO_MONTO THEN ((LPAG.RNPAAP/100)* -1)
          ELSE  ANTICIPOS.ANTICIPO_MONTO
        END AS MONTO_APLICADO
          
        from PRODDTA.F0413 CPAG
        left outer join PRODDTA.F0414 LPAG
                     on LPAG.RNPYID = CPAG.RMPYID
        left outer join (
                          SELECT
                            CPAG.RMPYID as PAGO_ID
                            ,CPAG.RMDOCM as PAGO_NUMERO
                            ,LPAG.RNRC5 as PAGO_LINEA
                            ,CPAG.RMPYE as BENEFICIARIO 
                            ,LPAG.RNKCO  AS ANTICIPO_COMPANIA
                            ,LPAG.RNDCT AS ANTICIPO_TIPO
                            ,LPAG.RNDOC AS ANTICIPO
                            ,(LPAG.RNPAAP/100) AS ANTICIPO_MONTO
                            from PRODDTA.F0413 CPAG
                            left outer join PRODDTA.F0414 LPAG
                                         on LPAG.RNPYID = CPAG.RMPYID
                            WHERE 1=1       
                            AND CPAG.RMVDGJ = 0       --<- QUITAMOS LAS APLICACIONES ANULADAS
                            AND LPAG.RNDCTM = 'PN'    --<- Solo registros de anticipos
                            AND CPAG.RMDCTM = 'PN'    --<- Solo registros de anticipos
                            AND LPAG.RNPAAP > 0   --<- Solo registros de anticipos       
        
                        ) ANTICIPOS
                     on ANTICIPOS.PAGO_ID = CPAG.RMPYID 
                        
        WHERE 1=1
         
        AND CPAG.RMVDGJ = 0       --<- QUITAMOS LAS APLICACIONES ANULADAS
        AND LPAG.RNDCTM = 'PN'   --<- Solo registros de anticipos
        AND CPAG.RMDCTM = 'PN'  --<- Solo registros de anticipos
        AND LPAG.RNPAAP < 0   --<- Solo registros de facturas
    )
where 1=1
;]]>
         </code>
      </snippet>
      <snippet name="VIEW_PAGOS" description="">
         <code>
            <![CDATA[
/* Notas
-------------------------------------------------------

-- Tipos de Pago --

  PN - Pago Manual (comunmente aplicaciones de anticipos)
  PK - Pago automatico (pagos de facturas o anticipos, pero nunca aplicacion de anticipos)

-- Tipos de linea de pago --

  PN - Linea de Pago Manual (comunmente aplicaciones de anticipos)
  PK - Linea de Pago automatico (pagos de facturas o anticipos)
  PG - Linea de Perdidas o ganancias cambiarias (aparecen en pagos con tasa de cambio distinta entre factura y pago)
  PO - Indica linea anulaciÃ³n del pago

-- Tipo vs Tipo Linea --

PN - PO  -> Pago manual anulado, aplicacion de anticipo anulado
PN - PG  -> Pago manual con perdida/ganacia cambiaria
PK - PO  -> Pago automatico anulado
PK - PG  -> Pago automatico con ganancia o perdida cambiaria
PN - PN  -> Pago Manual
PK - PK  -> Pago automatico

-- Aplicacion de anticipos --

Cuando se pagan anticipos se tienen las lineas de las documentos de facturas (monto positivo ) 
y la linea del anticipo Aplicado (monto en negativo). Ambas de tipo PN
          
-- AnulaciÃ³n de aplicacion de anticipos --

Cuando se anula una aplicaciÃ³n de anticipo, se crean nuevas lineas en el pago, estas lineas representan
los movimientos contrarios de la aplicacion, por lo que abra una linea por cada linea de documento pero 
con monto con signo contrario y con tipo de linea PO. Adicionalmente la fecha de modificacion sera especificada

-- Perdida o ganacia cambiaria

Cuando existe diferencias en el tipo de cambio entre la factura y el pago de esta. El sistema agrega
una linea de tipo PG con la diferencia de esta.

*/


select
*
from (
        select 
         CPAG.RMPYID as id
        ,CPAG.RMDCTM as TIPO --<- PN = Pagos manuales (como anticipos), PK = pagos automatico (no existen anticipos en este grupo)
        ,CPAG.RMDOCM as NUMERO
        ,LPAG.RNRC5 as LINEA
        ,LPAG.RNDCTM as LINEA_TIPO
        ,CPAG.RMPYE as BENEFICIARIO --<- INDICA EL BENEFICIADO POR EL PAGO (A QUIEN SE DEPOSITO)
        ,LPAG.RNAN8 AS PROVEEDOR    --<- INDICA EL PROVEEDOR DE LA FACTURA 

        ,case when CPAG.RMDMTJ <> 0 then TO_DATE(1900000 + CPAG.RMDMTJ,'YYYYDDD') end as FECHA_PAGO
        ,case when CPAG.RMVLDT <> 0 then TO_DATE(1900000 + CPAG.RMVLDT,'YYYYDDD') end as FECHA_LIQUIDACION
        ,case when CPAG.RMVDGJ <> 0 then TO_DATE(1900000 + CPAG.RMVDGJ,'YYYYDDD') end as FECHA_ANULACION 

        ,LPAG.RNKCO  AS DOC_COMPANIA
        ,LPAG.RNDCT AS DOC_TIPO
        ,LPAG.RNDOC AS DOC
        ,LPAG.RNSFX AS DOC_LINEA
        ,LPAG.RNSFXE AS DOC_AJUSTE        
        
        ,(CPAG.RMPAAP/100 ) as MONTO_TOTAL   --<- Este monto ya contempla el IVA
        ,CPAG.RMCRCD as MONEDA

        ,(LPAG.RNPFAP/100) AS MONTO_LINEA_EX
        ,LPAG.RNCRCD AS MONEDA_LINEA
        ,LPAG.RNCRR AS TASA
        ,(LPAG.RNPAAP/100) AS MONTO_LINEA_MX
        
        ,LPAG.RNRMK AS DESCRPCION  

        ,CPAG.RMPYIN as INTRUMENTO
        ,CPAG.RMGLBA as CUENTA_BANCO
        ,CPAG.RMCBNK as CUENTA_BANCO_NUM
        
        ,LPAG.RNPOST AS POST
        ,LPAG.RNGLC AS GL
        ,LPAG.RNPN AS PERIODO
        ,LPAG.RNFY AS ANIO        
        
        ,CPAG.RMICU  as BATCH
        ,CPAG.RMICUT as BATCH_TIPO
        ,case when CPAG.RMDICJ <> 0 then TO_DATE(1900000 + CPAG.RMUPMJ,'YYYYDDD') end as BATCH_FECHA
        ,CPAG.RMISTP as POSTEO        
        
        ,LPAG.RNCO AS COMPANIA
        ,LPAG.RNMCU AS UN
        ,LPAG.RNPO AS OC        
        
        ,CPAG.RMTORG as ORIGINADOR_CABE
        ,CPAG.RMUSER as UPDATER_CABE
        ,case when CPAG.RMUPMJ <> 0 then TO_DATE(1900000 + CPAG.RMUPMJ,'YYYYDDD') end as FECHA_UPDATE_CABE
        
        ,LPAG.RNUSER AS UPDATER_LIN
        ,CASE WHEN LPAG.RNUPMJ <> 0 THEN TO_DATE(1900000 + LPAG.RNUPMJ,'YYYYDDD') END AS FECHA_UPDATE_LIN
        
        from PRODDTA.F0413 CPAG
        left outer join PRODDTA.F0414 LPAG
                     on LPAG.RNPYID = CPAG.RMPYID
    )
where 1=1
--AND TIPO = ''
--AND LINEA_TIPO = 'PG'
and NUMERO = 5

and BENEFICIARIO = 71152
--AND DOC= 1350
--AND DOC_LINEA = 002
--AND DOC_TIPO = 'PS'
;


]]>
         </code>
      </snippet>
      <snippet name="VIEW_PAGOSXDOCUMENTO" description="">
         <code>
            <![CDATA[/* ------------------------------------------------------------------------------ *\
    Nombre: VIEW_PAGOSXDOCUMENTO
    
    Descripcion: Vista que muestra los usuarios e informacion de su direccion
                 asociada
\* ------------------------------------------------------------------------------ */

/* ------------------------------------------------------------------------------ *\
    DEPENDENCIAS:
    
      - PRODDTA.F0413 : (Accounts Payable - Matching Document). Tabla que guarda 
                        por pago un registro, con el monto total del pago, 
                        esta tabla tiene ID que no se muestra en la aplicacion 
                        y un numero de pago que solo tiene esta tabla 
                        (este es el campo que muestra la aplicacion)
                      
      - PRODDTA.F0414

\* ------------------------------------------------------------------------------ */
  
  
  --CREATE OR REPLACE FORCE EDITIONABLE VIEW "NUVPD"."VIEW_PAGOSXDOCUMENTO" ("BENEFICIARIO", "PROVEEDOR", "DOC_COMPANIA", "DOC_TIPO", "DOC", "ANIO", "PERIODO", "MONTO_TOTAL_MX") AS 
  select 
        CABECERA.RMPYE as BENEFICIARIO --< INDICA EL BENEFICIADO POR EL PAGO (A QUIEN SE DEPOSITO)
        ,LINEA.RNAN8 AS PROVEEDOR      --< INDICA EL PROVEEDOR DE LA FACTURA 

        ,LINEA.RNKCO AS DOC_COMPANIA
        ,LINEA.RNDCT AS DOC_TIPO
        ,LINEA.RNDOC AS DOC

        ,LINEA.RNFY AS ANIO
        ,LINEA.RNPN AS PERIODO

        ,SUM((LINEA.RNPAAP/100) * -1) AS MONTO_TOTAL_MX

        from PRODDTA.F0413 CABECERA
        left outer join PRODDTA.F0414 LINEA
                     on LINEA.RNPYID = CABECERA.RMPYID
        WHERE 1=1
        and CABECERA.RMVDGJ = 0     --< QUITAMOS LAS APLICACIONES ANULADAS
        AND LINEA.RNDCTM = 'PK'     --< Solo registros de PAGOS
        and CABECERA.RMDCTM = 'PK'  --< Solo registros de PAGOS
        AND LINEA.RNDCT <> 'PX'     --< Quitamos documentos de nomina
        
        GROUP BY
        CABECERA.RMPYE
        ,LINEA.RNAN8
        ,LINEA.RNKCO
        ,LINEA.RNDCT
        ,LINEA.RNDOC
        ,LINEA.RNPN
        ,LINEA.RNFY;
]]>
         </code>
      </snippet>
   </group>
   <group category="0 - COMERCIAL" language="PLSQL">
      <snippet name="F03012 - Customer Master" description="">
         <code>
            <![CDATA[-- Customer Master

select
*
from proddta.f03012
;]]>
         </code>
      </snippet>
      <snippet name="F03B11 - Customer Ledger" description="">
         <code>
            <![CDATA[
SELECT
*
FROM (

        select
        factura.RPDOC as Doc
        ,factura.RPDCT as Doc_Tipo
        ,factura.RPKCO as Doc_Compania
        ,factura.RPSFX as Doc_linea
        
        ,factura.RPVINV	AS FACTURA
        ,factura.RPRMK AS DESCRIPCION        
        ,factura.RPPST AS ESTADO
        ,TRIM(ESTADOS.DRDL01) as ESTADO_DESC
        
        ,factura.RPAN8 as cliente
        ,factura.RPPYR AS BENEFICIARIO
        
        ,case when factura.RPDIVJ <> 0 then TO_DATE(1900000 + factura.RPDIVJ,'YYYYDDD') end as fecha_factura
        ,case when factura.RPDDJ <> 0 then TO_DATE(1900000 + factura.RPDDJ,'YYYYDDD') end as fecha_vencimiento
        ,case when factura.RPJCL <> 0 then TO_DATE(1900000 + factura.RPJCL,'YYYYDDD') end as FECHA_CIERRE
        ,case when factura.RPVDGJ <> 0 then TO_DATE(1900000 + factura.RPVDGJ,'YYYYDDD') end as FECHA_ANULACION
        ,case when factura.RPDGJ <> 0 then TO_DATE(1900000 + factura.RPDGJ,'YYYYDDD') end as fecha_gl
        
        ,factura.RPFY as anio
        ,factura.RPCTRY as centuria
        ,factura.RPPN as periodo
        ,factura.RPCO as compania
        
        ,factura.RPICU as Batch
        ,factura.RPICUT as batch_tipo
        ,case when factura.RPDICJ <> 0 then TO_DATE(1900000 + factura.RPDICJ,'YYYYDDD') end as batch_fecha
        ,factura.RPPOST	AS POSTEO
        
        ,factura.RPAG/100 AS MONTO_TOTAL_MX
        ,factura.RPAAP/100 AS MONTO_PENDIENTE_MX
        ,factura.RPATXA/100	AS MONTO_IMPONIBLE_MX
        ,factura.RPATXN/100 AS MONTO_NOIMPONIBLE_MX
        ,factura.RPSTAM/100 AS MONTO_IMPUESTO_MX
        ,factura.RPTXA1	as impuesto
        
        ,factura.RPCRCD AS MONEDA
        ,factura.RPCRR AS TASA
        
        ,factura.RPACR/100 as monto_total_ex
        ,factura.RPFAP/100 as monto_pendiente_ex
        ,factura.RPCTXA/100 as MONTO_IMPONIBLE_ex
        ,factura.RPCTXN/100 as MONTO_NOIMPONIBLE_ex
        ,factura.RPCTAM/100 as MONTO_IMPUESTO_ex
        
        ,factura.RPATAD	AS MONTO_XDIST_MX
        ,factura.RPCTAD AS MONTO_XDIST_EX
        
        ,factura.RPGLBA	AS BANCO
        ,factura.RPGLC	as LM
        
        ,factura.RPMCU AS UN
        ,factura.RPSBL AS CUENTA_SUBLIBRO
        ,factura.RPSBLT	AS CUENTA_SUB_TIPO
        
        ,factura.RPPTC AS TERMINOS
        ,factura.RPVOD as flag_void
        
        ,factura.RPPKCO	as OC_compania
        ,factura.RPPDCT	as OC_tipo
        
        ,case
          when TRIM(factura.RPPO) IS NULL then ' '
          when TRIM(factura.RPPO) IS NOT NULL then TO_CHAR(to_number(factura.RPPO))
         end AS OC
        
        ,factura.RPSFXO AS Oc_SUFIX
        
        ,factura.rpskco as ov_compania
        ,FACTURA.RPSDCT as ov_tipo
        ,factura.rpsdoc as ov
        ,factura.RPLNID AS OV_LINEA

        
        ,factura.RPITM AS ITEM
        ,factura.RPU AS CANTIDAD
        ,factura.RPUM AS UDM
        
        ,factura.RPTORG	AS CREADOR
        ,factura.RPUSER	as UPDATER
        ,case when factura.RPUPMJ <> 0 then TO_DATE(1900000 + factura.RPUPMJ,'YYYYDDD') end as fecha_update
        
        from proddta.F03B11 factura


        LEFT OUTER JOIN PRODCTL.F0005 ESTADOS
                     ON ESTADOS.DRSY = '00'    
                    AND ESTADOS.DRRT = 'PS'    
                    AND TRIM(ESTADOS.DRKY) = trim(factura.RPPST)

     )
WHERE 1=1
AND DOC_TIPO = 'RI'
AND DOC = 1
AND DOC_COMPANIA = '00010'
;




/* Campos no importantees
-----------------------------------------------------------------------------
,factura.RPADSC	Discount Available	Numeric	Generic Edit	15	2
,factura.RPADSA	Discount Taken	Numeric	Generic Edit	15	2
,factura.RPCDS	Amount - Foreign Discount Available	Numeric	Generic Edit	15	2
,factura.RPCDSA	Amount - Foreign Discount Taken	Numeric	Generic Edit	15	2

,factura.RPAID	Account ID	String	Generic Edit	8	0
,factura.RPPA8	Address Number - Parent	Numeric	Generic Edit	8	0
,factura.RPAN8J	Address Number - Alternate Payee	Numeric	Generic Edit	8	0
,factura.RPISTR	A/R Post Status	Character	Generic Edit	1	0
,factura.RPBALJ	Balanced - Journal Entries	Character	UDC	1	0

,factura.RPBCRC	Currency Code - Base	String	Generic Edit	3	0
,factura.RPCRRM	Currency Mode-Foreign or Domestic Entry	Character	UDC	1	0

,factura.RPDMCD	Domestic Entry w/Mult Currency Distr	Character	Generic Edit	1	0
,factura.RPEXR1	Tax Expl Code 1	String	UDC	2	0

,factura.RPDSVJ	Date - Service/Tax	Date	Generic Edit	6	0

,factura.RPAM	Account Mode - G/L	Character	UDC	1	0
,factura.RPAID2	Account ID	String	Generic Edit	8	0
,factura.RPAM2	Account Mode - G/L	Character	UDC	1	0

,factura.RPOBJ	Object Account	String	Generic Edit	6	0
,factura.RPSUB	Subsidiary	String	Generic Edit	8	0

,factura.RPDDNJ	Date - Discount Due - Julian	Date	Generic Edit	6	0
,factura.RPRDDJ	Date of Last Sent Reminder	Date	Generic Edit	6	0
,factura.RPRDSJ	Date - Reminder Stop Until Date	Date	Generic Edit	6	0
,factura.RPLFCJ	Date - Last Fee Calculated (Julian)	Date	Generic Edit	6	0
,factura.RPSMTJ	Date - Statement	Date	Generic Edit	6	0
,factura.RPNBRR	Reminders - Number of Reminders to Send	Character	UDC	1	0
,factura.RPRDRL	Level of Last Sent Reminder	Character	UDC	1	0
,factura.RPRMDS	Number of Sent Reminders - Total	Numeric	Generic Edit	3	0
,factura.RPCOLL	Collection Report (Y/N)	Character	UDC	1	0
,factura.RPCORC	Collection Reason Code	String	UDC	2	0
,factura.RPAFC	Apply Finance Charges - Y/N	Character	UDC	1	0
,factura.RPDNLT	Delinquency Notice (Y/N)	Character	Generic Edit	1	0
,factura.RPRSCO	Write-Off Reason Code	String	UDC	2	0
,factura.RPODOC	Document - Original	Numeric	Generic Edit	8	0
,factura.RPODCT	Document Type - Original	String	UDC	2	0
,factura.RPOKCO	Document Company (Original Order)	String	Generic Edit	5	0
,factura.RPOSFX	Document Pay Item - Original	String	Generic Edit	3	0
,factura.RPDCTO	Order Type	String	UDC	2	0

,factura.RPSDOC	Sales Document Number	Numeric	Generic Edit	8	0
,factura.RPSDCT	Sales Document Type	String	UDC	2	0
,factura.RPSKCO	Document Company (Sales Order)	String	Generic Edit	5	0

,factura.RPVLDT	Date - Cleared/Value	Date	Generic Edit	6	0
,factura.RPCMC1	Commission Code 1	Numeric	Generic Edit	8	0
,factura.RPVR01	Reference	String	Generic Edit	25	0
,factura.RPUNIT	Unit	String	Generic Edit	8	0
,factura.RPMCU2	Business Unit 2	String	Generic Edit	12	0

,factura.RPALPH	Name - Alpha	String	Generic Edit	40	0
,factura.RPRF	Frequency - Recurring	String	UDC	2	0
,factura.RPDRF	Recurring Frequency # of Payments	Numeric	Generic Edit	3	0
,factura.RPCTL	Control/Statement Field	String	Generic Edit	13	0
,factura.RPFNLP	Closed Item - As Of Processing	Character	Generic Edit	1	0

,factura.RPALT6	G/L Posting Code - Cash Basis Acct	Character	Generic Edit	1	0
,factura.RPRYIN	Payment Instrument	Character	UDC	1	0


,factura.RPRP1	A/R - A/P - Miscellaneous Code 1	Character	Generic Edit	1	0
,factura.RPRP2	A/R - A/P - Miscellaneous Code 2	Character	Generic Edit	1	0
,factura.RPRP3	A/R - A/P - Cash Rcpts/Inv Reg Code	Character	Generic Edit	1	0
,factura.RPAR01	A/R Reporting Code 1	String	UDC	3	0
,factura.RPAR02	A/R Reporting Code 2	String	UDC	3	0
,factura.RPAR03	A/R Reporting Code 3	String	UDC	3	0
,factura.RPAR04	A/R Reporting Code 4	String	UDC	3	0
,factura.RPAR05	A/R Reporting Code 5	String	UDC	3	0
,factura.RPAR06	A/R Reporting Code 6	String	UDC	3	0
,factura.RPAR07	A/R Reporting Code 7	String	UDC	3	0
,factura.RPAR08	A/R Reporting Code 8	String	UDC	3	0
,factura.RPAR09	A/R Reporting Code 9	String	UDC	3	0
,factura.RPAR10	A/R Reporting Code 10	String	UDC	3	0
,factura.RPISTC	A/R Post to Cash Management	Character	Generic Edit	1	0
,factura.RPPYID	Payment ID (Internal)	Numeric	Generic Edit	15	0
,factura.RPURC1	User Reserved Code	String	Generic Edit	3	0
,factura.RPURDT	User Reserved Date	Date	Generic Edit	6	0
,factura.RPURAT	User Reserved Amount	Numeric	Generic Edit	15	2
,factura.RPURAB	User Reserved Number	Numeric	Generic Edit	8	0
,factura.RPURRF	User Reserved Reference	String	Generic Edit	15	0
,factura.RPRNID	Batch Run ID (Internal)	Numeric	Generic Edit	3	0
,factura.RPPPDI	Date - Invoice Printed	Date	Generic Edit	6	0

,factura.RPPID	Program ID	String	Generic Edit	10	0

,factura.RPUPMT	Time - Last Updated	Numeric	Generic Edit	6	0
,factura.RPDDEX	Deduction Reason Code	String	UDC	2	0
,factura.RPJOBN	Work Station ID	String	Generic Edit	10	0
,factura.RPHCRR	Historical Currency Conversion Rate	Numeric	Generic Edit	15	0
,factura.RPHDGJ	Historical Date - Julian	Date	Generic Edit	6	0
,factura.RPSHPN	Shipment Number	Numeric	Generic Edit	8	0
,factura.RPDTXS	Deferred Tax Status - VAT	Character	Generic Edit	1	0
,factura.RPOMOD	Originating System	Character	UDC	1	0
,factura.RPCLMG	Collection Manager	String	Generic Edit	10	0
,factura.RPCMGR	Credit Manager	String	UDC	10	0

,factura.RPNRTA	Non-Recoverable Tax Amount	Numeric	Generic Edit	15	2
,factura.RPFNRT	Foreign Non-Recoverable Tax	Numeric	Generic Edit	15	2
,factura.RPPRGF	Purge Flag	Character	Generic Edit	1	0
,factura.RPGFL1	Generic Flag 1	Character	Generic Edit	1	0
,factura.RPGFL2	Generic Flag 2	Character	Generic Edit	1	0
,factura.RPDOCO	Document (Order No Invoice etc.)	Numeric	Generic Edit	8	0
,factura.RPKCOO	Order Company (Order Number)	String	Generic Edit	5	0
,factura.RPSOTF	Sales Order Tax Flag	Character	Generic Edit	1	0
,factura.RPDTPB	Notification Payment Date	Date	Generic Edit	6	0
,factura.RPERDJ	Date - For Exchange Rate - Julian	Date	Generic Edit	6	0
,factura.RPPWPG	Pay When Paid Group Number	Numeric	Generic Edit	15	0
,factura.RPNETTCID	Netting Transaction ID	Numeric	Generic Edit	15	0
,factura.RPNETDOC	Netting Document Number	Numeric	Generic Edit	15	0
,factura.RPNETRC5	Netting Line ID	Numeric	Generic Edit	6	0
,factura.RPNETST	Netting Status Code	Character	UDC	1	0
,factura.RPAJCL	Actual Date Invoice Closed	Date	Generic Edit	6	0
,factura.RPRMR1	Generic AR Receipt Matching Reference1	String	Generic Edit	50	0

*/]]>
         </code>
      </snippet>
      <snippet name="F4201 - Sales Orders Header" description="">
         <code>
            <![CDATA[	
SELECT
SHKCOO AS "Order Company (Order Number)"
,SHDOCO AS "Document (Order No Invoice etc.)"
,SHDCTO AS "Order Type"
,SHSFXO AS "Order Suffix"
,SHMCU AS "Business Unit"
,SHCO AS "Company"
,SHOKCO AS "Document Company (Original Order)"
,SHOORN AS "Original Order Number"
,SHOCTO AS "Original Order Type"
,SHRKCO AS "Company - Key (Related Order)"
,SHRORN AS "Related PO/SO/WO Number"
,SHRCTO AS "Related PO/SO/WO Order Type"
,SHAN8	 AS "Address Number"
,SHSHAN AS "Address Number - Ship To"
,SHPA8	 AS "Address Number - Parent"
,SHDRQJ AS "Date - Requested	FECHA"
,SHTRDJ AS "Date - Order/Transaction	FECHA"
,SHPDDJ AS "Date - Scheduled Pick	FECHA"
,SHOPDJ AS "Date - Original Promised Delivery	FECHA"
,SHADDJ AS "Date - Actual Ship FECHA"
,SHCNDJ AS "Date - Cancel	FECHA"
,SHPEFJ AS "Date - Price Effective FECHA"
,SHPPDJ AS "Date - Promised Shipment	FECHA"
,SHVR01 AS "Reference"
,SHVR02 AS "Reference 2"
,SHDEL1 AS "Delivery Instructions Line 1"
,SHDEL2 AS "Delivery Instructions Line 2"
,SHINMG AS "Print Message"
,SHPTC	 AS "Payment Terms Code"
,SHRYIN AS "Payment Instrument"
,SHASN	 AS "Price and Adjustment Schedule"
,SHPRGP AS "Pricing Group"
,SHTRDC AS "Discount - Trade"
,SHPCRT AS "Percent - Retainage"
,SHTXA1 AS "Tax Rate/Area"
,SHEXR1 AS "Tax Expl Code 1"
,SHTXCT AS "Certificate Tax Exemption"
,SHATXT AS "Associated Text"
,SHPRIO AS "Priority - Processing"
,SHBACK AS "Backorders Allowed (Y/N)"
,SHSBAL AS "Substitutes Allowed (Y/N)"
,SHHOLD AS "Hold Orders Code"
,SHPLST AS "Price Pick List (Y/N)"
,SHINVC AS "Invoice Copies"
,SHNTR	 AS "Nature of Transaction"
,SHANBY AS "Buyer Number"
,SHCARS AS "Carrier Number"
,SHMOT	 AS "Mode of Transport"
,SHCOT	 AS "Conditions of Transport"
,SHROUT AS "Route Code"
,SHSTOP AS "Stop Code"
,SHZON	 AS "Zone Number"
,SHCNID AS "Container I.D."
,SHFRTH AS "Freight Handling Code"
,SHAFT	 AS "Apply Freight - Y/N"
,SHFUF1 AS "AIA Document Flag"
,SHFRTC AS "Freight Calculated (Y/N)"
,SHMORD AS "Merge Orders (Y/N)"
,SHRCD	 AS "Reason Code"
,SHFUF2 AS "Post Quantities"
,SHOTOT AS "Amount - Order Gross"
,SHTOTC AS "Amount - Total Cost"
,SHWUMD AS "Unit of Measure - Weight Display"
,SHVUMD AS "Unit of Measure - Volume Display"
,SHAUTN AS "Authorization Number - Credit Approval"
,SHCACT AS "Account Number - Credit/Bank"
,SHCEXP AS "Date - Expired (Julian)	FECHA"
,SHSBLI AS "Subledger Inactive Code"
,SHCRMD AS "Send Method"
,SHCRRM AS "Currency Mode-Foreign or Domestic Entry"
,SHCRCD AS "Currency Code - From"
,SHCRR	 AS "Currency Conversion Rate - Spot Rate"
,SHLNGP AS "Language"
,SHFAP	 AS "Amount - Foreign Open"
,SHFCST AS "Amount - Foreign Total Cost"
,SHORBY AS "Ordered By"
,SHTKBY AS "Order Taken By"
,SHURCD AS "User Reserved Code"
,SHURDT AS "User Reserved FECHA"
,SHURAT AS "User Reserved Amount"
,SHURAB AS "User Reserved Number"
,SHURRF AS "User Reserved Reference"
,SHUSER AS "User ID"
,SHPID	 AS "Program ID"
,SHJOBN AS "Work Station ID"
,SHUPMJ AS "Date - Updated	FECHA"
,SHTDAY AS "Time of Day"
,SHIR01 AS "Integration Reference 01"
,SHIR02 AS "Integration Reference 02"
,SHIR03 AS "Integration Reference 03"
,SHIR04 AS "Integration Reference 04"
,SHIR05 AS "Integration Reference 05"
,SHVR03 AS "Reference"
,SHSOOR AS "Source of Order	Integer	Generic Edit	11	0"
,SHPMDT AS "Scheduled Shipment Time"
,SHRSDT AS "Promised Delivery Time"
,SHRQSJ AS "Date - Requested Ship	FECHA"
,SHPSTM AS "Time - Future Time 2"
,SHPDTT AS "Time - Scheduled Pick"
,SHOPTT AS "Time - Original Promised Delivery"
,SHDRQT AS "Requested Delivery Time"
,SHADTM AS "Actual Shipment Time"
,SHADLJ AS "Date - Actual Delivery	FECHA"
,SHPBAN AS "Address Number - Paid By"
,SHITAN AS "Address Number - Invoiced To"
,SHFTAN AS "Address Number - Forwarded To"
,SHDVAN AS "Address Number - Deliver To"
,SHDOC1 AS "Document (Order # Invoice etc.)"
,SHDCT4 AS "Document Type"
,SHCORD AS "Change Order Number"
,SHBSC	 AS "Buying Segment Code"
,SHBCRC AS "Currency Code - Base"
,SHAUFT AS "Address Number to use for Tax"
,SHAUFI AS "Address Number to use for Transportation"
,SHOPBO AS "OP Business Objective"
,SHOPTC AS "OP Total Cost"
,SHOPLD AS "OP Latest Line FECHA"
,SHOPBK AS "OP Number of Backorders"
,SHOPSB AS "OP Number of Substitutes"
,SHOPPS AS "OP Promised Status"
,SHOPPL AS "OP Partial Order Shipment"
,SHOPMS AS "OP Allow Multi Source"
,SHOPSS AS "OP Allow Substitutes"
,SHOPBA AS "OP Allow Backorders"
,SHOPLL AS "OP Partial Ship Line Items"
,SHPRAN8 AS "Partner Address Number"
,SHOPPID AS "Opportunity Number"
,SHSDATTN AS "Sold To Attention"
,SHSPATTN AS "Ship To Attention"
,SHOTIND AS "Order Type Indicator"
,SHPRCIDLN AS "Partner Contact Line Number ID"
,SHCCIDLN AS "Customer Contact Line Number ID"
,SHSHCCIDLN AS "Ship To Cust Contact Line Num ID"
FROM PRODTA.F4201
;



]]>
         </code>
      </snippet>
      <snippet name="F4211 - Sales Orders Details" description="">
         <code>
            <![CDATA[	
select
SDKCOO as "Order Company (Order Number)	"
,SDDOCO as "Document (Order No Invoice etc.)	"
,SDDCTO as "Order Type	"
,SDLNID as "Line Number	"
,SDSFXO as "Order Suffix	"
,SDMCU	 as "Business Unit	"
,SDCO	 as "Company	"
,SDOKCO as "Document Company (Original Order)	"
,SDOORN as "Original Order Number	"
,SDOCTO as "Original Order Type	"
,SDOGNO as "Original Line Number	"
,SDRKCO as "Company - Key (Related Order)	"
,SDRORN as "Related PO/SO/WO Number	"
,SDRCTO as "Related PO/SO/WO Order Type	"
,SDRLLN as "Related PO/SO Line Number	"
,SDDMCT as "Agreement Number - Distribution	"
,SDDMCS as "Agreement Supplement - Distribution	"
,SDAN8	 as "Address Number	"
,SDSHAN as "Address Number - Ship To	"
,SDPA8	 as "Address Number - Parent	"
,SDDRQJ as "Date - Requested	"
,SDTRDJ as "Date - Order/Transaction	"
,SDPDDJ as "Date - Scheduled Pick	"
,SDADDJ as "Date - Actual Ship "
,SDIVD	 as "Date - Invoice	"
,SDCNDJ as "Date - Cancel	"
,SDDGL	 as "Date - For G/L (and Voucher)	"
,SDRSDJ as "Date - Promised Delivery	"
,SDPEFJ as "Date - Price Effective "
,SDPPDJ as "Date - Promised Shipment	"
,SDVR01 as "Reference	"
,SDVR02 as "Reference 2	"
,SDITM	 as "Item Number - Short	"
,SDLITM as "2nd Item Number	"
,SDAITM as "3rd Item Number	"
,SDLOCN as "Location	"
,SDLOTN as "Lot/Serial Number	"
,SDFRGD as "From Grade	"
,SDTHGD as "Thru Grade	"
,SDFRMP as "From Potency	"
,SDTHRP as "Thru Potency	"
,SDEXDP as "Days Before Expiration	"
,SDDSC1 as "Description	"
,SDDSC2 as "Description - Line 2	"
,SDLNTY as "Line Type	"
,SDNXTR as "Status Code - Next	"
,SDLTTR as "Status Code - Last	"
,SDEMCU as "Business Unit - Header	"
,SDRLIT as "Item Number - Related (Kit)	"
,SDKTLN as "Kit Master Line Number	"
,SDCPNT as "Component Line Number	"
,SDRKIT as "Related Kit Component	"
,SDKTP	 as "Number of Component Per Parent	"
,SDSRP1 as "Sales Rpt 01 - Product Family	"
,SDSRP2 as "Sales Rpt 02 - Family Section	"
,SDSRP3 as "Sales Category Code 3	"
,SDSRP4 as "Sales Category Code 4	"
,SDSRP5 as "Sales Category Code 5	"
,SDPRP1 as "Commodity Class	"
,SDPRP2 as "Commodity Sub Class	"
,SDPRP3 as "Supplier Rebate Code	"
,SDPRP4 as "Master Planning Family	"
,SDPRP5 as "Purchasing Category Code 5	"
,SDUOM	 as "Unit of Measure as Input	"
,SDUORG as "Units - Order/Transaction Quantity	"
,SDSOQS as "Quantity Shipped	"
,SDSOBK as "Units - Qty Backordered/Held	"
,SDSOCN as "Units - Quantity Canceled/Scrapped	"
,SDSONE as "Units - Future Quantity Committed	"
,SDUOPN as "Units - Open	"
,SDQTYT as "Units - Shipped to "
,SDQRLV as "Units - Relieved	"
,SDCOMM as "Committed (H/S)	"
,SDOTQY as "Other Quantity (1/2)	"
,SDUPRC as "Amount - Price per Unit	"
,SDAEXP as "Amount - Extended Price	"
,SDAOPN as "Amount - Open	"
,SDPROV as "Price Override Code	"
,SDTPC	 as "Temporary Price (Y/N)	"
,SDAPUM as "Unit of Measure - Entered for Unit Price	"
,SDLPRC as "Amount - List Price	"
,SDUNCS as "Amount - Unit Cost	"
,SDECST as "Amount - Extended Cost	"
,SDCSTO as "Cost Override Code	"
,SDTCST as "Extended Cost - Transfer	"
,SDINMG as "Print Message	"
,SDPTC	 as "Payment Terms Code	"
,SDRYIN as "Payment Instrument	"
,SDDTBS as "Based on "
,SDTRDC as "Discount - Trade	"
,SDFUN2 as "Trade Discount (Old)	"
,SDASN	 as "Price and Adjustment Schedule	"
,SDPRGR as "Item Price Group	"
,SDCLVL as "Pricing Category Level	"
,SDCADC as "Discount % - Cash	"
,SDKCO	 as "Document Company	"
,SDDOC	 as "Document (Voucher Invoice etc.)	"
,SDDCT	 as "Document Type	"
,SDODOC as "Document - Original	"
,SDODCT as "Document Type - Original	"
,SDOKC	 as "Document Company - Original	"
,SDPSN	 as "Pick Slip Number	"
,SDDELN as "Delivery Number	"
,SDTAX1 as "Sales Taxable (Y/N)	"
,SDTXA1 as "Tax Rate/Area	"
,SDEXR1 as "Tax Expl Code 1	"
,SDATXT as "Associated Text	"
,SDPRIO as "Priority - Processing	"
,SDRESL as "Printed Code	"
,SDBACK as "Backorders Allowed (Y/N)	"
,SDSBAL as "Substitutes Allowed (Y/N)	"
,SDAPTS as "Partial Line Shipments Allowed (Y/N)	"
,SDLOB	 as "Line of Business	"
,SDEUSE as "End Use	"
,SDDTYS as "Duty Status	"
,SDNTR	 as "Nature of Transaction	"
,SDVEND as "Primary / Last Supplier Number	"
,SDCARS as "Carrier Number	"
,SDMOT	 as "Mode of Transport	"
,SDROUT as "Route Code	"
,SDSTOP as "Stop Code	"
,SDZON	 as "Zone Number	"
,SDCNID as "Container I.D.	"
,SDFRTH as "Freight Handling Code	"
,SDSHCM as "Shipping Commodity Class	"
,SDSHCN as "Shipping Conditions Code	"
,SDSERN as "Serial Number - Lot	"
,SDUOM1 as "Unit of Measure - Primary	"
,SDPQOR as "Units - Primary Quantity Ordered	"
,SDUOM2 as "Unit of Measure - Secondary	"
,SDSQOR as "Units - Secondary Quantity Ordered	"
,SDUOM4 as "Unit of Measure - Pricing	"
,SDITWT as "Unit Weight	"
,SDWTUM as "Weight Unit of Measure	"
,SDITVL as "Unit Volume	"
,SDVLUM as "Volume Unit of Measure	"
,SDRPRC as "Reprice (Basket Price) Category	"
,SDORPR as "Order Reprice Category	"
,SDORP	 as "Order Repriced Indicator	"
,SDCMGP as "Costing Method - Inventory	"
,SDGLC	 as "G/L Offset	"
,SDCTRY as "Century	"
,SDFY	F as "iscal Year	"
,SDSO01 as "Inter Branch Sales	"
,SDSO02 as "On Hand Updated	"
,SDSO03 as "Configurator Print Flag	"
,SDSO04 as "Sales Order Status 04	"
,SDSO05 as "Substitute Item Indicator	"
,SDSO06 as "Preference Commitment Indicator	"
,SDSO07 as "Ship date (PDDJ) overridden	"
,SDSO08 as "Price Adjustment Line Indicator	"
,SDSO09 as "Price Adj. History Indicator	"
,SDSO10 as "Preference Production Allocation	"
,SDSO11 as "Transfer/Direct Ship/Intercompany Flag	"
,SDSO12 as "Deferred entries flag	"
,SDSO13 as "Euro Conversion Status Flag	"
,SDSO14 as "Sales Order Status 14	"
,SDSO15 as "Sales Order Status 15	"
,SDACOM as "Apply Commission (Y/N)	"
,SDCMCG as "Commission Category	"
,SDRCD	 as "Reason Code	"
,SDGRWT as "Gross Weight	"
,SDGWUM as "Gross Weight Unit of Measure	"
,SDSBL	 as "Subledger - G/L	"
,SDSBLT as "Subledger Type	"
,SDLCOD as "Code - Location Tax Status	"
,SDUPC1 as "Price Code 1	"
,SDUPC2 as "Price Code 2	"
,SDUPC3 as "Price Code 3	"
,SDSWMS as "Status - In Warehouse	"
,SDUNCD as "Work Order Freeze Code	"
,SDCRMD as "Send Method	"
,SDCRCD as "Currency Code - From	"
,SDCRR	 as "Currency Conversion Rate - Spot Rate	"
,SDFPRC as "Amount - List Price per Unit	"
,SDFUP	 as "Amount - Foreign Price per Unit	"
,SDFEA	 as "Amount - Foreign Extended Price	"
,SDFUC	 as "Amount - Foreign Unit Cost	"
,SDFEC	 as "Amount - Foreign Extended Cost	"
,SDURCD as "User Reserved Code	"
,SDURDT as "User Reserved "
,SDURAT as "User Reserved Amount	"
,SDURAB as "User Reserved Number	"
,SDURRF as "User Reserved Reference	"
,SDTORG as "Transaction Originator	"
,SDUSER as "User ID	"
,SDPID	 as "Program ID	"
,SDJOBN as "Work Station ID	"
,SDUPMJ as "Date - Updated	"
,SDTDAY as "Time of Day	"
,SDSO16 as "Manufacturing Variance Accounting Flag	"
,SDSO17 as "Sales Order Status 17	"
,SDSO18 as "Sales Order Status 18	"
,SDSO19 as "Sales Order Status 19	"
,SDSO20 as "Sales Order Status 20	"
,SDIR01 as "Integration Reference 01	"
,SDIR02 as "Integration Reference 02	"
,SDIR03 as "Integration Reference 03	"
,SDIR04 as "Integration Reference 04	"
,SDIR05 as "Integration Reference 05	"
,SDSOOR as "Source of Order	"
,SDVR03 as "Reference	"
,SDDEID as "Demand Unique Key ID	"
,SDPSIG as "Pull Signal	"
,SDRLNU as "Release Number	"
,SDPMDT as "Scheduled Shipment Time	"
,SDRLTM as "Time - Release	"
,SDRLDJ as "Date - Release	"
,SDDRQT as "Requested Delivery Time	"
,SDADTM as "Actual Shipment Time	"
,SDOPTT as "Time - Original Promised Delivery	"
,SDPDTT as "Time - Scheduled Pick	"
,SDPSTM as "Time - Future Time 2	"
,SDXDCK as "Cross-Docking Flag	"
,SDXPTY as "Cross Docking Priority for Sales Orders	"
,SDDUAL as "Dual Unit Of Measure Item	"
,SDBSC	 as "Buying Segment Code	"
,SDCBSC as "Current Buying Segment Code	"
,SDCORD as "Change Order Number	"
,SDDVAN as "Address Number - Deliver To	"
,SDPEND as "Pending Approval Flag	"
,SDRFRV as "Revision Reason	"
,SDMCLN as "Matrix Control Line Number	"
,SDSHPN as "Shipment Number	"
,SDRSDT as "Promised Delivery Time	"
,SDPRJM as "Project Number	"
,SDOSEQ as "Sequence Number	"
,SDMERL as "Item Revision Level	"
,SDHOLD as "Hold Orders Code	"
,SDHDBU as "Business Unit - Header	"
,SDDMBU as "Business Unit - Demand	"
,SDBCRC as "Currency Code - Base	"
,SDODLN as "Document Line Number - Original	"
,SDOPDJ as "Date - Original Promised Delivery	"
,SDXKCO as "Cross Dock Order Company (Order Number)	"
,SDXORN as "Cross Dock Order No	"
,SDXCTO as "Cross Dock Order Type	"
,SDXLLN as "Cross Dock Line Number	"
,SDXSFX as "Cross Dock Order Suffix	"
,SDPOE	 as "Port of Entry or Exit	"
,SDPMTO as "Payment Terms Override Code	"
,SDANBY as "Buyer Number	"
,SDPMTN as "Promotion ID	"
,SDNUMB as "Asset Item Number	"
,SDAAID as "Parent Number	"
,SDSPAT as "TN	Ship To Attention	"
,SDPRAN8 as "Partner Address Number	"
,SDPRCI as "DLN	Partner Contact Line Number ID	"
,SDCCID as "LN	Customer Contact Line Number ID	"
,SDSHCC as "IDLN	Ship To Cust Contact Line Num ID	"
,SDOPPI as "D	Opportunity Number	"
,SDOSTP as "Organization Structure Type	"
,SDUKID as "Unique Key ID (Internal)	"
,SDCATNM as "Catalog Name	"
,SDALLOC as "Allocation Process Flag	"
,SDFULPID as "Fulfillment Plan ID	"
,SDALLSTS as "Allocation Status Number	"
,SDOSCORE as "Sales Order Score	"
,SDOSCOREO as "Order Score Override	"
,SDCMCO as "Customer Master Company	"
,SDKITID as "Kit Identifier	"
,SDKITAMTDOM as "Accumulated Amount Invoiced (Domestic)	"
,SDKITAMTFOR as "Accumulated Amount Invoiced (Foreign)	"
from proddta.f4211
]]>
         </code>
      </snippet>
      <snippet name="ReglasMantto" description="">
         <code>
            <![CDATA[select
RUL.GONUMB as EQUIPO_CLAVE
,RUL.GOAPID AS EQUIPO_TAG
,RUL.GOSRVT as SERVICIO
,RUL.GOTHPC AS PORCENTAJE_LIM
,RUL.GOMSTS as ESTADO
,RUL.GODCTO as OT_ORDEN_TIPO
,RUL.GOTYPS as OT_TIPO
,RUL.GOPRTS AS OT_PRIORIDAD
,RUL.GOGPFS AS ASO_ESTADO_DESDE
,RUL.GOGPTS as ASO_ESTADO_A
,RUL.GOPSDM AS METODO_FECHA_INI_PROY
,RUL.GOSDYS as IMPORTE_MUESTRA
from CRPDTA.F1393 RUL
where 1=1
and RUL.GOSRVT = 'PEMSE003'
and RUL.GONUMB  = '11658'
;


--,RUL.GOCTWO AS "W.O. Charge to Business Unit Flag"
--,RUL.GODSWO AS "W.O. Description Flag"
--,RUL.GOSRST AS "Status Code W.O."
--,RUL.GOAPRT AS "Approval Type"
--,RUL.GOASID AS "Serial Number"
--,RUL.GOMUSE AS "User ID"
--,RUL.GOMPID AS "Program ID"
--,RUL.GOUPMJ AS "Date - Updated"
--,RUL.GOUPMT AS "Time - Last Updated"
--,RUL.GOPRFD AS "Date - Projected From"
--,RUL.GOCOLD AS "Copy Labor Detail"
--,RUL.GOCOPL AS "Copy Parts List"
--,RUL.GOWOBP AS "Work Order Branch Plant"
--,RUL.GODEFOW AS "Default Customer"
--,RUL.GODEFST as "Default Site"
--,RUL.GOWSCHF as "Maintenance Schedule Flag"]]>
         </code>
      </snippet>
      <snippet name="Viaticos Autorizados - APPS" description="">
         <code>
            <![CDATA[select
*
from Sol_solicitudes WHERE 1=1
AND c_estado_sol = 'AUT'
and f_solicitud >= '2016-03-14']]>
         </code>
      </snippet>
   </group>
   <group category="0 - ORACLE" language="PLSQL">
      <snippet name="Tablespace - Espacio Total" description="">
         <code>
            <![CDATA[-- ESPACIO TOTAL DE UN TABLESPACE
SELECT tablespace_name,
round(sum(BYTES/1024/1024),0) AS ESPACIO_MEGAS
FROM dba_data_files b
WHERE tablespace_name NOT LIKE 'TEMP%'
AND tablespace_name = 'USERS'
GROUP BY b.tablespace_name;]]>
         </code>
      </snippet>
      <snippet name="Tablespace - Espacio Libre" description="">
         <code>
            <![CDATA[-- ESPACIO LIBRE
SELECT tablespace_name,
ROUND(sum(bytes)/1024/1024,0) AS ESPACIO_MEGAS
FROM dba_free_space
WHERE tablespace_name NOT LIKE 'TEMP%'
AND tablespace_name = 'USERS'
GROUP BY tablespace_name;
]]>
         </code>
      </snippet>
      <snippet name="Vista Materializada - Eliminar" description="">
         <code>
            <![CDATA[ drop materialized view NOMBREVISTAMATERIALIZADA;
]]>
         </code>
      </snippet>
      <snippet name="Vista Materializada - Actualizar" description="">
         <code>
            <![CDATA[EXEC DBMS_MVIEW.refresh('NUVPD.VM_CP'); 
EXEC DBMS_MVIEW.refresh('NUVPD.VM_CXP'); 

EXEC DBMS_MVIEW.refresh('NUVPD.VM_CC'); 
EXEC DBMS_MVIEW.refresh('NUVPD.VM_CXC'); ]]>
         </code>
      </snippet>
   </group>
   <group category="0 - MANTENIMIENTO" language="PLSQL">
      <snippet name="F3002 - Lista de Refacciones" description="">
         <code>
            <![CDATA[select
LISTA.IXTBM as "Type Bill of Material"
,LISTA.IXKITL as "Kit-2nd Item Number"
,LISTA.IXKITA as "3rd Item Number-Kit"
,LISTA.IXMMCU as "Branch"
,LISTA.IXITM as "Item Number-Short"
,LISTA.IXLITM as "2nd Item Number"
,LISTA.IXAITM as "3rd Item Number"
,LISTA.IXCMCU as "Component Branch"
,LISTA.IXCPNT as "Component Line Number"
,LISTA.IXPRTA as "Partials Allowed (Y/N)"
,LISTA.IXUM as "Unit of Measure"
,LISTA.IXBQTY as "Units-Batch Quantity"
,LISTA.IXUOM as "Unit of Measure as Input"
,LISTA.IXEFFF as "Effective-From Date"
,LISTA.IXEFFT as "Effective-Thru Date"
,LISTA.IXITC as "Issue Type Code"
,LISTA.IXFTRC as "Required"
,LISTA.IXOPTK as "Optional Item (Kit)"
,LISTA.IXFORV as "Default Component"
,LISTA.IXCSTM as "Component Costing Method"
,LISTA.IXCSMP as "Costing Method-Purchasing"
,LISTA.IXORDW as "Order With"
,LISTA.IXCOTY as "Component Type"
,LISTA.IXFRMP as "From Potency"
,LISTA.IXTHRP as "Thru Potency"
,LISTA.IXFRGD as "From Grade"
,LISTA.IXTHGD as "Thru Grade"
,LISTA.IXOPSQ as "Sequence Number-Operations"
,LISTA.IXBSEQ as "SorszÃ¡m-BuborÃ©k sorszÃ¡m"
,LISTA.IXFTRP as "Feature Planned Percent"
,LISTA.IXF$RP as "Feature Cost Percent"
,LISTA.IXRSCP as "Resource Percent"
,LISTA.IXSCRP as "Percent-Percent of Scrap"
,LISTA.IXREWP as "Percent-Rework"
,LISTA.IXASIP as "Percent-As is"
,LISTA.IXSTPP as "Operation Scrap Percent"
,LISTA.IXLOVD as "Leadtime Offset Days"
,LISTA.IXECO as "ECO Number"
,LISTA.IXECTY as "Engineering Change Reason"
,LISTA.IXDSC1 as "Description"
,LISTA.IXLNTY as "Line Type"
,LISTA.IXPRIC as "Unit Price per Primary"
,LISTA.IXUNCS as "Amount-Unit Cost"
,LISTA.IXSHNO as "Message Number"
,LISTA.IXOMCU as "Project Business Unit"
,LISTA.IXOBJ as "Object Account"
,LISTA.IXSUB as "Subsidiary"
,LISTA.IXBREV as "Bill Revision Level"
,LISTA.IXCMRV as "Component Revision Level"
,LISTA.IXRVNO as "Last Revision No."
,LISTA.IXUUPG as "Item Number-Use Up/Go To"
,LISTA.IXURCD as "User Reserved Code"
,LISTA.IXURDT as "User Reserved Date"
,LISTA.IXURAT as "User Reserved Amount"
,LISTA.IXURRF as "User Reserved Reference"
,LISTA.IXURAB as "User Reserved Number"
,LISTA.IXUSER as "User ID"
,LISTA.IXPID as "Program ID"
,LISTA.IXJOBN as "Work Station ID"
,LISTA.IXUPMJ as "Date-Updated"
,LISTA.IXTDAY as "Time of Day"
,LISTA.IXAING as "Active Ingredient Flag"
,LISTA.IXSUCO as "Substitute Counter"
,LISTA.IXSTRC as "Consumption Start"
,LISTA.IXENDC as "Consumption End"
,LISTA.IXAPSC as "Constraints Flag"
,LISTA.IXCPNB as "Component Line Number BOM"
,LISTA.IXBCHAR as "Lean Superflush Flag"
,LISTA.IXBOSTR as "Prep Code"
from PRODDTA.F3002 LISTA
;



--,LISTA.IXKIT as "Parent (short) Item Number"
--,LISTA.IXSBNT as "Substitute Item Sequence Number"
--,LISTA.IXQNTY as "Quantity-Standard Required Quantity"
--,LISTA.IXFVBT as "FLISTA.ixed or Variable Batch Size"
--,LISTA.IXFSER as "Effective From Serial Number"
--,LISTA.IXTSER as "Effective Thru Serial Number"
--,LISTA.IXFORQ as "FLISTA.ixed or Variable Quantity"
--,LISTA.IXCOBY as "Co-Products/By-Products/Intermediate"
--,LISTA.IXCPYP as "Percent-Cumulative Planned Yield"
--,LISTA.IXECOD as "Date-Engineering Change Date"
--,LISTA.IXPCTK as "Percent Assembly Sales Price"
--,LISTA.IXBSEQAN as "Bubble Sequence Alpha Numeric"]]>
         </code>
      </snippet>
      <snippet name="F3003 - Mano de Obra" description="">
         <code>
            <![CDATA[select
IRMMCU as UN
,IRMCU AS CENTRO_CLAVE
,IRTRT as TIPO
,IRKIT as KIT_CLAVE
,IRKITL as KIT_NUMERO
,IRDSC1 as KIT_DESCRIPCION
,IRUOM AS KIT_UDM
,IREFFF as FECHA_EFECTIVA_INI
,IREFFT as FECHA_EFECTIVA_FIN
,IRTIMB AS BASE_TIPO
,IRBQTY as "Units-Batch Quantity"
,IRRUNL AS "Run Labor-Standard"

from CRPDTA.F3003 --PRODDTA.F3003 OBRA
where 1=1
and IRKITL like '%KIT-500HRS-YAC1%'
AND IRMMCU  LIKE '%C01ALH%'
;


--,IRALD AS "Auto Load Description"
--,IRLINE AS "Line/Cell Identifier"
--,IRBFPF as "Pay Point Code"
--,IRLAMC AS "Labor or Machine"
--,IRACTB AS "Activity-Based Costing Activity Code"
--,IRCICO AS "Component/Ingredient Counter"
--,IRANP AS "Address Number - Assigned To"
--,IRDFOPC as "DFM Operation On Critical Path"
--,IRNXOP AS "Sequence Number-Next Operation"
--,IROPYP AS "Percent-Operational Planned Yield"
--,IRCPYP AS "Percent-Cumulative Planned Yield"
--,IROPSQ AS "Sequence Number-Operations"
--,IROPSR AS "Factor-Operation Shrinkage Factor"
--,IRVEND AS "Primary / Last Supplier Number"
--,IRRUNM AS "Run Machine-Standard"
--,IRSETL AS "Setup Labor-Standard"
--,IRPWRT AS "Rate-Piecework"
--,IRSETC AS "Crew Size"
--,IRMOVD AS "Move Hours-Standard"
--,IRQUED AS "Queue Hours-Standard"
--,IRLTPC AS "Percent-Leadtime Overlap"
--,IRPOVR AS "Percent-Overlap"
--,IRAPID AS "Unit or Tag Number"
--,IRSHNO AS "Message Number"
--,IROPSC AS "Type Operation Code"
--,IRINPE AS "Inspection Code"
--,IRJBCD AS "Job Type (Craft) Code"
--,IRAN8 AS "Address Number"
--,IRPOY AS "Purchase Order (Y/N)"
--,IRCOST AS "Cost Component"
--,IROMCU AS "Project Business Unit"
--,IROBJ AS "Object Account"
--,IRSUB AS "Subsidiary"
--,IRRREV AS "Routing Revision Level"
--,IRURCD AS "User Reserved Code"
--,IRURDT AS "User Reserved Date"
--,IRURAT AS "User Reserved Amount"
--,IRURRF AS "User Reserved Reference"
--,IRURAB AS "User Reserved Number"
--,IRUSER AS "User ID"
--,IRPID AS "Program ID"
--,IRUPMJ AS "Date-Updated"
--,IRTDAY AS "Time of Day"
--,IRJOBN AS "Work Station ID"
--,IRWMCU AS "Workcenter Branch"
--,IRLOCN AS "Location"
--,IRRUC AS "Resource units consumed"
--,IRCAPU AS "Capacity Unit of measure"
--,IRNUMB AS "Asset Item Number"
--,IRCBCO AS "Co/By Counter"
--,IRIMCO AS "Intermediate Counter"
--,IRMPRO AS "Minimum Production"
--,IRAPSC AS "Constraints Flag"
--,IRMNSP AS "Minimum Separation"
--,IRMXSP AS "Maximum Separation"
--,IRCMPE AS "Competency Type"
--,IRCMPC AS "Competency Code"
--,IRCPLVLFR AS "Competency Level From"
--,IRCPLVLTO AS "Competency Level To"
--,IRCMRQ AS "Rule Match Flag"
--,IRANSA AS "Address Number-Manager"
--,IRANPA AS "Supervisor"
--,IRWSCHF as "Maintenance Schedule Flag"
--,IRTRAF AS "Resources Assigned"
]]>
         </code>
      </snippet>
      <snippet name="F1207 - Programacion PM" description="">
         <code>
            <![CDATA[select
PM.FWNUMB as EQUIPO
,PM.FWAPID as EQUIPO_TAG

,PM.FWSRVT as SERVICIO
,PM.FWPDFG AS PROGRAMA_TIPO

,PM.FWFRIN as FRECUENCIA
,PM.FWMLTW as MULTIPLES_OT
,PM.FWDOCO as OT_MODELO
,PM.FWKY as PROCEDIMIENTO_STD
,PM.FWOCCU/100 as CASOS

,CASE WHEN PM.FWTDT <> 0 THEN TO_DATE(1900000 + PM.FWTDT,'yyyyddd') END AS FECHA_PROGRAMA
,case when PM.FWLCPD  <> 0 then TO_DATE(1900000 + PM.FWLCPD ,'yyyyddd') end as  FECHA_ULT_FINAL
,PM.FWMPC AS PORCENTAJE

,PM.FWMSTS as ESTADO
,PM.FWWONA as OT_ASIGNADA

,PM.FWMPRI as PRIORIDAD
,PM.FWDNHR AS INACTIVIDAD

,PM.FWPMC1 as CATEGORIA1
,PM.FWPMC2 as CATEGORIA2
,PM.FWRMK as OBSERVACIONES

from CRPDTA.F1207 PM
WHERE 1=1
and FWNUMB = '11658'
and FWMSTS in ('01','50')
AND FWSRVT = 'PEMSE003'
;

--,PM.FWANP AS "Address Number-Assigned To"
--,PM.FWAAID AS "Parent Number"

--,PM.FWPDFL AS "Alert Level"
--,PM.FWUKID AS "Unique Key ID (Internal)"
--,PM.FWTOLU as "Tolerance Limit-Upper"
--,PM.FWTOLL AS "Tolerance Limit-Lower"
--,PM.FWUSER AS "User ID"
--,PM.FWPID AS "Program ID"
--,PM.FWUPMJ as "Date-Updated"
--,PM.FWJOBN as "Work Station ID"
--,PM.FWSRVM4 AS "Service Meter 4"
--,PM.FWLSTM4 AS "Last Completed Meter 4"
--,PM.FWCPLM4 AS "Completed Meter 4"
--,PM.FWORGM4 AS "Original Meter 4"
--,PM.FWSRVM5 AS "Service Meter 5"
--,PM.FWLSTM5 AS "Last Completed Meter 5"
--,PM.FWCPLD as "Date-Completed Date"
--,PM.FWCPLM5 AS "Completed Meter 5"
--,PM.FWORGM5 AS "Original Meter 5"
--,PM.FWSRVM6 AS "Service Meter 6"
--,PM.FWLSTM6 AS "Last Completed Meter 6"
--,PM.FWCPLM6 AS "Completed Meter 6"
--,PM.FWMCU AS "Business Unit"
--,PM.FWORGM6 as "Original Meter 6"
--,PM.FWCRTL AS "Criticality"
--,PM.FWORGM AS "Original Miles"
--,PM.FWORGH as "Original Hours"
--,PM.FWASID as EQUIPO_SERIE
--,PM.FWORGF AS "Original Fuel"
--,PM.FWSRVD AS "Service Days"
--,PM.FWSRVM AS "Service Miles"
--,PM.FWSRVH AS "Service Fuel"
--,PM.FWCPLM AS "Completed Miles"
--,PM.FWCPLH AS "Consumed Fuel"
--,PM.FWLSTM as "Last Completed Miles"
--,PM.FWLSTH AS "Last Completed Fuel Consumed"
--,PM.FWSRVF as "Service Hours"
--,PM.FWCPLF AS "Completed Hours"
--,PM.FWLSTF AS "Last Completed Hours"
--,PM.FWUPMT AS "Time-Last Updated"

--,PM.FWPNST AS "Date-Planned Start (Julian)"
--,PM.FWHLDD AS "Date-Hold"
--,PM.FWSPHR AS "Hours-Specific"
--,PM.FWSPWK AS "Weeks-Specific"
--,PM.FWSPMN AS "Months-Specific"
--,PM.FWWK as "Week Number"
--,PM.FWSPDW as "Day of the Week"]]>
         </code>
      </snippet>
      <snippet name="F1393 - Reglas de Mantto" description="">
         <code>
            <![CDATA[select
RUL.GONUMB as EQUIPO_CLAVE
,RUL.GOAPID AS EQUIPO_TAG
,RUL.GOSRVT as SERVICIO
,RUL.GOTHPC AS PORCENTAJE_LIM
,RUL.GOMSTS as ESTADO
,RUL.GODCTO as OT_ORDEN_TIPO
,RUL.GOTYPS as OT_TIPO
,RUL.GOPRTS AS OT_PRIORIDAD
,RUL.GOGPFS AS ASO_ESTADO_DESDE
,RUL.GOGPTS as ASO_ESTADO_A
,RUL.GOPSDM AS METODO_FECHA_INI_PROY
,RUL.GOSDYS as IMPORTE_MUESTRA
from CRPDTA.F1393 RUL
where 1=1
and RUL.GOSRVT = 'PEMSE003'
and RUL.GONUMB  = '11658'
;


--,RUL.GOCTWO AS "W.O. Charge to Business Unit Flag"
--,RUL.GODSWO AS "W.O. Description Flag"
--,RUL.GOSRST AS "Status Code W.O."
--,RUL.GOAPRT AS "Approval Type"
--,RUL.GOASID AS "Serial Number"
--,RUL.GOMUSE AS "User ID"
--,RUL.GOMPID AS "Program ID"
--,RUL.GOUPMJ AS "Date - Updated"
--,RUL.GOUPMT AS "Time - Last Updated"
--,RUL.GOPRFD AS "Date - Projected From"
--,RUL.GOCOLD AS "Copy Labor Detail"
--,RUL.GOCOPL AS "Copy Parts List"
--,RUL.GOWOBP AS "Work Order Branch Plant"
--,RUL.GODEFOW AS "Default Customer"
--,RUL.GODEFST as "Default Site"
--,RUL.GOWSCHF as "Maintenance Schedule Flag"]]>
         </code>
      </snippet>
      <snippet name="F4801 - Ordenes de Trabajo" description="">
         <code>
            <![CDATA[select
OT.WADCTO AS "Order Type"
,OT.WADOCO AS "CLAVE"
,OT.WASFXO AS "Order Suffix"
,OT.WARCTO AS "Related PO/SO/WO Order Type"
,OT.WARORN AS "Related PO/SO/WO Number"
,OT.WALNID AS "Line Number"
,OT.WAPTWO AS "Peg to Work Order"
,OT.WAPARS AS "Number-Parent WO Number"
,OT.WATYPS AS "Type-W.O."
,OT.WAPRTS AS "Priority-W.O."
,OT.WADL01 AS "Description"
,OT.WASTCM AS "Status-Comment"
,OT.WACO AS "Company"
,OT.WAMCU AS "Business Unit"
,OT.WAMMCU AS "Branch"
,OT.WALOCN AS "Location"
,OT.WAAISL AS "Aisle"
,OT.WABIN AS "Bin"
,OT.WASRST AS "Status Code W.O."
,OT.WADCG AS "Date-Status Changed"
,OT.WASUB AS "Subsidiary"
,OT.WAAN8 AS "Address Number"
,OT.WAANO AS "Address Number-Originator"
,OT.WAANSA AS "Address Number-Manager"
,OT.WAANPA AS "Supervisor"
,OT.WAANP AS "Address Number-Assigned To"
,OT.WADPL AS "Date-W.O. Planned Completed"
,OT.WAANT AS "Address Number-Inspector"
,OT.WANAN8 AS "Next Address Number"
,OT.WATRDJ AS "Date-Order/Transaction"
,OT.WASTRT AS "Date-Start (Julian)"
,OT.WADRQJ AS "Date-Requested"
,OT.WASTRX AS "Date-Completion (Julian)"
,OT.WADAP AS "Date-Assigned to"
,OT.WADAT AS "Date-Assigned to Inspector"
,OT.WAPPDT AS "Date-Paper Printed Date"
,OT.WAWR01 AS "Categories-Work Order 01"
,OT.WAWR02 AS "Categories-Work Order 02"
,OT.WAWR03 AS "Categories-Work Order 03"
,OT.WAWR04 AS "Categories-Work Order 04"
,OT.WAWR05 AS "Categories-Work Order 05"
--,OT.WAWR06 AS "EnterpriseOne Consulting-Status"
--,OT.WAWR07 AS "EnterpriseOne Consulting-Service Type"
--,OT.WAWR08 AS "EnterpriseOne Consulting-Skill Type"
--,OT.WAWR09 AS "E1 Consulting-Experience Level"
,OT.WAWR10 AS "Categories-Work Order 10"
,OT.WAVR01 AS "Reference"
,OT.WAVR02 AS "Reference 2"
,OT.WAAMTO AS "Amount-Estimated"
,OT.WASETC AS "Crew Size"
,OT.WABRT AS "Revenue Rate Markup Override"
,OT.WAPAYT as "Pay/Deduction/Benefit Type"
--,OT.WAAMTC AS "Amount-Change to Original Dollars"
,OT.WAHRSO AS "Hours-Estimated"
,OT.WAHRSC AS "Hours-Change to Original Hours"
,OT.WAAMTA AS "Amount-Actual"
,OT.WAHRSA AS "Hours-Actual"
,OT.WAITM AS "Item Number-Short"
,OT.WAAITM AS "3rd Item Number"
,OT.WALITM AS "2nd Item Number"
,OT.WANUMB AS "Asset Item Number"
,OT.WAAPID as "Unit or Tag Number"
--,OT.WAUORG AS "Units-Order/Transaction Quantity"
--,OT.WASOBK AS "Units-Qty Backordered/Held"
--,OT.WASOCN AS "Units-Quantity Canceled/Scrapped"
,OT.WASOQS AS "Quantity Shipped"
,OT.WAQTYT AS "Units-Shipped to Date"
,OT.WAUOM AS "Unit of Measure as Input"
,OT.WASHNO AS "Message Number"
,OT.WAPBTM AS "Time-Beginning (HH/MM/SS)"
,OT.WATBM AS "Type Bill of Material"
,OT.WATRT AS "Type of Routing"
,OT.WASHTY AS "WO Pick List Printed"
,OT.WAPEC AS "Posting Edit"
,OT.WAPPFG AS "Variance Flag"
,OT.WABM AS "Bill of Material (N)"
,OT.WARTG AS "Route Sheet (N)"
,OT.WASPRT AS "Work Order Flash Message"
,OT.WAUNCD AS "Work Order Freeze Code"
,OT.WAINDC AS "Indented Code"
,OT.WARESC AS "Resequence Code"
,OT.WAMOH AS "Amount-Miles or Hours (units)"
,OT.WATDT AS "Date-Scheduled Tickler"
,OT.WAPOU AS "Amount-Memo Budget Changes"
,OT.WAPC AS "Percent Complete"
,OT.WALTLV AS "Leadtime Level"
,OT.WALTCM AS "Leadtime Cumulative"
,OT.WACTS1 AS "Hours-Unaccounted Direct Labor"
,OT.WALOTN AS "Lot/Serial Number"
,OT.WALOTP AS "Lot Potency"
,OT.WALOTG as "Lot Grade"
--,OT.WARAT1 AS "Ratio-Critical Ratio Priority 1"
--,OT.WARAT2 AS "Ratio-Critical Ratio Priority 2"
,OT.WADCT AS "Document Type"
,OT.WASBLI AS "Subledger Inactive Code"
,OT.WARKCO AS "Company-Key (Related Order)"
,OT.WABREV AS "Bill Revision Level"
,OT.WARREV AS "Routing Revision Level"
,OT.WADRWC AS "Drawing Change"
,OT.WARTCH AS "Routing Change"
,OT.WAPNRQ AS "New Part Number"
,OT.WAREAS AS "Reason for ECO"
,OT.WAPHSE AS "Phase In"
,OT.WAXDSP AS "Existing Disposition"
,OT.WABOMC AS "BOM Change"
,OT.WAURCD AS "User Reserved Code"
,OT.WAURDT AS "User Reserved Date"
,OT.WAURAT AS "User Reserved Amount"
,OT.WAURAB AS "User Reserved Number"
,OT.WAURRF AS "User Reserved Reference"
,OT.WAUSER AS "User ID"
,OT.WAPID AS "Program ID"
,OT.WAJOBN AS "Work Station ID"
,OT.WAUPMJ AS "Date-Updated"
,OT.WATDAY AS "Time of Day"
,OT.WAAAID AS "Parent Number"
,OT.WANTST AS "Next Status-W.O."
,OT.WAXRTO AS "Criticality-Work Order"
,OT.WAESDN AS "Estimated Downtime Hours"
,OT.WAACDN AS "Actual Downtime Hours"
,OT.WASAID AS "Service Address Number"
,OT.WAMPOS AS "Meter Position"
,OT.WAAPRT as "Approval Type"
--,OT.WAAMLC AS "Amount-Estimated Labor"
--,OT.WAAMMC AS "Amount-Estimated Material"
--,OT.WAAMOT AS "Amount-Estimated Other"
--,OT.WALBAM as "Amount-Actual Labor"
--,OT.WAMTAM AS "Amount-Actual Material"
from CRPDTA.F4801 OT
where WADCTO = 'WJ'
AND WADOCO = '48097'
;]]>
         </code>
      </snippet>
      <snippet name="F13411 - Proyecciones" description="">
         <code>
            <![CDATA[--- PROYECCIONES

select
Pry.RXNUMB as "Asset Item Number"
,Pry.RXSRVT as "Service Type"
,Pry.RXTYPF AS "Forecast Type"
,Pry.RXFQT as "Quantity-Forecast"
,Pry.RXTDT AS "Date-Scheduled Tickler"
,Pry.RXHRSO as "Hours-Estimated"
,Pry.RXAMLC as "Amount-Estimated Labor"
,Pry.RXAMMC as "Amount-Estimated Material"
,Pry.RXMCU AS "Business Unit"
,Pry.RXESDN as "Estimated Downtime Hours"
,Pry.RXDOCO AS "Document" -- (Order No Invoice etc.)"
,Pry.RXMMCU AS "Branch"
,Pry.RXDCTO AS "Order Type"
,Pry.RXTYPS AS "Type-W.O."
,Pry.RXPRTS AS "Priority-W.O."
,Pry.RXSRST AS "Status Code W.O."
,Pry.RXDL01 AS "Description"

from CRPDTA.F13411 pry
where 1=1
and RXNUMB = '11661'
;



--,Pry.RXWR01 AS "Categories-Work Order 01"
--,Pry.RXWR02 AS "Categories-Work Order 02"
--,Pry.RXWR03 AS "Categories-Work Order 03"
--,Pry.RXWR04 AS "Categories-Work Order 04"
--,Pry.RXWR05 AS "Categories-Work Order 05"
--,Pry.RXWR06 AS "EnterpriseOne Consulting-Status"
--,Pry.RXWR07 AS "EnterpriseOne Consulting-Service Type"
--,Pry.RXWR08 AS "EnterpriseOne Consulting-Skill Type"
--,Pry.RXWR09 AS "E1 Consulting-Experience Level"
--,Pry.RXWR10 AS "Categories-Work Order 10"
--,Pry.RXANSA AS "Address Number-Manager"
--,Pry.RXANPA AS "Supervisor"
--,Pry.RXAN8 AS "Address Number"
--,Pry.RXSAID AS "Service Address Number"
--,Pry.RXMCUW AS "Dispatch Group-Work Centers"
--,Pry.RXMCULT AS "Lead Craft"
--,Pry.RXWSCHF AS "Maintenance Schedule Flag"
--,Pry.RXWONA AS "Work Order Number Assigned"
--,Pry.RXITM AS "Item Number-Short"
--,Pry.RXTBM AS "Type Bill of Material"
--,Pry.RXTRT AS "Type of Routing"
--,Pry.RXUSER AS "User ID"
--,Pry.RXPID AS "Program ID"
--,Pry.RXMKEY AS "Machine Key"
--,Pry.RXUPMJ as "Date-Updated"
--,Pry.RXUPMT as "Time-Last Updated"]]>
         </code>
      </snippet>
      <snippet name="VISTA - Programacion Mantenimiento" description="">
         <code>
            <![CDATA[CREATE OR REPLACE FORCE VIEW "NUVPD"."VIEW_PM" ("PM_EQUIPO_CLAVE","PM_EQUIPO_TAG","PM_SERVICIO","PM_PROGRAMA_TIPO","PM_FRECUENCIA","PM_MULTIPLES_OT","PM_OT_MODELO","PM_PROCEDIMIENTO_STD","PM_CASOS","PM_FECHA_PROGRAMA","PM_FECHA_ULT_FINAL","PM_PORCENTAJE","PM_ESTADO","PM_OT_ASIGNADA","PM_PRIORIDAD","PM_INACTIVIDAD","PM_CATEGORIA1","PM_CATEGORIA2","PM_OBSERVACIONES","REGLA_PORCENTAJE_LIM","REGLA_ESTADO","REGLA_OT_ORDEN_TIPO","REGLA_OT_TIPO","REGLA_OT_PRIORIDAD","REGLA_ASO_ESTADO_DESDE","REGLA_ASO_ESTADO_A","REGLA_METODO_FECHA_INI_PROY","REGLA_IMPORTE_MUESTRA","MOD_KIT_CLAVE","MOD_KIT_NUMERO") AS
select
PM.FWNUMB as PM_EQUIPO_CLAVE
,PM.FWAPID as PM_EQUIPO_TAG

,PM.FWSRVT as PM_SERVICIO
,PM.FWPDFG AS PM_PROGRAMA_TIPO

,PM.FWFRIN as PM_FRECUENCIA
,PM.FWMLTW as PM_MULTIPLES_OT
,PM.FWDOCO as PM_OT_MODELO
,PM.FWKY as PM_PROCEDIMIENTO_STD
,PM.FWOCCU/100 as PM_CASOS

,case when PM.FWTDT <> 0 then TO_DATE(1900000 + PM.FWTDT,'yyyyddd') end as PM_FECHA_PROGRAMA
,case when PM.FWLCPD  <> 0 then TO_DATE(1900000 + PM.FWLCPD ,'yyyyddd') end as  PM_FECHA_ULT_FINAL
,PM.FWMPC AS PM_PORCENTAJE

,PM.FWMSTS as PM_ESTADO
,PM.FWWONA as PM_OT_ASIGNADA

,PM.FWMPRI as PM_PRIORIDAD
,PM.FWDNHR as PM_INACTIVIDAD

,PM.FWPMC1 as PM_CATEGORIA1
,PM.FWPMC2 as PM_CATEGORIA2
,PM.FWRMK as PM_OBSERVACIONES

,RUL.GOTHPC as REGLA_PORCENTAJE_LIM
,RUL.GOMSTS as REGLA_ESTADO
,RUL.GODCTO as REGLA_OT_ORDEN_TIPO
,RUL.GOTYPS as REGLA_OT_TIPO
,RUL.GOPRTS as REGLA_OT_PRIORIDAD
,RUL.GOGPFS AS REGLA_ASO_ESTADO_DESDE
,RUL.GOGPTS as REGLA_ASO_ESTADO_A
,RUL.GOPSDM as REGLA_METODO_FECHA_INI_PROY
,RUL.GOSDYS as REGLA_IMPORTE_MUESTRA

,OTM.WAITM as MOD_KIT_CLAVE
,OTM.WAAITM as MOD_KIT_NUMERO

from proddta.F1207 PM

left outer join proddta.F1393 RUL on 1=1
            and RUL.GONUMB = PM.FWNUMB
            and RUL.GOSRVT = PM.FWSRVT
            
left outer join proddta.F4801 OTM on 1=1
            and otm.WADOCO = pm.FWDOCO

where 1=1
;

]]>
         </code>
      </snippet>
      <snippet name="ListaRefacciones" description="">
         <code>
            <![CDATA[r-- KIT --

select
*
from (

    select
    CENTRO.MCCO as COMPANIA
    ,TRIM(LISTA.IXMMCU) as UN
    ,LISTA.IXTBM as TIPO
    ,LISTA.IXKIT as KIT_CLAVE
    ,LISTA.IXKITL as KIT_NUMERO
    ,KITS.IMDSC1 as KIT_DESC
    ,LISTA.IXUOM as KIT_UDM
    
    ,LISTA.IXITM as ITEM_CLAVE
    ,LISTA.IXLITM as ITEM_NUMERO
    ,ITEM.IMDSC1 as ITEM_DESC
    ,LISTA.IXQNTY/10000 as CANTIDAD
    ,LISTA.IXUM as ITEM_UDM
          
    ,case when LISTA.IXEFFF <> 0 then TO_DATE(1900000 + LISTA.IXEFFF,'yyyyddd') end as FECHA_EFECTIVA_INI
    ,case when LISTA.IXEFFT <> 0 then TO_DATE(1900000 + LISTA.IXEFFT,'yyyyddd') end as FECHA_EFECTIVA_FIN
    
    from PRODDTA.F3002 LISTA
    
    /*  ITEM MASTER (CATALOGO) - KITS
    --------------------------------------------------------------------------------*/   
    left outer join PRODDTA.F4101 KITS on 1=1
                and KITS.IMITM = LISTA.IXKIT
                
    /*  ITEM MASTER (CATALOGO) - ARTICULOS
    --------------------------------------------------------------------------------*/   
    left outer join PRODDTA.F4101 ITEM on 1=1
                and ITEM.IMITM = LISTA.IXITM                
                
    /*  UNIDADES DE NEGOCIO (CATALOGO)
    --------------------------------------------------------------------------------*/                
    left outer join PRODDTA.F0006 CENTRO on 1=1
                AND CENTRO.MCMCU = IXMMCU
        
    order by 
      COMPANIA
      ,UN
      ,KIT_NUMERO
      ,ITEM_NUMERO
)
where 1=1
and COMPANIA = '00004'

;



select
LISTA.IXTBM as "Type Bill of Material"
,LISTA.IXKITA as "3rd Item Number-Kit"
,LISTA.IXMMCU as "Branch"
,LISTA.IXLITM as "2nd Item Number"
,LISTA.IXAITM as "3rd Item Number"
,LISTA.IXCMCU as "Component Branch"
,LISTA.IXCPNT as "Component Line Number"
,LISTA.IXPRTA as "Partials Allowed (Y/N)"
,LISTA.IXUM as "Unit of Measure"
,LISTA.IXBQTY as "Units-Batch Quantity"
,LISTA.IXUOM as "Unit of Measure as Input"
,LISTA.IXITC as "Issue Type Code"
,LISTA.IXFTRC as "Required"
,LISTA.IXOPTK as "Optional Item (Kit)"
,LISTA.IXFORV as "Default Component"
,LISTA.IXCSTM as "Component Costing Method"
,LISTA.IXCSMP as "Costing Method-Purchasing"
,LISTA.IXORDW as "Order With"
,LISTA.IXCOTY as "Component Type"
,LISTA.IXFRMP as "From Potency"
,LISTA.IXTHRP as "Thru Potency"
,LISTA.IXFRGD as "From Grade"
,LISTA.IXTHGD as "Thru Grade"
,LISTA.IXOPSQ as "Sequence Number-Operations"
,LISTA.IXBSEQ as "SorszÃ¡m-BuborÃ©k sorszÃ¡m"
,LISTA.IXFTRP as "Feature Planned Percent"
,LISTA.IXF$RP as "Feature Cost Percent"
,LISTA.IXRSCP as "Resource Percent"
,LISTA.IXSCRP as "Percent-Percent of Scrap"
,LISTA.IXREWP as "Percent-Rework"
,LISTA.IXASIP as "Percent-As is"
,LISTA.IXSTPP as "Operation Scrap Percent"
,LISTA.IXLOVD as "Leadtime Offset Days"
,LISTA.IXECO as "ECO Number"
,LISTA.IXECTY as "Engineering Change Reason"

,LISTA.IXLNTY as "Line Type"
,LISTA.IXPRIC as "Unit Price per Primary"
,LISTA.IXUNCS as "Amount-Unit Cost"
,LISTA.IXSHNO as "Message Number"
,LISTA.IXOMCU as "Project Business Unit"
,LISTA.IXOBJ as "Object Account"
,LISTA.IXSUB as "Subsidiary"
,LISTA.IXBREV as "Bill Revision Level"
,LISTA.IXCMRV as "Component Revision Level"
,LISTA.IXRVNO as "Last Revision No."
,LISTA.IXUUPG as "Item Number-Use Up/Go To"
,LISTA.IXURCD as "User Reserved Code"
,LISTA.IXURDT as "User Reserved Date"
,LISTA.IXURAT as "User Reserved Amount"
,LISTA.IXURRF as "User Reserved Reference"
,LISTA.IXURAB as "User Reserved Number"
,LISTA.IXUSER as "User ID"
,LISTA.IXPID as "Program ID"
,LISTA.IXJOBN as "Work Station ID"
,LISTA.IXUPMJ as "Date-Updated"
,LISTA.IXTDAY as "Time of Day"
,LISTA.IXAING as "Active Ingredient Flag"
,LISTA.IXSUCO as "Substitute Counter"
,LISTA.IXSTRC as "Consumption Start"
,LISTA.IXENDC as "Consumption End"
,LISTA.IXAPSC as "Constraints Flag"
,LISTA.IXCPNB as "Component Line Number BOM"
,LISTA.IXBCHAR as "Lean Superflush Flag"
,LISTA.IXBOSTR as "Prep Code"
from CRPDTA.F3002 LISTA
WHERE 1=1
and IXKITA like '%KIT-500HRS-YAC1%'
and IXMMCU  like '%C01ALH%'
;




--,LISTA.IXSBNT as "Substitute Item Sequence Number"
--,LISTA.IXQNTY as "Quantity-Standard Required Quantity"
--,LISTA.IXFVBT as "FLISTA.ixed or Variable Batch Size"
--,LISTA.IXFSER as "Effective From Serial Number"
--,LISTA.IXTSER as "Effective Thru Serial Number"
--,LISTA.IXFORQ as "FLISTA.ixed or Variable Quantity"
--,LISTA.IXCOBY as "Co-Products/By-Products/Intermediate"
--,LISTA.IXCPYP as "Percent-Cumulative Planned Yield"
--,LISTA.IXECOD as "Date-Engineering Change Date"
--,LISTA.IXPCTK as "Percent Assembly Sales Price"
--,LISTA.IXBSEQAN as "Bubble Sequence Alpha Numeric"
]]>
         </code>
      </snippet>
      <snippet name="Mano de Obra" description="">
         <code>
            <![CDATA[-- MANO DE OBRA
select
trim(IRMMCU) as UN
,IRTRT as TIPO
,IRKIT as KIT_CLAVE
,IRKITL as KIT_NUMERO
,IRUOM as KIT_UDM

,NULL AS ITEM_CLAVE
,IRMCU as ITEM_NUMERO
,IRDSC1 as ITEM_DESC
,IRRUNL/100 as CANTIDAD
,IRTIMB as ITEM_UDM

,IREFFF as FECHA_EFECTIVA_INI
,IREFFT as FECHA_EFECTIVA_FIN

from CRPDTA.F3003 --PRODDTA.F3003 OBRA
where 1=1
and IRKITL like '%KIT-500HRS-YAC1%'
and IRMMCU  like '%C01ALH%'
;]]>
         </code>
      </snippet>
      <snippet name="Ordenes de Trabajo" description="">
         <code>
            <![CDATA[select
OT.WADCTO AS TIPO
,OT.WADOCO AS "CLAVE"




,OT.WAPARS AS "Number-Parent WO Number"
,OT.WATYPS AS "Type-W.O."
,OT.WAPRTS AS "Priority-W.O."
,OT.WADL01 AS "Description"
,OT.WASTCM AS "Status-Comment"
,OT.WACO AS "Company"
,OT.WAMCU AS "Business Unit"
,OT.WAMMCU AS "Branch"
,OT.WALOCN AS "Location"
,OT.WAAISL AS "Aisle"
,OT.WABIN AS "Bin"
,OT.WASRST AS "Status Code W.O."
,OT.WADCG AS "Date-Status Changed"
,OT.WASUB AS "Subsidiary"
,OT.WAAN8 AS "Address Number"
,OT.WAANO AS "Address Number-Originator"
,OT.WAANSA AS "Address Number-Manager"
,OT.WAANPA AS "Supervisor"
,OT.WAANP AS "Address Number-Assigned To"
,OT.WADPL AS "Date-W.O. Planned Completed"
,OT.WAANT AS "Address Number-Inspector"
,OT.WANAN8 AS "Next Address Number"
,OT.WATRDJ AS "Date-Order/Transaction"
,OT.WASTRT AS "Date-Start (Julian)"
,OT.WADRQJ AS "Date-Requested"
,OT.WASTRX AS "Date-Completion (Julian)"
,OT.WADAP AS "Date-Assigned to"
,OT.WADAT AS "Date-Assigned to Inspector"
,OT.WAPPDT AS "Date-Paper Printed Date"
,OT.WAWR01 AS "Categories-Work Order 01"
,OT.WAWR02 AS "Categories-Work Order 02"
,OT.WAWR03 AS "Categories-Work Order 03"
,OT.WAWR04 AS "Categories-Work Order 04"
,OT.WAWR05 AS "Categories-Work Order 05"
--,OT.WAWR06 AS "EnterpriseOne Consulting-Status"
--,OT.WAWR07 AS "EnterpriseOne Consulting-Service Type"
--,OT.WAWR08 AS "EnterpriseOne Consulting-Skill Type"
--,OT.WAWR09 AS "E1 Consulting-Experience Level"
,OT.WAWR10 AS "Categories-Work Order 10"
,OT.WAVR01 AS "Reference"
,OT.WAVR02 AS "Reference 2"
,OT.WAAMTO AS "Amount-Estimated"
,OT.WASETC AS "Crew Size"
,OT.WABRT AS "Revenue Rate Markup Override"
,OT.WAPAYT as "Pay/Deduction/Benefit Type"
--,OT.WAAMTC AS "Amount-Change to Original Dollars"
,OT.WAHRSO AS "Hours-Estimated"
,OT.WAHRSC AS "Hours-Change to Original Hours"
,OT.WAAMTA AS "Amount-Actual"
,OT.WAHRSA AS "Hours-Actual"
,OT.WAITM AS "Item Number-Short"
,OT.WAAITM AS "3rd Item Number"
,OT.WALITM AS "2nd Item Number"
,OT.WANUMB AS "Asset Item Number"
,OT.WAAPID as "Unit or Tag Number"
--,OT.WAUORG AS "Units-Order/Transaction Quantity"
--,OT.WASOBK AS "Units-Qty Backordered/Held"
--,OT.WASOCN AS "Units-Quantity Canceled/Scrapped"
,OT.WASOQS AS "Quantity Shipped"
,OT.WAQTYT AS "Units-Shipped to Date"
,OT.WAUOM AS "Unit of Measure as Input"
,OT.WASHNO AS "Message Number"
,OT.WAPBTM AS "Time-Beginning (HH/MM/SS)"
,OT.WATBM AS "Type Bill of Material"
,OT.WATRT AS "Type of Routing"
,OT.WASHTY AS "WO Pick List Printed"
,OT.WAPEC AS "Posting Edit"
,OT.WAPPFG AS "Variance Flag"
,OT.WABM AS "Bill of Material (N)"
,OT.WARTG AS "Route Sheet (N)"
,OT.WASPRT AS "Work Order Flash Message"
,OT.WAUNCD AS "Work Order Freeze Code"
,OT.WAINDC AS "Indented Code"
,OT.WARESC AS "Resequence Code"
,OT.WAMOH AS "Amount-Miles or Hours (units)"
,OT.WATDT AS "Date-Scheduled Tickler"
,OT.WAPOU AS "Amount-Memo Budget Changes"
,OT.WAPC AS "Percent Complete"
,OT.WALTLV AS "Leadtime Level"
,OT.WALTCM AS "Leadtime Cumulative"
,OT.WACTS1 AS "Hours-Unaccounted Direct Labor"
,OT.WALOTN AS "Lot/Serial Number"
,OT.WALOTP AS "Lot Potency"
,OT.WALOTG as "Lot Grade"
--,OT.WARAT1 AS "Ratio-Critical Ratio Priority 1"
--,OT.WARAT2 AS "Ratio-Critical Ratio Priority 2"
,OT.WADCT AS "Document Type"
,OT.WASBLI AS "Subledger Inactive Code"
,OT.WARKCO AS "Company-Key (Related Order)"
,OT.WABREV AS "Bill Revision Level"
,OT.WARREV AS "Routing Revision Level"
,OT.WADRWC AS "Drawing Change"
,OT.WARTCH AS "Routing Change"
,OT.WAPNRQ AS "New Part Number"
,OT.WAREAS AS "Reason for ECO"
,OT.WAPHSE AS "Phase In"
,OT.WAXDSP AS "Existing Disposition"
,OT.WABOMC AS "BOM Change"
,OT.WAURCD AS "User Reserved Code"
,OT.WAURDT AS "User Reserved Date"
,OT.WAURAT AS "User Reserved Amount"
,OT.WAURAB AS "User Reserved Number"
,OT.WAURRF as "User Reserved Reference"
,OT.WAUSER AS CREADOR_CLAVE
,OT.WAUPMJ AS "Date-Updated"
,OT.WATDAY AS "Time of Day"
,OT.WAAAID AS "Parent Number"
,OT.WANTST AS "Next Status-W.O."
,OT.WAXRTO AS "Criticality-Work Order"
,OT.WAESDN AS "Estimated Downtime Hours"
,OT.WAACDN AS "Actual Downtime Hours"

--,OT.WAAMLC AS "Amount-Estimated Labor"
--,OT.WAAMMC AS "Amount-Estimated Material"
--,OT.WAAMOT AS "Amount-Estimated Other"
--,OT.WALBAM as "Amount-Actual Labor"
--,OT.WAMTAM AS "Amount-Actual Material"
from CRPDTA.F4801 OT
where WADCTO = 'WJ'
--and WADOCO = '24'
;



/*
,OT.WAPID AS "Program ID"
,OT.WAJOBN as "Work Station ID"
,OT.WASAID AS "Service Address Number"
,OT.WAMPOS as "Meter Position"
,OT.WAAPRT as "Approval Type"
,OT.WASFXO AS "Order Suffix"
,OT.WARCTO AS "Related PO/SO/WO Order Type"
,OT.WARORN AS "Related PO/SO/WO Number"
,OT.WALNID AS "Line Number"
,OT.WAPTWO AS "Peg to Work Order"

*/]]>
         </code>
      </snippet>
      <snippet name="Procedimiento Estandar" description="">
         <code>
            <![CDATA[

SELECT
*
FROM (
        select
        PSTH.CESY as CD_PRODUCTO
        ,PSTH.CERT as CD_DEFINIDO
        ,PSTH.CEKY as CODIGO
        ,PSTH.CEDL01 as DESCRIPCION
        ,PSTD.CFLINS/100 as MENSAJE_LINEA
        ,PSTD.CFDS80 AS MENSAJE_DESC
        from PRODDTA.F00191 PSTH
        left outer join PRODDTA.F00192 PSTD on 1=1
                    and PSTD.CFSY = PSTH.CESY
                    and PSTD.CFRT = PSTH.CERT
                    AND PSTD.CFKY = PSTH.CEKY
        
        order by 
          PSTH.CEKY
          ,PSTD.CFLINS
     )
where 1=1
and CODIGO = 'PCMEC000'
;

/* Header of Standard Procedures */
select
*
from PRODDTA.F00191  
;

/* Detail of Standard Procedures */
select
*
from PRODDTA.F00192
;]]>
         </code>
      </snippet>
      <snippet name="ProgramacionMantto" description="">
         <code>
            <![CDATA[select
PM.FWNUMB as EQUIPO_CLAVE
,PM.FWAPID as EQUIPO_TAG

,PM.FWSRVT as SERVICIO
,PM.FWPDFG AS PROGRAMA_TIPO

,PM.FWFRIN as FRECUENCIA
,PM.FWMLTW as MULTIPLES_OT
,PM.FWDOCO as OT_MODELO
,PM.FWKY as PROCEDIMIENTO_STD
,PM.FWOCCU/100 as CASOS

,CASE WHEN PM.FWTDT <> 0 THEN TO_DATE(1900000 + PM.FWTDT,'yyyyddd') END AS FECHA_PROGRAMA
,case when PM.FWLCPD  <> 0 then TO_DATE(1900000 + PM.FWLCPD ,'yyyyddd') end as  FECHA_ULT_FINAL
,PM.FWMPC AS PORCENTAJE

,PM.FWMSTS as ESTADO
,PM.FWWONA as OT_ASIGNADA

,PM.FWMPRI as PRIORIDAD
,PM.FWDNHR AS INACTIVIDAD

,PM.FWPMC1 as CATEGORIA1
,PM.FWPMC2 as CATEGORIA2
,PM.FWRMK as OBSERVACIONES

from CRPDTA.F1207 PM
WHERE 1=1
and FWNUMB = '11658'
and FWMSTS in ('01','50')
AND FWSRVT = 'PEMSE003'
;

--,PM.FWANP AS "Address Number-Assigned To"
--,PM.FWAAID AS "Parent Number"

--,PM.FWPDFL AS "Alert Level"
--,PM.FWUKID AS "Unique Key ID (Internal)"
--,PM.FWTOLU as "Tolerance Limit-Upper"
--,PM.FWTOLL AS "Tolerance Limit-Lower"
--,PM.FWUSER AS "User ID"
--,PM.FWPID AS "Program ID"
--,PM.FWUPMJ as "Date-Updated"
--,PM.FWJOBN as "Work Station ID"
--,PM.FWSRVM4 AS "Service Meter 4"
--,PM.FWLSTM4 AS "Last Completed Meter 4"
--,PM.FWCPLM4 AS "Completed Meter 4"
--,PM.FWORGM4 AS "Original Meter 4"
--,PM.FWSRVM5 AS "Service Meter 5"
--,PM.FWLSTM5 AS "Last Completed Meter 5"
--,PM.FWCPLD as "Date-Completed Date"
--,PM.FWCPLM5 AS "Completed Meter 5"
--,PM.FWORGM5 AS "Original Meter 5"
--,PM.FWSRVM6 AS "Service Meter 6"
--,PM.FWLSTM6 AS "Last Completed Meter 6"
--,PM.FWCPLM6 AS "Completed Meter 6"
--,PM.FWMCU AS "Business Unit"
--,PM.FWORGM6 as "Original Meter 6"
--,PM.FWCRTL AS "Criticality"
--,PM.FWORGM AS "Original Miles"
--,PM.FWORGH as "Original Hours"
--,PM.FWASID as EQUIPO_SERIE
--,PM.FWORGF AS "Original Fuel"
--,PM.FWSRVD AS "Service Days"
--,PM.FWSRVM AS "Service Miles"
--,PM.FWSRVH AS "Service Fuel"
--,PM.FWCPLM AS "Completed Miles"
--,PM.FWCPLH AS "Consumed Fuel"
--,PM.FWLSTM as "Last Completed Miles"
--,PM.FWLSTH AS "Last Completed Fuel Consumed"
--,PM.FWSRVF as "Service Hours"
--,PM.FWCPLF AS "Completed Hours"
--,PM.FWLSTF AS "Last Completed Hours"
--,PM.FWUPMT AS "Time-Last Updated"

--,PM.FWPNST AS "Date-Planned Start (Julian)"
--,PM.FWHLDD AS "Date-Hold"
--,PM.FWSPHR AS "Hours-Specific"
--,PM.FWSPWK AS "Weeks-Specific"
--,PM.FWSPMN AS "Months-Specific"
--,PM.FWWK as "Week Number"
--,PM.FWSPDW as "Day of the Week"]]>
         </code>
      </snippet>
   </group>
   <group category="0 - REPORTES" language="PLSQL">
      <snippet name="CXC y sus cuentas afectadas" description="">
         <code>
            <![CDATA[select
*
from  (
      select 
      FACTURAS.BENEFICIARIO,
      NVL (CLIENTE.ABALPH, '-') AS BENEFICIARIO_DESC,
      NVL (ASIENTOS.CUENTA_UN, '-') AS UN,
      NVL (TRIM (CENTRO.MCDL01), '-') AS UN_DESC,
      NVL (TRIM (CENTRO.MCRP01), '-') AS UN_PROYECTO,
      NVL (TRIM (PROYECTO.DRDL01), '-') AS UN_PROYECTO_DESC,
      NVL (TRIM (PROYECTO.DRDL02), '-') AS UN_PROYECTO_ZONA,
      NVL (TRIM (PROYECTO.DRSPHD), '-') AS UN_PROYECTO_TIPO,
      NVL (TRIM (PROYECTO.DRHRDC), '-') AS UN_PROYECTO_ESTADO,
      FACTURAS.DOC_COMPANIA,
      FACTURAS.DOC_TIPO,
      FACTURAS.DOC,
      FACTURAS.FECHA_LM,
      FACTURAS.MONTO_TOTAL_MX,
      (FACTURAS.MONTO_IMPONIBLE_MX + FACTURAS.MONTO_NOIMPONIBLE_MX) as MONTO_SUBTOTAL_MX,
      FACTURAS.MONTO_IMPUESTO_MX,
      FACTURAS.MONTO_PENDIENTE_MX,
      NVL (ASIENTOS.CUENTA, '-') AS CUENTA,
      NVL (ASIENTOS.CUENTA_NUMERO, '-') AS CUENTA_NUMERO,
      NVL (ASIENTOS.CUENTA_DESC, '-') as CUENTA_DESC,
      NVL (ASIENTOS.CUENTA_CLASE_DESC, 'SIN CLASIFICACION') AS CUENTA_CLASE_DESC,
      NVL (ASIENTOS.CUENTA_TIPO, 'SIN TIPO') AS CUENTA_TIPO,
      NVL (ASIENTOS.CUENTA_FLUJO, 'SIN FLUJO') as CUENTA_FLUJO,
      NVL (ASIENTOS.MONTO, 0) * -1 AS CUENTA_MONTO
      
      from NUVPD.VIEW_IFACTURAS FACTURAS
      
      left outer join NUVPD.VIEW_IASIENTOS ASIENTOS on 1=1
                   and ASIENTOS.DOC_COMPANIA = FACTURAS.DOC_COMPANIA
                   AND ASIENTOS.DOC_TIPO = FACTURAS.DOC_TIPO
                   and ASIENTOS.DOC = FACTURAS.DOC
                   
      left outer join PRODDTA.F0006 CENTRO on 1=1 
                  and TRIM (CENTRO.MCMCU) = ASIENTOS.CUENTA_UN
      
      left outer join PRODCTL.F0005 PROYECTO on  1=1   
                  and PROYECTO.DRSY = '00'
                  AND PROYECTO.DRRT = '01'
                  AND TRIM (PROYECTO.DRKY) = TRIM (CENTRO.MCRP01)
      
      left outer join PRODDTA.F0101 CLIENTE on 1=1
                  and CLIENTE.ABAN8 = FACTURAS.BENEFICIARIO
      
      
      where 1 = 1 
      
      --AND FACTURAS.MONTO_PENDIENTE_MX > 0;
  )
where 1=1

and CUENTA_FLUJO  = 'ING'
and un_proyecto_tipo = 'P'
;]]>
         </code>
      </snippet>
   </group>
   <group category="0 - INDICARES PORFIRIO" language="PLSQL">
      <snippet name="Ordenes" description="">
         <code>
            <![CDATA[select
    ORDEN.COMPANIA
    --,ORDEN.COMPANIA_DESC
    ,TO_CHAR(APROBACION.AUTORIZACION_FECHA, 'YYYY') as ANIO
    ,TO_CHAR(APROBACION.AUTORIZACION_FECHA, 'MM') as PERIODO
    ,ORDEN.TIPO as DOC_TIPO
    --,ORDEN.TIPO_DESC AS DOC_TIPO_DESC
    ,ORDEN.NUMERO AS DOC_NUMERO
    
    ,NVL(APROBACION.AUTORIZADOR,'--') as AUTORIZADOR
    ,NVL(APROBACION.AUTORIZADOR_DESC,'--') as AUTORIZADOR_DESC
    ,APROBACION.AUTORIZACION_FECHA as AUTORIZA_FECHA

    ,ORDEN.PROYECTO
    ,ORDEN.PROYECTO_DESC

    ,ORDEN.UN
    ,ORDEN.UN_DESC
    ,NVL(ICA.OBJETO,'--') as CUENTA_OBJETO
    ,NVL(ICA.AUX,'--') as CUENTA_AUXILIAR
    ,NVL(CUENTA.DESCRIPCION,'--') as CUENTA_DESC
    ,NVL(CUENTA.TIPO,'--') as CUENTA_TIPO
    ,NVL(CUENTA.TIPO_DESC,'--') as CUENTA_TIPO_DESC   
    ,NVL(CUENTA.CLASE,'--') as CUENTA_CLASE
    ,NVL(CUENTA.CLASE_DESC,'--') as CUENTA_CLASE_DESC
    ,ORDEN.TOTAL_MX as MONTO_MX
    
    ,case 
        when TO_CHAR(APROBACION.AUTORIZACION_FECHA, 'MM') = '01' then ORDEN.TOTAL_MX
        else 0
    end ENERO_MX
    
    ,case 
        when TO_CHAR(APROBACION.AUTORIZACION_FECHA, 'MM') = '02' then ORDEN.TOTAL_MX
        else 0
    end FEBRERO_MX    
    
    ,case 
        when TO_CHAR(APROBACION.AUTORIZACION_FECHA, 'MM') = '03' then ORDEN.TOTAL_MX
        else 0
    end MARZO_MX    
    
    ,case 
        when TO_CHAR(APROBACION.AUTORIZACION_FECHA, 'MM') = '04' then ORDEN.TOTAL_MX
        else 0
    end ABRIL_MX    
    
    ,case 
        when TO_CHAR(APROBACION.AUTORIZACION_FECHA, 'MM') = '05' then ORDEN.TOTAL_MX
        else 0
    end MAYO_MX    
    
    ,case 
        when TO_CHAR(APROBACION.AUTORIZACION_FECHA, 'MM') = '06' then ORDEN.TOTAL_MX
        else 0
    end JUNIO_MX    
    
    ,case 
        when TO_CHAR(APROBACION.AUTORIZACION_FECHA, 'MM') = '07' then ORDEN.TOTAL_MX
        else 0
    end JULIO_MX    
    
    ,case 
        when TO_CHAR(APROBACION.AUTORIZACION_FECHA, 'MM') = '08' then ORDEN.TOTAL_MX
        else 0
    end AGOSTO_MX    
    
    ,case 
        when TO_CHAR(APROBACION.AUTORIZACION_FECHA, 'MM') = '09' then ORDEN.TOTAL_MX
        else 0
    end SEPTIEMBRE_MX    
    
    ,case 
        when TO_CHAR(APROBACION.AUTORIZACION_FECHA, 'MM') = '10' then ORDEN.TOTAL_MX
        else 0
    end OCTUBRE_MX    
    
    ,case 
        when TO_CHAR(APROBACION.AUTORIZACION_FECHA, 'MM') = '11' then ORDEN.TOTAL_MX
        else 0
    end NOVIEMBRE_MX    
    
    ,case 
        when TO_CHAR(APROBACION.AUTORIZACION_FECHA, 'MM') = '12' then ORDEN.TOTAL_MX
        else 0
    end DICIEMBRE_MX       
    
from NUVPD.VIEW_ORDENES orden

left outer join (
                    select
                      MLCO as COMPANIA
                      ,MLDCT as DOC_TIPO
                      ,TRIM(MLGLPT) as GLCLASS
                      ,TRIM(MLOBJ) as OBJETO
                      ,NVL(TRIM(MLSUB),'--') as AUX
                    from PRODDTA.F4095 where 1=1
                    and MLANUM in ('4310','4315')
                    group by
                      MLCO
                      ,MLDCT
                      ,MLGLPT
                      ,MLOBJ
                      ,MLSUB
                ) ICA on 1=1
            and ICA.COMPANIA = ORDEN.COMPANIA
            and ICA.DOC_TIPO = ORDEN.TIPO
            and ICA.GLCLASS = ORDEN.ITEM_GLCLASS

left outer join NUVPD.VIEW_CUENTAS CUENTA on 1=1
            and CUENTA.UN = ORDEN.UN
            and CUENTA.OBJETO =  ICA.OBJETO
            AND CUENTA.AUXILIAR = ICA.AUX

left outer join (
                  select
                  OC_COMPANIA
                  ,OC_TIPO
                  ,OC
                  ,OC_SUFIX
                  ,AUTORIZACION_FECHA
                  ,AUTORIZADOR
                  ,AUTORIZADOR_DESC
                  ,ORDEN
                  ,MAX(ORDEN) OVER (PARTITION BY OC_COMPANIA, OC_TIPO, OC, OC_SUFIX ) AS ULTIMA_AUTORIZA
                  from NUVPD.VIEW_AUTORIZACIONES where 1=1
                  
                ) APROBACION on 1=1
            and APROBACION.OC_COMPANIA = ORDEN.COMPANIA
            and APROBACION.OC_TIPO = ORDEN.TIPO
            and APROBACION.OC = ORDEN.NUMERO
            and APROBACION.OC_SUFIX = ORDEN.SUFIX
            AND APROBACION.ORDEN = APROBACION.ULTIMA_AUTORIZA
where 1=1
and ORDEN.TIPO in ('OS','OP','OX','US','UP','UX','TS','SA')
and ORDEN.ESTADO_ULTIMO > '230'
and ORDEN.ESTADO_ULTIMO <> '980'
AND APROBACION.AUTORIZACION_FECHA >= '01/01/2016'

ORDER BY AUTORIZA_FECHA
;]]>
         </code>
      </snippet>
      <snippet name="Ingresos CXC" description="">
         <code>
            <![CDATA[select
*
from  (
        select 
        FACTURAS.DOC_COMPANIA
        ,TO_CHAR(FACTURAS.FECHA_LM, 'YYYY') as ANIO
        ,TO_CHAR(FACTURAS.FECHA_LM, 'MM') as PERIODO      
        ,FACTURAS.DOC_TIPO
        --TIPO DESC
        ,FACTURAS.DOC AS DOC_NUMERO
        
        -- NO HAY AUTORIZA
        -- NO HAY AUTORIZA
        ,FACTURAS.FECHA_LM
        
        ,NVL (TRIM (CENTRO.MCRP01), '-') AS UN_PROYECTO
        ,NVL (TRIM (PROYECTO.DRDL01), '-') as UN_PROYECTO_DESC
        
        ,NVL (ASIENTOS.CUENTA_UN, '-') AS UN
        ,NVL (TRIM (CENTRO.MCDL01), '-') as UN_DESC
        
        ,NVL (ASIENTOS.CUENTA_NUMERO, '-') as CUENTA_NUMERO
        ,NVL (ASIENTOS.CUENTA_DESC, '-') as CUENTA_DESC
        ,NVL (ASIENTOS.CUENTA_TIPO, '-') as CUENTA_TIPO
        ,NVL (ASIENTOS.CUENTA_TIPO_DESC, '-') as CUENTA_TIPO_DESC
        ,NVL (ASIENTOS.CUENTA_CLASE, '--') as CUENTA_CLASE
        ,NVL (ASIENTOS.CUENTA_CLASE_DESC, 'SIN CLASIFICACION') as CUENTA_CLASE_DESC
      
        ,(FACTURAS.MONTO_IMPONIBLE_MX + FACTURAS.MONTO_NOIMPONIBLE_MX) as MONTO_MX     

        ,case 
            when TO_CHAR(FACTURAS.FECHA_LM, 'MM') = '01' then (FACTURAS.MONTO_IMPONIBLE_MX + FACTURAS.MONTO_NOIMPONIBLE_MX)
            else 0
        end ENERO_MX
        
        ,case 
            when TO_CHAR(FACTURAS.FECHA_LM, 'MM') = '02' then (FACTURAS.MONTO_IMPONIBLE_MX + FACTURAS.MONTO_NOIMPONIBLE_MX)
            else 0
        end FEBRERO_MX    
        
        ,case 
            when TO_CHAR(FACTURAS.FECHA_LM, 'MM') = '03' then (FACTURAS.MONTO_IMPONIBLE_MX + FACTURAS.MONTO_NOIMPONIBLE_MX)
            else 0
        end MARZO_MX    
        
        ,case 
            when TO_CHAR(FACTURAS.FECHA_LM, 'MM') = '04' then (FACTURAS.MONTO_IMPONIBLE_MX + FACTURAS.MONTO_NOIMPONIBLE_MX)
            else 0
        end ABRIL_MX    
        
        ,case 
            when TO_CHAR(FACTURAS.FECHA_LM, 'MM') = '05' then (FACTURAS.MONTO_IMPONIBLE_MX + FACTURAS.MONTO_NOIMPONIBLE_MX)
            else 0
        end MAYO_MX    
        
        ,case 
            when TO_CHAR(FACTURAS.FECHA_LM, 'MM') = '06' then (FACTURAS.MONTO_IMPONIBLE_MX + FACTURAS.MONTO_NOIMPONIBLE_MX)
            else 0
        end JUNIO_MX    
        
        ,case 
            when TO_CHAR(FACTURAS.FECHA_LM, 'MM') = '07' then (FACTURAS.MONTO_IMPONIBLE_MX + FACTURAS.MONTO_NOIMPONIBLE_MX)
            else 0
        end JULIO_MX    
        
        ,case 
            when TO_CHAR(FACTURAS.FECHA_LM, 'MM') = '08' then (FACTURAS.MONTO_IMPONIBLE_MX + FACTURAS.MONTO_NOIMPONIBLE_MX)
            else 0
        end AGOSTO_MX    
        
        ,case 
            when TO_CHAR(FACTURAS.FECHA_LM, 'MM') = '09' then (FACTURAS.MONTO_IMPONIBLE_MX + FACTURAS.MONTO_NOIMPONIBLE_MX)
            else 0
        end SEPTIEMBRE_MX    
        
        ,case 
            when TO_CHAR(FACTURAS.FECHA_LM, 'MM') = '10' then (FACTURAS.MONTO_IMPONIBLE_MX + FACTURAS.MONTO_NOIMPONIBLE_MX)
            else 0
        end OCTUBRE_MX    
        
        ,case 
            when TO_CHAR(FACTURAS.FECHA_LM, 'MM') = '11' then (FACTURAS.MONTO_IMPONIBLE_MX + FACTURAS.MONTO_NOIMPONIBLE_MX)
            else 0
        end NOVIEMBRE_MX    
        
        ,case 
            when TO_CHAR(FACTURAS.FECHA_LM, 'MM') = '12' then (FACTURAS.MONTO_IMPONIBLE_MX + FACTURAS.MONTO_NOIMPONIBLE_MX)
            else 0
        end DICIEMBRE_MX

        from NUVPD.VIEW_IFACTURAS FACTURAS
          
        left outer join NUVPD.VIEW_IASIENTOS ASIENTOS on 1=1
                   and ASIENTOS.DOC_COMPANIA = FACTURAS.DOC_COMPANIA
                   AND ASIENTOS.DOC_TIPO = FACTURAS.DOC_TIPO
                   and ASIENTOS.DOC = FACTURAS.DOC
                   
        left outer join PRODDTA.F0006 CENTRO on 1=1 
                  and TRIM (CENTRO.MCMCU) = ASIENTOS.CUENTA_UN
        
        left outer join PRODCTL.F0005 PROYECTO on  1=1   
                  and PROYECTO.DRSY = '00'
                  AND PROYECTO.DRRT = '01'
                  AND TRIM (PROYECTO.DRKY) = TRIM (CENTRO.MCRP01)
        
        left outer join PRODDTA.F0101 CLIENTE on 1=1
                  and CLIENTE.ABAN8 = FACTURAS.BENEFICIARIO
        
        where 1 = 1 
        and NVL(ASIENTOS.CUENTA_FLUJO, 'SIN FLUJO') = 'ING'
        --AND FACTURAS.MONTO_PENDIENTE_MX > 0;
  )
where 1=1
and FECHA_LM >= '01/01/2016'
--and UN_PROYECTO_TIPO = 'P'
;]]>
         </code>
      </snippet>
      <snippet name="Egresos CXP" description="">
         <code>
            <![CDATA[select
*
FROM (
    select
    FACTURA.COMPANIA  AS DOC_COMPANIA
    ,FACTURA.ANIO
    ,FACTURA.PERIODO
    ,FACTURA.TIPO as DOC_TIPO
    ,FACTURA.NUMERO as DOC_NUMERO
    ,FACTURA.FECHA_LM as DOC_FECHA_LM
    
    ,ASIENTO.CUENTA_UN
    ,ASIENTO.CUENTA_NUMERO
    ,ASIENTO.CUENTA_DESC
    ,ASIENTO.CUENTA_TIPO
    ,ASIENTO.CUENTA_TIPO_DESC
    ,ASIENTO.CUENTA_CLASE
    ,ASIENTO.CUENTA_CLASE_DESC
    ,ASIENTO.CUENTA_FLUJO
    ,ASIENTO.CUENTA_FLUJO_DESC
    ,ASIENTO.MONTO AS MONTO_MX
    FROM (
            select
                COMPANIA
                ,ANIO
                ,PERIODO
                ,TIPO
                ,NUMERO
                ,FECHA_LM
                ,SUM(MONTO_IMPONIBLE_MX + MONTO_NOIMPONIBLE_MX) AS SUTOTAL_MX
            from NUVPD.VIEW_EFACTURAS WHERE 1=1
            and AJUSTE_TIPO <> 'PE'     --<- Quitamos los anulados ( registros marcados como anulados )
            and MONTO_TOTAL_MX > 0        --<- Quitamos los montos totales en pesos que esten en 0
            and FECHA_LM >= '01/01/2016'
            AND FECHA_LM <= '30/04/2016'
            group by
                COMPANIA
                ,ANIO
                ,PERIODO
                ,TIPO
                ,NUMERO
                ,FECHA_LM
    ) FACTURA
    
    left outer join NUVPD.VIEW_EASIENTOS ASIENTO on 1=1
                and ASIENTO.DOC_COMPANIA =  FACTURA.COMPANIA
                AND ASIENTO.DOC_TIPO = FACTURA.TIPO
                and ASIENTO.DOC = FACTURA.NUMERO
    
    order by FACTURA.COMPANIA, FACTURA.ANIO, FACTURA.PERIODO, FACTURA.NUMERO
) where 1=1


;


]]>
         </code>
      </snippet>
      <snippet name="Nomina" description="">
         <code>
            <![CDATA[select
DOC_COMPANIA
,ANIO
,PERIODO
,DOC_TIPO
,DOC as DOC_NUMERO
,FECHA_LM as DOC_FECHA_LM

,UN
,CUENTA_NUMERO
,CUENTA_DESC
,CUENTA_TIPO
,CUENTA_TIPO_DESC
,CUENTA_CLASE
,CUENTA_CLASE_DESC
,CUENTA_FLUJO
,CUENTA_FLUJO_DESC
,MONTO as MONTO_MX
from NUVPD.VIEW_ENOMINA where 1=1
and FECHA_LM >= '01/01/2016'
AND FECHA_LM <= '30/04/2016'

order by DOC_COMPANIA, ANIO, PERIODO, doc
;

]]>
         </code>
      </snippet>
   </group>
</snippets>
